package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-17T15:37:04.514981-04:00[America/New_York]
 * <br>
*  The generated test suite contains 65 tests
 * <br>
*  Covered targets: 1013
 * <br>
*  Used time: 1h 1m 30s
 * <br>
*  Needed budget for current results: 92%
 * <br>
*  
*/

public class EM_marketdefault_1234_Test_58_test_58_putOnDeliveryReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.market.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/market-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CART","CONTACTS","CUSTOMER_ORDER","PRODUCT","USER_ROLE","cart","cart_item"));
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (401) PUT:/customer/cart/delivery
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_58_putOnDeliveryReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .put(baseUrlOfSut + "/customer/cart/delivery?" + 
                    "included=false&" + 
                    "name=12+y.o.+Cask+Strength+Batch+6")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("Access is denied"))
                .body("'description'", containsString("uri=/customer/cart/delivery"))
                .body("'entityName'", nullValue())
                .body("'fieldErrors'.size()", equalTo(0));
    }
}
