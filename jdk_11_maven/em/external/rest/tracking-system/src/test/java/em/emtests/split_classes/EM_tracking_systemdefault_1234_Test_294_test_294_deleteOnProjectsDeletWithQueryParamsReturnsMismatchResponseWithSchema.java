package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-17T13:43:22.813939-04:00[America/New_York]
 * <br>
*  The generated test suite contains 341 tests
 * <br>
*  Covered targets: 1793
 * <br>
*  Used time: 1h 5m 1s
 * <br>
*  Needed budget for current results: 96%
 * <br>
*  
*/

public class EM_tracking_systemdefault_1234_Test_294_test_294_deleteOnProjectsDeletWithQueryParamsReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.com.pfa.app.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/tracking-system-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList("ASSIGNMENTS","DEPARTMENTS","EMPLOYEES","LOCATIONS","PROJECTS","USER_CREDENTIALS","assignments","departments","employees","locations","projects","user_credentials"));
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) DELETE:/app/api/projects/delete/{id}
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_294_deleteOnProjectsDeletWithQueryParamsReturnsMismatchResponseWithSchema() throws Exception {
        
        final Map<String,String> cookies_ROLE_EMP = given()
            .contentType("application/x-www-form-urlencoded")
            .body("username=selimhorri&password=test")
            .post(baseUrlOfSut + "/app/login")
            .then().extract().cookies();
            
        List<InsertionDto> insertions = sql().insertInto("LOCATIONS", 806L)
                .d("ADR", "\"p8y388\"")
                .d("POSTAL_CODE", "\"UELU3811UXYZ_\"")
                .d("CITY", "\"_EM_3796_XYZ_\"")
            .and().insertInto("DEPARTMENTS", 805L)
                .d("DEPARTMENT_NAME", "\"kW\"")
            .and().insertInto("EMPLOYEES", 804L)
                .d("FIRST_NAME", "\"6/JOCayQE\"")
                .d("LAST_NAME", "\"89YKnpwtrI\"")
                .d("EMAIL", "\"pMFf@Ny.SK\"")
                .d("PHONE", "\"Az\"")
                .d("JOB", "\"L9Srq9gd\"")
                .d("SALARY", "0.0")
            .and().insertInto("LOCATIONS", 803L)
                .d("ADR", "\"^\"")
                .d("POSTAL_CODE", "\"_EM_3781_XYZ_\"")
                .d("CITY", "\"rFZIzyz9Ok\"")
            .and().insertInto("DEPARTMENTS", 802L)
                .d("DEPARTMENT_NAME", "\"7uH2e7J\"")
            .and().insertInto("EMPLOYEES", 801L)
                .d("FIRST_NAME", "\"oIAFJXrqYo_YUGFMOb\"")
                .d("LAST_NAME", "\"_J8cBpHHMOMxg\"")
                .d("EMAIL", "\"hpSH@y.haY\"")
                .d("PHONE", "\"vCIIA7uJ3TKTB^n\"")
                .d("JOB", "\"_EM_3813_XYZ_\"")
                .d("SALARY", "2.04499714")
            .and().insertInto("LOCATIONS", 800L)
                .d("ADR", "\"_EM_3799_XYZ_\"")
                .d("POSTAL_CODE", "\"_EM_3814_XYZ_\"")
                .d("CITY", "\"_EMW340U]UYUU\"")
            .and().insertInto("DEPARTMENTS", 799L)
                .d("DEPARTMENT_NAME", "\"_EM_3801_XYZ_\"")
            .and().insertInto("EMPLOYEES", 798L)
                .d("FIRST_NAME", "\"VsQQaWEojs2JfpD\"")
                .d("LAST_NAME", "\"_EM_3827_XYZ_\"")
                .d("EMAIL", "\"UcT@Ilm.WiX\"")
                .d("PHONE", "\"_EM_3?84_UYU_\"")
                .d("JOB", "\"QIx5yRyxdLl2mNcqR\"")
                .d("SALARY", "0.8342075618794473")
            .and().insertInto("USER_CREDENTIALS", 797L)
                .d("USERNAME", "\"2kciS8bnNdR5OSqB\"")
                .d("PASSWORD", "\"Ys6zzHczB\"")
                .d("ENABLED", "false")
                .d("ROLE", "\"OMW26E8mKVw0vO\"")
                .d("EMPLOYEE_ID", "3")
            .and().insertInto("PROJECTS", 807L)
                .d("TITLE", "\"kIfvBq8MJdG2VSSq\"")
                .d("START_DATE", "NULL")
                .d("END_DATE", "\"2000-06-30\"")
                .d("STATUS", "\"_EM_3802_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/projects/delete/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_ROLE_EMP)
                .delete(baseUrlOfSut + "/app/api/projects/delete/-4193305?" + 
                    "password=lanDhH&" + 
                    "username=_EM_3826_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'msg'", containsString("###### NO Project object FOUND! ######"))
                .body("'status'", containsString("BAD_REQUEST"));
    }
}
