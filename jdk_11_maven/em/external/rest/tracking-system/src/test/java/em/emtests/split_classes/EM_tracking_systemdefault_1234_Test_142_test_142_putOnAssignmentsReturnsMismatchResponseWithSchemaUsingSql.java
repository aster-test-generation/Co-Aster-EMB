package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-17T13:43:22.813939-04:00[America/New_York]
 * <br>
*  The generated test suite contains 341 tests
 * <br>
*  Covered targets: 1793
 * <br>
*  Used time: 1h 5m 1s
 * <br>
*  Needed budget for current results: 96%
 * <br>
*  
*/

public class EM_tracking_systemdefault_1234_Test_142_test_142_putOnAssignmentsReturnsMismatchResponseWithSchemaUsingSql {
    

    
    private static final SutHandler controller = new em.external.com.pfa.app.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/tracking-system-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList("ASSIGNMENTS","DEPARTMENTS","EMPLOYEES","LOCATIONS","PROJECTS","USER_CREDENTIALS","assignments","departments","employees","locations","projects","user_credentials"));
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * 1 - (400) POST:/app/api/authenticate
    * 2 - (400) PUT:/app/api/projects
    * 3 - (400) POST:/app/api/projects
    * 4 - (400) PUT:/app/api/employees
    * 5 - (400) GET:/app/api/employees
    * 6 - (400) GET:/app/api/assignments/{employeeId}/{projectId}
    * 7 - (400) PUT:/app/api/assignments
    * Found 7 potential faults of type-code 101
    * Using 1 example:
    *   dd-MM-yyyy
    */
    @Test @Timeout(60)
    public void test_142_putOnAssignmentsReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        
        final Map<String,String> cookies_ROLE_MGR = given()
            .contentType("application/x-www-form-urlencoded")
            .body("username=soumayahajjem&password=test")
            .post(baseUrlOfSut + "/app/login")
            .then().extract().cookies();
            
        final Map<String,String> cookies_ROLE_ADMIN = given()
            .contentType("application/x-www-form-urlencoded")
            .body("username=admin&password=test")
            .post(baseUrlOfSut + "/app/login")
            .then().extract().cookies();
            
        List<InsertionDto> insertions = sql().insertInto("LOCATIONS", 3785L)
                .d("ADR", "\"Q6d\"")
                .d("POSTAL_CODE", "\"Vmqz_bQ3KI2X8da\"")
                .d("CITY", "\"IT\"")
            .and().insertInto("DEPARTMENTS", 3784L)
                .d("DEPARTMENT_NAME", "\"cIIf5\"")
            .and().insertInto("EMPLOYEES", 3783L)
                .d("FIRST_NAME", "\"Owrwg3Q4NIP\"")
                .d("LAST_NAME", "\"1kHscx2ZdyN4N2Qy\"")
                .d("EMAIL", "\"JTb@OgE.beA\"")
                .d("PHONE", "\"j9Tit_RMn6uJ\"")
                .d("JOB", "\"ofmcKH\"")
                .d("SALARY", "0.49519748586239365")
            .and().insertInto("LOCATIONS", 3782L)
                .d("ADR", "\"_pbfoL8YhGAmVbwm\"")
                .d("POSTAL_CODE", "\"j00qmlzUW1Noj\"")
                .d("CITY", "\"UE_\"")
            .and().insertInto("DEPARTMENTS", 3781L)
                .d("DEPARTMENT_NAME", "\"7eXs\"")
            .and().insertInto("EMPLOYEES", 3780L)
                .d("FIRST_NAME", "\"wnPy3\"")
                .d("LAST_NAME", "\"PLk6TRrOIsQVmt\"")
                .d("EMAIL", "\"rXT@Xt.VsHd\"")
                .d("PHONE", "\"HcSKVq8H\"")
                .d("JOB", "\"6\"")
                .d("SALARY", "1.0")
            .and().insertInto("LOCATIONS", 3779L)
                .d("ADR", "\"IILq7vq6\"")
                .d("POSTAL_CODE", "\"CGnoDjY3Hp5wS2\"")
                .d("CITY", "\"cV2UIe0oWhq\"")
            .and().insertInto("DEPARTMENTS", 3778L)
                .d("DEPARTMENT_NAME", "\"ELWlv8eK1ySti\"")
            .and().insertInto("EMPLOYEES", 3777L)
                .d("FIRST_NAME", "\"Koi1\"")
                .d("LAST_NAME", "\"dpVBbLAQngQT73\"")
                .d("EMAIL", "\"SnBY@gN.vn\"")
                .d("PHONE", "\"r6u50J\"")
                .d("JOB", "\"mWQ\"")
                .d("SALARY", "0.9433006213436259")
            .and().insertInto("USER_CREDENTIALS", 3776L)
                .d("USERNAME", "\"gZPYLepzx5l\"")
                .d("PASSWORD", "\"0Q\"")
                .d("ENABLED", "true")
                .d("ROLE", "\"OJcQ_0\"")
                .d("EMPLOYEE_ID", "13")
            .and().insertInto("PROJECTS", 3818L)
                .d("TITLE", "\"RnDm\"")
                .d("STATUS", "\"N\"")
            .and().insertInto("LOCATIONS", 3817L)
                .d("ADR", "\"ySdf4UtDlvZg622q\"")
                .d("POSTAL_CODE", "\"8\"")
                .d("CITY", "\"8sJON0cVS2Z\"")
            .and().insertInto("DEPARTMENTS", 3816L)
                .d("DEPARTMENT_NAME", "\"r5GjFVx0k\"")
            .and().insertInto("EMPLOYEES", 3815L)
                .d("FIRST_NAME", "\"sKOoqYJnT5T31G\"")
                .d("LAST_NAME", "\"WcqI\"")
                .d("EMAIL", "\"aLCD@jOi.ElYv\"")
                .d("PHONE", "\"tzTwLm6c\"")
                .d("JOB", "\"NL\"")
                .d("SALARY", "0.6135943404447206")
            .and().insertInto("LOCATIONS", 3814L)
                .d("ADR", "\"xF7Gx9ot4Fs_d\"")
                .d("POSTAL_CODE", "\"cUn1\"")
                .d("CITY", "\"_6Cyq3s6VSTt16a\"")
            .and().insertInto("DEPARTMENTS", 3813L)
                .d("DEPARTMENT_NAME", "\"5MlFYUR\"")
            .and().insertInto("EMPLOYEES", 3812L)
                .d("FIRST_NAME", "\"O9bfzhghL\"")
                .d("LAST_NAME", "\"l4o_V\"")
                .d("EMAIL", "\"dm@xL.mArA\"")
                .d("PHONE", "\"cgZA64yAtrMk\"")
                .d("JOB", "\"008AiSeZttgYKoQX\"")
                .d("SALARY", "0.13056614314995")
            .and().insertInto("LOCATIONS", 3811L)
                .d("ADR", "\"jeuyrkPECQpiS\"")
                .d("POSTAL_CODE", "\"L\"")
                .d("CITY", "\"b\"")
            .and().insertInto("DEPARTMENTS", 3810L)
                .d("DEPARTMENT_NAME", "\"bQUmhYX\"")
            .and().insertInto("EMPLOYEES", 3809L)
                .d("FIRST_NAME", "\"_EM_9284_XYZ_\"")
                .d("LAST_NAME", "\"YMYQzn_\"")
                .d("EMAIL", "\"nTb@B.OW\"")
                .d("PHONE", "\"1WG8iFpqAn4RR11\"")
                .d("JOB", "\"uPUAEPy\"")
                .d("SALARY", "0.25214385930519434")
            .and().insertInto("ASSIGNMENTS", 3808L)
                .d("EMPLOYEE_ID", "2")
                .d("PROJECT_ID", "8")
                .d("COMMIT_DATE", "\"2051-07-22 22:24:14\"")
                .d("COMMIT_EMP_DESC", "\"nYwlraiqbLi2\"")
                .d("COMMIT_MGR_DESC", "\"rGgz1m50C\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/authenticate'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_ROLE_MGR)
                .contentType("application/json")
                .body(" { " + 
                    " \"password\": \"DigbgYanG0\" " + 
                    " } ")
                .post(baseUrlOfSut + "/app/api/authenticate?" + 
                    "password=DigbgYanG0&" + 
                    "username=_EM_8132_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'msg'", containsString("Bad credentials"))
                .body("'status'", containsString("BAD_REQUEST"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/projects'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_ROLE_MGR)
                .contentType("application/json")
                .body(" { " + 
                    " \"endDate\": \"dd-MM-yyyy\", " + 
                    " \"status\": \"hEBC13b6dNno\" " + 
                    " } ")
                .put(baseUrlOfSut + "/app/api/projects")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'msg'", containsString("JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String \"dd-MM-yyyy\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text 'dd-MM-yyyy' could not be parsed at index 0; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String \"dd-MM-yyyy\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text 'dd-MM-yyyy' could not be parsed at index 0\n at [Source: (ByteArrayInputStream); line: 1, column: 12] (through reference chain: com.pfa.app.model.entity.Project[\"endDate\"])"))
                .body("'status'", containsString("BAD_REQUEST"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/projects'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_ROLE_MGR)
                .contentType("application/json")
                .body(" { " + 
                    " \"endDate\": \"dd-MM-yyyy\", " + 
                    " \"projectId\": 549, " + 
                    " \"title\": \"6tKQARVGB90V0xz\" " + 
                    " } ")
                .post(baseUrlOfSut + "/app/api/projects?" + 
                    "password=Sp9l&" + 
                    "username=21KI")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'msg'", containsString("JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String \"dd-MM-yyyy\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text 'dd-MM-yyyy' could not be parsed at index 0; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String \"dd-MM-yyyy\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text 'dd-MM-yyyy' could not be parsed at index 0\n at [Source: (ByteArrayInputStream); line: 1, column: 12] (through reference chain: com.pfa.app.model.entity.Project[\"endDate\"])"))
                .body("'status'", containsString("BAD_REQUEST"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/employees'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_ROLE_MGR)
                .contentType("application/json")
                .body(" { " + 
                    " \"credential\": { " + 
                    " \"role\": \"QXkO1\", " + 
                    " \"username\": \"rc1PD\" " + 
                    " }, " + 
                    " \"department\": { " + 
                    " \"departmentName\": \"hwJdp_oE77K8kL8\" " + 
                    " }, " + 
                    " \"firstName\": \"09zlQQ22\", " + 
                    " \"hiredate\": \"QgILB\", " + 
                    " \"job\": \"OUnAA_6ZpU\", " + 
                    " \"lastName\": \"\", " + 
                    " \"phone\": \"T3ha\" " + 
                    " } ")
                .put(baseUrlOfSut + "/app/api/employees")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'msg'", containsString("JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String \"QgILB\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text 'QgILB' could not be parsed at index 0; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String \"QgILB\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text 'QgILB' could not be parsed at index 0\n at [Source: (ByteArrayInputStream); line: 1, column: 139] (through reference chain: com.pfa.app.model.entity.Employee[\"hiredate\"])"))
                .body("'status'", containsString("BAD_REQUEST"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/employees'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_ROLE_MGR)
                .get(baseUrlOfSut + "/app/api/employees?" + 
                    "password=DLsTAP16ne6s&" + 
                    "username=Er3qb36HPGlF")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'msg'", containsString("More than one row with the given identifier was found: 13, for class: com.pfa.app.model.entity.Credential; nested exception is org.hibernate.HibernateException: More than one row with the given identifier was found: 13, for class: com.pfa.app.model.entity.Credential"))
                .body("'status'", containsString("BAD_REQUEST"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/assignments/{employeeId}/{projectId}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_ROLE_ADMIN)
                .get(baseUrlOfSut + "/app/api/assignments/p/gctK0lIVEB?" + 
                    "password=KR&" + 
                    "username=i0HLJ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'msg'", containsString("HttpStatus must not be null"))
                .body("'status'", containsString("BAD_REQUEST"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/assignments'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_ROLE_MGR)
                .contentType("application/json")
                .body(" { " + 
                    " \"commitMgrDesc\": \"T\" " + 
                    " } ")
                .put(baseUrlOfSut + "/app/api/assignments")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'msg'", containsString("could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement"))
                .body("'status'", containsString("BAD_REQUEST"));
    }
}
