package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-17T13:43:22.813939-04:00[America/New_York]
 * <br>
*  The generated test suite contains 341 tests
 * <br>
*  Covered targets: 1793
 * <br>
*  Used time: 1h 5m 1s
 * <br>
*  Needed budget for current results: 96%
 * <br>
*  
*/

public class EM_tracking_systemdefault_1234_Test_90_test_90_putOnApiAssignmentsWithQueryParamReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.com.pfa.app.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/tracking-system-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList("ASSIGNMENTS","DEPARTMENTS","EMPLOYEES","LOCATIONS","PROJECTS","USER_CREDENTIALS","assignments","departments","employees","locations","projects","user_credentials"));
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * 1 - (200) POST:/app/api/projects
    * 2 - (200) GET:/app/api/projects
    * 3 - (400) DELETE:/app/api/credentials/{id}
    * 4 - (400) PUT:/app/api/assignments
    * Found 4 potential faults of type-code 101
    */
    @Test @Timeout(60)
    public void test_90_putOnApiAssignmentsWithQueryParamReturnsMismatchResponseWithSchema() throws Exception {
        
        final Map<String,String> cookies_ROLE_ADMIN = given()
            .contentType("application/x-www-form-urlencoded")
            .body("username=admin&password=test")
            .post(baseUrlOfSut + "/app/login")
            .then().extract().cookies();
            
        List<InsertionDto> insertions = sql().insertInto("DEPARTMENTS", 1417L)
                .d("DEPARTMENT_NAME", "\"wklfI_318yVQmp\"")
            .and().insertInto("DEPARTMENTS", 1414L)
                .d("DEPARTMENT_NAME", "\"gbqgYj7cv5AFevw\"")
            .and().insertInto("LOCATIONS", 1412L)
                .d("ADR", "\"N\"")
                .d("POSTAL_CODE", "\"MSMYiPEWv3inV\"")
                .d("CITY", "\"WK0\"")
            .and().insertInto("DEPARTMENTS", 1411L)
                .d("DEPARTMENT_NAME", "\"uK\"")
            .and().insertInto("LOCATIONS", 180L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.type. [Path '/endDate'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_ROLE_ADMIN)
                .contentType("application/json")
                .body(" { " + 
                    " \"status\": \"IX0nRWhdp5le\", " + 
                    " \"title\": \"nc9XMmYyi\" " + 
                    " } ")
                .post(baseUrlOfSut + "/app/api/projects?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'projectId'", numberMatches(10.0))
                .body("'title'", containsString("nc9XMmYyi"))
                .body("'startDate'", nullValue())
                .body("'endDate'", nullValue())
                .body("'status'", containsString("IX0nRWhdp5le"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.type. [Path '/collection/9/endDate'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_ROLE_ADMIN)
                .get(baseUrlOfSut + "/app/api/projects?" + 
                    "EMextraParam123=42&" + 
                    "username=vi0Dve1RQzM9I")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'collection'.size()", equalTo(10))
                .body("'collection'[0].'projectId'", numberMatches(1.0))
                .body("'collection'[0].'title'", containsString("TRANSBSCS"))
                .body("'collection'[0].'startDate'", containsString("28-09-2020"))
                .body("'collection'[0].'endDate'", containsString("04-11-2020"))
                .body("'collection'[0].'status'", containsString("COMPLETED"))
                .body("'collection'[1].'projectId'", numberMatches(2.0))
                .body("'collection'[1].'title'", containsString("SYNCH_BSCS_IMX"))
                .body("'collection'[1].'startDate'", containsString("26-11-2020"))
                .body("'collection'[1].'endDate'", containsString("25-03-2021"))
                .body("'collection'[1].'status'", containsString("IN_PROGRESS"))
                .body("'collection'[2].'projectId'", numberMatches(3.0))
                .body("'collection'[2].'title'", containsString("TASYI9A LILVIRANDA"))
                .body("'collection'[2].'startDate'", containsString("26-11-2020"))
                .body("'collection'[2].'endDate'", containsString("26-11-2020"))
                .body("'collection'[2].'status'", containsString("COMPLETED"))
                ; // Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/credentials/{id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_ROLE_ADMIN)
                .delete(baseUrlOfSut + "/app/api/credentials/-1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'msg'", containsString("###### NO Credential object FOUND! ######"))
                .body("'status'", containsString("BAD_REQUEST"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/api/assignments'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_ROLE_ADMIN)
                .contentType("application/json")
                .body(" { " + 
                    " \"commitDate\": \"ED9ZUSX\", " + 
                    " \"commitMgrDesc\": \"P9Q7\" " + 
                    " } ")
                .put(baseUrlOfSut + "/app/api/assignments?EMextraParam123=_EM_491_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'msg'", containsString("JSON parse error: Cannot deserialize value of type `java.time.LocalDateTime` from String \"ED9ZUSX\": Failed to deserialize java.time.LocalDateTime: (java.time.format.DateTimeParseException) Text 'ED9ZUSX' could not be parsed at index 0; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDateTime` from String \"ED9ZUSX\": Failed to deserialize java.time.LocalDateTime: (java.time.format.DateTimeParseException) Text 'ED9ZUSX' could not be parsed at index 0\n at [Source: (ByteArrayInputStream); line: 1, column: 15] (through reference chain: com.pfa.app.model.entity.Assignment[\"commitDate\"])"))
                .body("'status'", containsString("BAD_REQUEST"));
    }
}
