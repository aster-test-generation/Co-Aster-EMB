package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-04T04:20:41.503-04:00[America/New_York]
 * <br>
*  The generated test suite contains 40 tests
 * <br>
*  Covered targets: 13934
 * <br>
*  Used time: 1h 5m 5s
 * <br>
*  Needed budget for current results: 92%
 * <br>
*  
*/

public class EM_languagetooldefault_1234_Test_6_test_6_postOnCheckShowsFaults_100_101 {
    

    
    private static final SutHandler controller = new em.external.org.languagetool.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/languagetool-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * 1 - (400) POST:/v2/check
    * 2 - (400) POST:/v2/check
    * 3 - (400) POST:/v2/check
    * 4 - (200) GET:/v2/languages
    * 5 - (200) GET:/v2/languages
    * 6 - (200) GET:/v2/languages
    * 7 - (500) POST:/v2/check
    * Found 5 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_6_postOnCheckShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_3566_XYZ_&language=ImZu2JKk6mn&preferredVariants=YtT&disabledRules=_EM_555_XYZ_&disabledCategories=_EM_557_XYZ_&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=VU&" + 
                    "inputLogging=xxgodEE4p4quN&" + 
                    "tokenV2=xC&" + 
                    "level=H_ZG&" + 
                    "ruleValues=7zpm2&" + 
                    "useragent=_EM_3572_XYZ_&" + 
                    "noopLanguages=BWD&" + 
                    "enabled=_EM_3573_XYZ_&" + 
                    "token=_EM_3574_XYZ_&" + 
                    "mode=PadULNj&" + 
                    "password=icza0MKIwdX0tbA0&" + 
                    "autodetect=PS9&" + 
                    "instanceId=_EM_3575_XYZ_&" + 
                    "filterDictionaryMatches=_EM_3576_XYZ_&" + 
                    "v=_EM_3577_XYZ_&" + 
                    "preferredLanguages=0&" + 
                    "textSessionId=_EM_3578_XYZ_&" + 
                    "disabled=_EM_3579_XYZ_&" + 
                    "username=SewkuU")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'enabled' but the parameter is now called 'enabledRules' in v2 of the API"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_532_XYZ_&data=_EM_533_XYZ_&language=yESLhGrIIika&altLanguages=36FM07TkNpR&enabledRules=BC41zCA3m&disabledRules=VPhI8OKy6veToFh&enabledCategories=BJ3q&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=_EM_534_XYZ_&" + 
                    "inputLogging=_EM_536_XYZ_&" + 
                    "tokenV2=_EM_537_XYZ_&" + 
                    "enabled=7VRQbzwpzhD&" + 
                    "token=&" + 
                    "mode=_EM_540_XYZ_&" + 
                    "password=_EM_541_XYZ_&" + 
                    "autodetect=IoziMh7A0f&" + 
                    "instanceId=_EM_542_XYZ_&" + 
                    "preferredLanguages=yESLhGrIIika&" + 
                    "textSessionId=_EM_3580_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_545_XYZ_&language=tR&altLanguages=uq_dU&motherTongue=_EM_548_XYZ_&preferredVariants=1MqXt5&enabledRules=mWwLj&disabledRules=_EM_551_XYZ_&enabledCategories=&disabledCategories=2tVLI2qRpfo&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'preferredVariants' but you didn't specify 'language=auto'"));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v2/languages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(44))
                .body("[0].'name'", containsString("Arabic"))
                .body("[0].'code'", containsString("ar"))
                .body("[0].'longCode'", containsString("ar"))
                .body("[1].'name'", containsString("Asturian"))
                .body("[1].'code'", containsString("ast"))
                .body("[1].'longCode'", containsString("ast-ES"))
                .body("[2].'name'", containsString("Belarusian"))
                .body("[2].'code'", containsString("be"))
                .body("[2].'longCode'", containsString("be-BY"))
                ; // Skipping assertions on the remaining 41 elements. This limit of 3 elements can be increased in the configurations
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_559_XYZ_")
                .get(baseUrlOfSut + "/v2/languages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(44))
                .body("[0].'name'", containsString("Arabic"))
                .body("[0].'code'", containsString("ar"))
                .body("[0].'longCode'", containsString("ar"))
                .body("[1].'name'", containsString("Asturian"))
                .body("[1].'code'", containsString("ast"))
                .body("[1].'longCode'", containsString("ast-ES"))
                .body("[2].'name'", containsString("Belarusian"))
                .body("[2].'code'", containsString("be"))
                .body("[2].'longCode'", containsString("be-BY"))
                ; // Skipping assertions on the remaining 41 elements. This limit of 3 elements can be increased in the configurations
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v2/languages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(44))
                .body("[0].'name'", containsString("Arabic"))
                .body("[0].'code'", containsString("ar"))
                .body("[0].'longCode'", containsString("ar"))
                .body("[1].'name'", containsString("Asturian"))
                .body("[1].'code'", containsString("ast"))
                .body("[1].'longCode'", containsString("ast-ES"))
                .body("[2].'name'", containsString("Belarusian"))
                .body("[2].'code'", containsString("be"))
                .body("[2].'longCode'", containsString("be-BY"))
                ; // Skipping assertions on the remaining 41 elements. This limit of 3 elements can be increased in the configurations
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_191_getLevel.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_565_XYZ_")
                .contentType("application/x-www-form-urlencoded")
                .body("text=YiW&language=e4mb2QYI&motherTongue=_EM_561_XYZ_&preferredVariants=Dt8Y&enabledRules=XYt%7FaqvPU&enabledCategories=Ar9bJ0IuRt2K&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "mode=qD8xd8TzTJT3&" + 
                    "instanceId=_EM_3581_XYZ_&" + 
                    "inputLogging=klNzzcwMBkq2f5aL&" + 
                    "apiKey=_EM_3582_XYZ_&" + 
                    "level=_EM_3570_XYZ_&" + 
                    "v=f&" + 
                    "useragent=_EM_3571_XYZ_&" + 
                    "username=bR%3DOu2fkePczjBb")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_191_getLevel
                .assertThat()
                .body(containsString("Error: Internal Error: sqlSessionFactory not initialized - has the database been configured?"));
    }
}
