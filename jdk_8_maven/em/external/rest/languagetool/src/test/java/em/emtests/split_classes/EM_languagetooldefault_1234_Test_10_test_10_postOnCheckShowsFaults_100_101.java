package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-04T04:20:41.503-04:00[America/New_York]
 * <br>
*  The generated test suite contains 40 tests
 * <br>
*  Covered targets: 13934
 * <br>
*  Used time: 1h 5m 5s
 * <br>
*  Needed budget for current results: 92%
 * <br>
*  
*/

public class EM_languagetooldefault_1234_Test_10_test_10_postOnCheckShowsFaults_100_101 {
    

    
    private static final SutHandler controller = new em.external.org.languagetool.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/languagetool-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * 1 - (400) POST:/v2/check
    * 2 - (400) POST:/v2/check
    * 3 - (400) POST:/v2/check
    * 4 - (500) POST:/v2/check
    * 5 - (400) POST:/v2/check
    * 6 - (500) POST:/v2/check
    * 7 - (500) POST:/v2/check
    * 8 - (200) GET:/v2/languages
    * 9 - (400) POST:/v2/check
    * 10 - (400) POST:/v2/check
    * Found 12 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_10_postOnCheckShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=gM&language=_EM_4136_XYZ_&altLanguages=_EM_4137_XYZ_&motherTongue=1tJPf9ouPYKd&disabledRules=G38Rm6ZXZSxqluZL&disabledCategories=_EM_4141_XYZ_&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?EMextraParam123=_EM_679_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: '_EM_4136_XYZ_' is not a language code known to LanguageTool. Supported language codes are: ar, ast-ES, be-BY, br-FR, ca-ES, ca-ES-valencia, da-DK, de, de-AT, de-CH, de-DE, de-DE-x-simple-language, el-GR, en, en-AU, en-CA, en-GB, en-NZ, en-US, en-ZA, eo, es, fa, fr, ga-IE, gl-ES, it, ja-JP, km-KH, pl-PL, pt, pt-AO, pt-BR, pt-MZ, pt-PT, ro-RO, ru-RU, sk-SK, sl-SI, sv, ta-IN, tl-PH, uk-UA, zh-CN. The list of languages is read from META-INF/org/languagetool/language-module.properties in the Java classpath. See https://dev.languagetool.org/java-api for details."));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=x&language=3UeIksS&altLanguages=_EM_4143_XYZ_&enabledRules=d5Grcef4&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "inputLogging=_EM_4147_XYZ_&" + 
                    "useragent=_EM_4148_XYZ_&" + 
                    "noopLanguages=_EM_4149_XYZ_&" + 
                    "password=IKtuaS&" + 
                    "preferredLanguages=3UeIksS&" + 
                    "disabled=g&" + 
                    "level=v2J_s7cO9&" + 
                    "ruleValues=EY68vHzn2g&" + 
                    "sourceText=Jr0I0Dc8p&" + 
                    "enableHiddenRules=zSjtk&" + 
                    "token=r&" + 
                    "autodetect=eJjb65o6Zl&" + 
                    "filterDictionaryMatches=UqoWwWEssTbDr&" + 
                    "textSessionId=x&" + 
                    "callback=_EM_4152_XYZ_&" + 
                    "tokenV2=_EM_4154_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'disabled' but the parameter is now called 'disabledRules' in v2 of the API"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_4156_XYZ_&language=_EM_4157_XYZ_&motherTongue=_EM_4158_XYZ_&enabledRules=_EM_4159_XYZ_&enabledCategories=_EM_4160_XYZ_")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: '_EM_4157_XYZ_' is not a language code known to LanguageTool. Supported language codes are: ar, ast-ES, be-BY, br-FR, ca-ES, ca-ES-valencia, da-DK, de, de-AT, de-CH, de-DE, de-DE-x-simple-language, el-GR, en, en-AU, en-CA, en-GB, en-NZ, en-US, en-ZA, eo, es, fa, fr, ga-IE, gl-ES, it, ja-JP, km-KH, pl-PL, pt, pt-AO, pt-BR, pt-MZ, pt-PT, ro-RO, ru-RU, sk-SK, sl-SI, sv, ta-IN, tl-PH, uk-UA, zh-CN. The list of languages is read from META-INF/org/languagetool/language-module.properties in the Java classpath. See https://dev.languagetool.org/java-api for details."));
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_173_getMode.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("data=WokMG&language=_EM_4162_XYZ_&altLanguages=gnRszu4W0Pxprrz&motherTongue=_EM_4163_XYZ_&preferredVariants=Qm&disabledRules=CZqgb2IftI&enabledCategories=_EM_4164_XYZ_")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=gtPXk66iK8Joz6M&" + 
                    "apiKey=_EM_4165_XYZ_&" + 
                    "inputLogging=SQxxExCR39bDT0T&" + 
                    "enabled=R_kg6phR1k&" + 
                    "mode=4pMT&" + 
                    "password=_EM_4166_XYZ_&" + 
                    "enableTempOffRules=kyRHVpQC&" + 
                    "preferredLanguages=_EM_4167_XYZ_&" + 
                    "ruleValues=fnBBfDn3s&" + 
                    "sourceText=ucr0w8&" + 
                    "enableHiddenRules=j9LhaNp0RZ&" + 
                    "autodetect=Ko7bNr&" + 
                    "filterDictionaryMatches=_EM_4170_XYZ_&" + 
                    "textSessionId=&" + 
                    "callback=_EM_4171_XYZ_&" + 
                    "tokenV2=_EM_4173_XYZ_&" + 
                    "instanceId=_EM_4174_XYZ_")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_173_getMode
                .assertThat()
                .body(containsString("Error: Internal Error: Unrecognized token 'WokMG': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"WokMG\"; line: 1, column: 6]"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_4176_XYZ_&data=8sUOURxU&language=oCwJI1thdJZMeci&altLanguages=_EM_4177_XYZ_&preferredVariants=_EM_4178_XYZ_&enabledRules=ndIfFI&enabledCategories=NaXWQzW14qEYhXLl&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?EMextraParam123=_EM_679_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_191_getLevel.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("data=S&language=_EM_4180_XYZ_&preferredVariants=_EM_4181_XYZ_&enabledRules=aws0T08jvYEQ0&disabledRules=&enabledCategories=wQWhUEB1RwaS3Qsi&disabledCategories=gsNNU6mM3FRnO")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "mode=_EM_4185_XYZ_&" + 
                    "password=_EM_4186_XYZ_&" + 
                    "preferredLanguages=AfmrbC3u&" + 
                    "level=WbvmcEkjpDQ&" + 
                    "sourceText=rk&" + 
                    "allowIncompleteResults=9v8Son4n&" + 
                    "filterDictionaryMatches=Zbi6x7PVeLhOUUGs&" + 
                    "textSessionId=4CRSEgWt8&" + 
                    "callback=aJWxbRH5C1&" + 
                    "v=_EM_4188_XYZ_")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_191_getLevel
                .assertThat()
                .body(containsString("Error: Internal Error: Unrecognized token 'S': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"S\"; line: 1, column: 2]"));
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_191_getLevel.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4192_XYZ_")
                .contentType("application/x-www-form-urlencoded")
                .body("data=hVgH7FzyrYfQw&language=Wr80RojI&altLanguages=_EM_4190_XYZ_&motherTongue=plB3Jj9Z3McE8Gd1&preferredVariants=_EM_4191_XYZ_&enabledRules=&disabledCategories=")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "enableTempOffRules=QDLve&" + 
                    "preferredLanguages=Wr80RojI&" + 
                    "disabled=ZeMsA&" + 
                    "level=&" + 
                    "enableHiddenRules=QZtwk4xur2qa&" + 
                    "filterDictionaryMatches=jLGoVOwULD2N&" + 
                    "textSessionId=_EM_4198_XYZ_&" + 
                    "tokenV2=_EM_4201_XYZ_&" + 
                    "v=_EM_4203_XYZ_")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_191_getLevel
                .assertThat()
                .body(containsString("Error: Internal Error: Unrecognized token 'hVgH7FzyrYfQw': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"hVgH7FzyrYfQw\"; line: 1, column: 14]"));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_4205_XYZ_")
                .get(baseUrlOfSut + "/v2/languages?EMextraParam123=_EM_4204_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(44))
                .body("[0].'name'", containsString("Arabic"))
                .body("[0].'code'", containsString("ar"))
                .body("[0].'longCode'", containsString("ar"))
                .body("[1].'name'", containsString("Asturian"))
                .body("[1].'code'", containsString("ast"))
                .body("[1].'longCode'", containsString("ast-ES"))
                .body("[2].'name'", containsString("Belarusian"))
                .body("[2].'code'", containsString("be"))
                .body("[2].'longCode'", containsString("be-BY"))
                ; // Skipping assertions on the remaining 41 elements. This limit of 3 elements can be increased in the configurations
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("text=c6GlBIkVG&data=XP&language=taNlSUNvmldJhiOL&altLanguages=WwYBcPK&preferredVariants=V4v&enabledRules=8fMv2L5Te6f5Z&disabledRules=ONysubO&disabledCategories=PhdHLDXFID&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=8QZ&" + 
                    "noopLanguages=uJIOJ&" + 
                    "mode=TM&" + 
                    "preferredLanguages=taNlSUNvmldJhiOL&" + 
                    "disabled=_EM_4209_XYZ_&" + 
                    "enableHiddenRules=_EM_4211_XYZ_&" + 
                    "token=baCzveeb0&" + 
                    "autodetect=DiydEk&" + 
                    "filterDictionaryMatches=rAjRmG1vf&" + 
                    "callback=JJ874ek_P7&" + 
                    "username=_EM_4214_XYZ_&" + 
                    "tokenV2=GyFP&" + 
                    "instanceId=JrO&" + 
                    "v=PM")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4219_XYZ_")
                .contentType("application/x-www-form-urlencoded")
                .body("data=&language=KVqTYmLLkxw&altLanguages=QLNNay1Uz&preferredVariants=_EM_4216_XYZ_&enabledRules=Lnqh&disabledRules=kbJHCPE&enabledCategories=_EM_4217_XYZ_")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: 'data' key in JSON requires 'text' or 'annotation' key"));
    }
}
