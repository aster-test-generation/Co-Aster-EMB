package em.emtests.single_class;

/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-04T04:20:41.503-04:00[America/New_York]
 * <br>
*  The generated test suite contains 40 tests
 * <br>
*  Covered targets: 13934
 * <br>
*  Used time: 1h 5m 5s
 * <br>
*  Needed budget for current results: 92%
 * <br>
*  
*/
public class EM_languagetooldefault_1234_Test {

    
    private static final SutHandler controller = new em.external.org.languagetool.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/languagetool-sut.jar");
    private static String baseUrlOfSut;
    
    
    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (500) POST:/v2/check
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_0_postOnCheckShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_191_getLevel.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("data=_EM_1103_XYZ_&language=_EM_1104_XYZ_&altLanguages=bTItpOeg5&preferredVariants=_EM_1105_XYZ_&enabledRules=_EM_1106_XYZ_&enabledCategories=_EM_1107_XYZ_&disabledCategories=_EM_1108_XYZ_&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "mode=_EM_1180_XYZ_&" + 
                    "instanceId=LMBGWRHMj&" + 
                    "inputLogging=Sc4RBaSTO&" + 
                    "apiKey=fzUfbjkZ3&" + 
                    "tokenV2=XM9CFsZwdPi&" + 
                    "level=5dB8H&" + 
                    "v=_zGnr1LIICJZHvDX&" + 
                    "useragent=yTq8oKmhwFTMOC&" + 
                    "username=8iiHVALVQd2I_Pdu")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_191_getLevel
                .assertThat()
                .body(containsString("Error: Internal Error: Unrecognized token '_EM_1103_XYZ_': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"_EM_1103_XYZ_\"; line: 1, column: 14]"));
    }
    
    
    /**
    * Calls:
    * (500) POST:/v2/check
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_1_postOnV2CheckWithQueryParamShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. org/languagetool/server/ApiV2_153_handleCheckRequest.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("data=drdHNR8xTeF&language=_EM_3_XYZ_&altLanguages=h&preferredVariants=Ir8SqxguQHTFq&disabledRules=_EM_5_XYZ_&enabledCategories=_EM_6_XYZ_&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?EMextraParam123=42")
                .then()
                .statusCode(500)// org/languagetool/server/ApiV2_153_handleCheckRequest
                .assertThat()
                .body(containsString("Error: Internal Error: Unrecognized token 'drdHNR8xTeF': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"drdHNR8xTeF\"; line: 1, column: 12]"));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/v2/check
    * 2 - (500) POST:/v2/check
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_2_postOnCheckShowsFaults_100_101() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("text=MMXLLqQPqf47kOY&language=auto&enabledRules=_EM_3804_XYZ_&disabledRules=_EM_3805_XYZ_&enabledCategories=_EM_3806_XYZ_&disabledCategories=_EM_3807_XYZ_")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'software'.'name'", containsString("LanguageTool"))
                .body("'software'.'version'", containsString("5.2-SNAPSHOT"))
                .body("'software'.'buildDate'", nullValue())
                .body("'software'.'apiVersion'", numberMatches(1.0))
                .body("'software'.'premium'", equalTo(false))
                .body("'software'.'premiumHint'", containsString("You might be missing errors only the Premium version can find. Contact us at support<at>languagetoolplus.com."))
                .body("'software'.'status'", containsString(""))
                .body("'warnings'.'incompleteResults'", equalTo(false))
                .body("'language'.'name'", containsString("English (US)"))
                .body("'language'.'code'", containsString("en-US"))
                .body("'language'.'detectedLanguage'.'name'", containsString("English (US)"))
                .body("'language'.'detectedLanguage'.'code'", containsString("en-US"))
                .body("'language'.'detectedLanguage'.'confidence'", numberMatches(0.5544517))
                .body("'matches'.size()", equalTo(0));
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_191_getLevel.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("data=_EM_3808_XYZ_&language=EPnWLNpXNSFkUQ45&motherTongue=q1Q7ZhaxHtcEz8&preferredVariants=_EM_3810_XYZ_&disabledRules=sQhPte6gQu")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=kzpCHB2jw&" + 
                    "useragent=88urqqkH62RKsldn&" + 
                    "noopLanguages=IcdR&" + 
                    "enabled=cCyAz&" + 
                    "mode=_EM_3812_XYZ_&" + 
                    "password=_EM_3813_XYZ_&" + 
                    "preferredLanguages=EPnWLNpXNSFkUQ45&" + 
                    "disabled=ppb5Oy7NReetb&" + 
                    "level=neO_rupz&" + 
                    "ruleValues=7vP5ihxhR1F&" + 
                    "sourceText=PZrhBO5&" + 
                    "enableHiddenRules=apmz5CR2zy3j6&" + 
                    "allowIncompleteResults=lJoMIKDJ&" + 
                    "autodetect=cxQKr2NBXbGbKZI&" + 
                    "callback=PQSb9j3QVSep_Lj&" + 
                    "username=T9bVoC1a8GvDJ&" + 
                    "tokenV2=_EM_4674_XYZ_&" + 
                    "v=_EM_3816_XYZ_")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_191_getLevel
                .assertThat()
                .body(containsString("Error: Internal Error: Unrecognized token '_EM_3808_XYZ_': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"_EM_3808_XYZ_\"; line: 1, column: 14]"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/v2/check
    * 2 - (500) POST:/v2/check
    * Found 3 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_3_postOnCheckShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=MMXLLqQPqf47kOY&language=auto&preferredVariants=_EM_3803_XYZ_&enabledRules=Xjo3wzb&disabledRules=Xjo3wzb&enabledCategories=UIgcf&disabledCategories=_EM_3807_XYZ_&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Invalid format for 'preferredVariants', expected a dash as in 'en-GB': '_EM_3803_XYZ_'"));
        
        // Fault100. HTTP Status 500. org/languagetool/server/UserLimits_71_getLimitsFromToken.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=dFFJ8GgVY7bID0&language=EPnWLNpXNSFkUQ45&altLanguages=9%3DjaJ&motherTongue=81EPTdx4d&preferredVariants=_EM_3810_XYZ_&enabledRules=_EM_3811_XYZ_&enabledCategories=AkOBwF&disabledCategories=N")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "inputLogging=no&" + 
                    "useragent=88urqqkH62RKupdn&" + 
                    "noopLanguages=_EM_12867_XYZ_&" + 
                    "password=NpSjQvHfps&" + 
                    "level=picky&" + 
                    "ruleValues=7vP5ihxhR1F&" + 
                    "sourceText=RHSpnzdU129mw&" + 
                    "enableHiddenRules=apmU5CR.zyUj6l&" + 
                    "allowIncompleteResults=lUUMHUBU&" + 
                    "filterDictionaryMatches=GX&" + 
                    "textSessionId=_EM_12950_XYZ_&" + 
                    "callback=PQSb9j3QVSep_Lj&" + 
                    "username=_EM_12553_XYZ_&" + 
                    "tokenV2=_EM_4674_XYZ_")
                .then()
                .statusCode(500)// org/languagetool/server/UserLimits_71_getLimitsFromToken
                .assertThat()
                .body(containsString("Error: Internal Error: You specified a 'token' parameter but this server doesn't accept tokens"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/v2/check
    * 2 - (500) POST:/v2/check
    * Found 3 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_4_postOnV2CheckWithQueryParamsEmptyModeShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_836_XYZ_&language=we9er4ekGI2E&altLanguages=_EM_838_XYZ_&motherTongue=sMwczt0GhTQMTh3&enabledRules=_EM_840_XYZ_&enabledCategories=_EM_841_XYZ_")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: 'we9er4ekGI2E' is not a language code known to LanguageTool. Supported language codes are: ar, ast-ES, be-BY, br-FR, ca-ES, ca-ES-valencia, da-DK, de, de-AT, de-CH, de-DE, de-DE-x-simple-language, el-GR, en, en-AU, en-CA, en-GB, en-NZ, en-US, en-ZA, eo, es, fa, fr, ga-IE, gl-ES, it, ja-JP, km-KH, pl-PL, pt, pt-AO, pt-BR, pt-MZ, pt-PT, ro-RO, ru-RU, sk-SK, sl-SI, sv, ta-IN, tl-PH, uk-UA, zh-CN. The list of languages is read from META-INF/org/languagetool/language-module.properties in the Java classpath. See https://dev.languagetool.org/java-api for details."));
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_191_getLevel.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=10&language=f08dL09VRTv&altLanguages=_EM_842_XYZ_&preferredVariants=_EM_844_XYZ_&enabledRules=_EM_845_XYZ_")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=42&" + 
                    "inputLogging=_EM_846_XYZ_&" + 
                    "tokenV2=p149b9ms4OBSapc4&" + 
                    "level=_EM_847_XYZ_&" + 
                    "ruleValues=AMjVipBKdu&" + 
                    "token=R7SreDdGN&" + 
                    "mode=&" + 
                    "username=TXOMAFxLqokh")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_191_getLevel
                .assertThat()
                .body(containsString("Error: Internal Error: You specified a 'token' parameter but this server doesn't accept tokens"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/v2/check
    * 2 - (500) POST:/v2/check
    * Found 3 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_5_postOnV2CheckWithQueryParamsEmptyLevelShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=4osIr%5DME6yTZeh&data=2zBrcn7klDbb&language=-x-&altLanguages=l_yZ9jvPmDT52P&motherTongue=ru&enabledRules=QI0RMkZZdVY&disabledRules=OpZYMKuthfPUZ&enabledCategories=_EM_6356_XYZ_&disabledCategories=_EM_7904_XYZ_&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_191_getLevel.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=b&language=auto&motherTongue=JJL9cr3_AKw2BgDr&preferredVariants=_EM_7985_XYZ_&enabledRules=3&disabledRules=wHXa3")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=_EM_8U2%3FUXUZ_&" + 
                    "inputLogging=no&" + 
                    "useragent=_EM_6358_XYZ_&" + 
                    "noopLanguages=de8izaV3yxEe5m&" + 
                    "mode=ds&" + 
                    "password=MfSYX6h0_gS1&" + 
                    "level=&" + 
                    "ruleValues=_EM_8029_XYZ_&" + 
                    "sourceText=hW&" + 
                    "enableHiddenRules=X6i&" + 
                    "allowIncompleteResults=9Ki73V2w&" + 
                    "filterDictionaryMatches=x&" + 
                    "textSessionId=kP&" + 
                    "username=_EM_8291_XYZ_&" + 
                    "tokenV2=_EM_8293_XYZ_&" + 
                    "instanceId=I&" + 
                    "v=H")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_191_getLevel
                .assertThat()
                .body(containsString("Error: Internal Error: sqlSessionFactory not initialized - has the database been configured?"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/v2/check
    * 2 - (400) POST:/v2/check
    * 3 - (400) POST:/v2/check
    * 4 - (200) GET:/v2/languages
    * 5 - (200) GET:/v2/languages
    * 6 - (200) GET:/v2/languages
    * 7 - (500) POST:/v2/check
    * Found 5 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_6_postOnCheckShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_3566_XYZ_&language=ImZu2JKk6mn&preferredVariants=YtT&disabledRules=_EM_555_XYZ_&disabledCategories=_EM_557_XYZ_&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=VU&" + 
                    "inputLogging=xxgodEE4p4quN&" + 
                    "tokenV2=xC&" + 
                    "level=H_ZG&" + 
                    "ruleValues=7zpm2&" + 
                    "useragent=_EM_3572_XYZ_&" + 
                    "noopLanguages=BWD&" + 
                    "enabled=_EM_3573_XYZ_&" + 
                    "token=_EM_3574_XYZ_&" + 
                    "mode=PadULNj&" + 
                    "password=icza0MKIwdX0tbA0&" + 
                    "autodetect=PS9&" + 
                    "instanceId=_EM_3575_XYZ_&" + 
                    "filterDictionaryMatches=_EM_3576_XYZ_&" + 
                    "v=_EM_3577_XYZ_&" + 
                    "preferredLanguages=0&" + 
                    "textSessionId=_EM_3578_XYZ_&" + 
                    "disabled=_EM_3579_XYZ_&" + 
                    "username=SewkuU")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'enabled' but the parameter is now called 'enabledRules' in v2 of the API"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_532_XYZ_&data=_EM_533_XYZ_&language=yESLhGrIIika&altLanguages=36FM07TkNpR&enabledRules=BC41zCA3m&disabledRules=VPhI8OKy6veToFh&enabledCategories=BJ3q&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=_EM_534_XYZ_&" + 
                    "inputLogging=_EM_536_XYZ_&" + 
                    "tokenV2=_EM_537_XYZ_&" + 
                    "enabled=7VRQbzwpzhD&" + 
                    "token=&" + 
                    "mode=_EM_540_XYZ_&" + 
                    "password=_EM_541_XYZ_&" + 
                    "autodetect=IoziMh7A0f&" + 
                    "instanceId=_EM_542_XYZ_&" + 
                    "preferredLanguages=yESLhGrIIika&" + 
                    "textSessionId=_EM_3580_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_545_XYZ_&language=tR&altLanguages=uq_dU&motherTongue=_EM_548_XYZ_&preferredVariants=1MqXt5&enabledRules=mWwLj&disabledRules=_EM_551_XYZ_&enabledCategories=&disabledCategories=2tVLI2qRpfo&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'preferredVariants' but you didn't specify 'language=auto'"));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v2/languages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(44))
                .body("[0].'name'", containsString("Arabic"))
                .body("[0].'code'", containsString("ar"))
                .body("[0].'longCode'", containsString("ar"))
                .body("[1].'name'", containsString("Asturian"))
                .body("[1].'code'", containsString("ast"))
                .body("[1].'longCode'", containsString("ast-ES"))
                .body("[2].'name'", containsString("Belarusian"))
                .body("[2].'code'", containsString("be"))
                .body("[2].'longCode'", containsString("be-BY"))
                ; // Skipping assertions on the remaining 41 elements. This limit of 3 elements can be increased in the configurations
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_559_XYZ_")
                .get(baseUrlOfSut + "/v2/languages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(44))
                .body("[0].'name'", containsString("Arabic"))
                .body("[0].'code'", containsString("ar"))
                .body("[0].'longCode'", containsString("ar"))
                .body("[1].'name'", containsString("Asturian"))
                .body("[1].'code'", containsString("ast"))
                .body("[1].'longCode'", containsString("ast-ES"))
                .body("[2].'name'", containsString("Belarusian"))
                .body("[2].'code'", containsString("be"))
                .body("[2].'longCode'", containsString("be-BY"))
                ; // Skipping assertions on the remaining 41 elements. This limit of 3 elements can be increased in the configurations
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v2/languages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(44))
                .body("[0].'name'", containsString("Arabic"))
                .body("[0].'code'", containsString("ar"))
                .body("[0].'longCode'", containsString("ar"))
                .body("[1].'name'", containsString("Asturian"))
                .body("[1].'code'", containsString("ast"))
                .body("[1].'longCode'", containsString("ast-ES"))
                .body("[2].'name'", containsString("Belarusian"))
                .body("[2].'code'", containsString("be"))
                .body("[2].'longCode'", containsString("be-BY"))
                ; // Skipping assertions on the remaining 41 elements. This limit of 3 elements can be increased in the configurations
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_191_getLevel.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_565_XYZ_")
                .contentType("application/x-www-form-urlencoded")
                .body("text=YiW&language=e4mb2QYI&motherTongue=_EM_561_XYZ_&preferredVariants=Dt8Y&enabledRules=XYt%7FaqvPU&enabledCategories=Ar9bJ0IuRt2K&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "mode=qD8xd8TzTJT3&" + 
                    "instanceId=_EM_3581_XYZ_&" + 
                    "inputLogging=klNzzcwMBkq2f5aL&" + 
                    "apiKey=_EM_3582_XYZ_&" + 
                    "level=_EM_3570_XYZ_&" + 
                    "v=f&" + 
                    "useragent=_EM_3571_XYZ_&" + 
                    "username=bR%3DOu2fkePczjBb")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_191_getLevel
                .assertThat()
                .body(containsString("Error: Internal Error: sqlSessionFactory not initialized - has the database been configured?"));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/v2/check
    * 2 - (400) POST:/v2/check
    * Found 3 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_7_postOnV2CheckWithQueryParamsEmptyNoopLanguagesShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. org/languagetool/server/ApiV2_153_handleCheckRequest.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("data=JDkTV&language=5mScXbYJW1&altLanguages=hlS1_6oNQT1JFR&motherTongue=_EM_5390_XYZ_&preferredVariants=xvaj1gl1gMp&enabledRules=&enabledCategories=FmwPrd")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(500)// org/languagetool/server/ApiV2_153_handleCheckRequest
                .assertThat()
                .body(containsString("Error: Internal Error: Unrecognized token 'JDkTV': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"JDkTV\"; line: 1, column: 6]"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=FYtWZ4un8n&language=_EM_5392_XYZ_&altLanguages=EAqGrj1CJDCH6vnF&enabledCategories=_EM_5393_XYZ_")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=_EM_679_XYZ_&" + 
                    "inputLogging=NclAnadM4&" + 
                    "useragent=F6VkAS4K&" + 
                    "noopLanguages=&" + 
                    "mode=Yn7D&" + 
                    "password=BKQN_vnQK7Xd1Tr&" + 
                    "enableTempOffRules=_EM_5394_XYZ_&" + 
                    "preferredLanguages=_EM_5395_XYZ_&" + 
                    "ruleValues=_EM_5398_XYZ_&" + 
                    "sourceText=aw38vjdE&" + 
                    "allowIncompleteResults=7qEKAC3cI2U&" + 
                    "textSessionId=FYtWZ4un8n&" + 
                    "instanceId=_EM_5399_XYZ_&" + 
                    "v=GLEiggpJOSM")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: password was set, but username was not"));
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/v2/languages
    * 2 - (500) POST:/v2/check
    * 3 - (400) POST:/v2/check
    * 4 - (400) POST:/v2/check
    * 5 - (400) POST:/v2/check
    * Found 5 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_8_postOnCheckShowsFaults_100_101() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v2/languages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(44))
                .body("[0].'name'", containsString("Arabic"))
                .body("[0].'code'", containsString("ar"))
                .body("[0].'longCode'", containsString("ar"))
                .body("[1].'name'", containsString("Asturian"))
                .body("[1].'code'", containsString("ast"))
                .body("[1].'longCode'", containsString("ast-ES"))
                .body("[2].'name'", containsString("Belarusian"))
                .body("[2].'code'", containsString("be"))
                .body("[2].'longCode'", containsString("be-BY"))
                ; // Skipping assertions on the remaining 41 elements. This limit of 3 elements can be increased in the configurations
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_191_getLevel.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=G5qQ2E4SZhCcxTK8&language=BMdV6rTBK6niV&altLanguages=HX02&preferredVariants=Dkc&enabledRules=s4R7tPjxfNS&disabledCategories=8Hw&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "useragent=_EM_8813_XYZ_&" + 
                    "noopLanguages=Vw7wi&" + 
                    "enableTempOffRules=qw54i&" + 
                    "preferredLanguages=_EM_8815_XYZ_&" + 
                    "level=sZjYifZjn3Cxu&" + 
                    "ruleValues=b&" + 
                    "sourceText=x1uprsC4_qsptn&" + 
                    "textSessionId=G5qQ2E4SZhCcxTK8&" + 
                    "tokenV2=u9Jj")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_191_getLevel
                .assertThat()
                .body(containsString("Error: Internal Error: 1"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=ixfk&data=&language=_EM_8821_XYZ_&altLanguages=2U&motherTongue=_EM_8822_XYZ_&enabledCategories=_EM_8823_XYZ_&disabledCategories=Lz")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_8824_XYZ_&data=_EM_8825_XYZ_&language=_EM_8826_XYZ_&altLanguages=&motherTongue=_EM_8827_XYZ_&preferredVariants=Oo4Nk50jM&enabledRules=_EM_8828_XYZ_&disabledRules=HDSWYu&enabledCategories=_EM_8829_XYZ_")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "useragent=GD3kv&" + 
                    "noopLanguages=OH6EhTNXKsA7eq&" + 
                    "level=d9_zB&" + 
                    "ruleValues=_EM_8835_XYZ_&" + 
                    "sourceText=rFORZfQHJs&" + 
                    "allowIncompleteResults=p7jSqvhT816acp&" + 
                    "filterDictionaryMatches=J_q3O60Oqe&" + 
                    "callback=apDCvs5t_wXFGWGz&" + 
                    "username=_EM_8836_XYZ_&" + 
                    "tokenV2=_EM_8837_XYZ_&" + 
                    "instanceId=_EM_8838_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("language=MS57e&altLanguages=PqxuX_&motherTongue=_EM_8840_XYZ_&enabledRules=Cuv&disabledCategories=_EM_8843_XYZ_&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Missing 'text' or 'data' parameter"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/v2/check
    * 2 - (500) POST:/v2/check
    * Found 3 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_9_postOnCheckShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=aX&language=K0mP0PiKJ9kt9M&altLanguages=_EM_3832_XYZ_&motherTongue=_EM_3833_XYZ_&preferredVariants=Li&enabledRules=_EM_3834_XYZ_&disabledCategories=_EM_3836_XYZ_")
                .post(baseUrlOfSut + "/v2/check?EMextraParam123=_EM_679_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'preferredVariants' but you didn't specify 'language=auto'"));
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_173_getMode.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("data=Z7uOBpYX6&language=K73&motherTongue=rmwsmCt2WaqB&preferredVariants=vMsDM&enabledCategories=UiwkrT2XL8&disabledCategories=dG4mI6NOMuADFiF&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=_EM_679_XYZ_&" + 
                    "apiKey=QeD4h&" + 
                    "inputLogging=_EM_3839_XYZ_&" + 
                    "noopLanguages=_EM_3841_XYZ_&" + 
                    "enabled=_EM_3842_XYZ_&" + 
                    "mode=OzYU9E_63P21NzB&" + 
                    "password=rMbGPvwjLfX3&" + 
                    "sourceText=_&" + 
                    "filterDictionaryMatches=_EM_3845_XYZ_&" + 
                    "callback=YQZxj6d0_CYWsfW1&" + 
                    "tokenV2=qE5ZvG9XxB3&" + 
                    "instanceId=PRXCG")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_173_getMode
                .assertThat()
                .body(containsString("Error: Internal Error: Unrecognized token 'Z7uOBpYX6': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"Z7uOBpYX6\"; line: 1, column: 10]"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/v2/check
    * 2 - (400) POST:/v2/check
    * 3 - (400) POST:/v2/check
    * 4 - (500) POST:/v2/check
    * 5 - (400) POST:/v2/check
    * 6 - (500) POST:/v2/check
    * 7 - (500) POST:/v2/check
    * 8 - (200) GET:/v2/languages
    * 9 - (400) POST:/v2/check
    * 10 - (400) POST:/v2/check
    * Found 12 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_10_postOnCheckShowsFaults_100_101() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=gM&language=_EM_4136_XYZ_&altLanguages=_EM_4137_XYZ_&motherTongue=1tJPf9ouPYKd&disabledRules=G38Rm6ZXZSxqluZL&disabledCategories=_EM_4141_XYZ_&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?EMextraParam123=_EM_679_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: '_EM_4136_XYZ_' is not a language code known to LanguageTool. Supported language codes are: ar, ast-ES, be-BY, br-FR, ca-ES, ca-ES-valencia, da-DK, de, de-AT, de-CH, de-DE, de-DE-x-simple-language, el-GR, en, en-AU, en-CA, en-GB, en-NZ, en-US, en-ZA, eo, es, fa, fr, ga-IE, gl-ES, it, ja-JP, km-KH, pl-PL, pt, pt-AO, pt-BR, pt-MZ, pt-PT, ro-RO, ru-RU, sk-SK, sl-SI, sv, ta-IN, tl-PH, uk-UA, zh-CN. The list of languages is read from META-INF/org/languagetool/language-module.properties in the Java classpath. See https://dev.languagetool.org/java-api for details."));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=x&language=3UeIksS&altLanguages=_EM_4143_XYZ_&enabledRules=d5Grcef4&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "inputLogging=_EM_4147_XYZ_&" + 
                    "useragent=_EM_4148_XYZ_&" + 
                    "noopLanguages=_EM_4149_XYZ_&" + 
                    "password=IKtuaS&" + 
                    "preferredLanguages=3UeIksS&" + 
                    "disabled=g&" + 
                    "level=v2J_s7cO9&" + 
                    "ruleValues=EY68vHzn2g&" + 
                    "sourceText=Jr0I0Dc8p&" + 
                    "enableHiddenRules=zSjtk&" + 
                    "token=r&" + 
                    "autodetect=eJjb65o6Zl&" + 
                    "filterDictionaryMatches=UqoWwWEssTbDr&" + 
                    "textSessionId=x&" + 
                    "callback=_EM_4152_XYZ_&" + 
                    "tokenV2=_EM_4154_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'disabled' but the parameter is now called 'disabledRules' in v2 of the API"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_4156_XYZ_&language=_EM_4157_XYZ_&motherTongue=_EM_4158_XYZ_&enabledRules=_EM_4159_XYZ_&enabledCategories=_EM_4160_XYZ_")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: '_EM_4157_XYZ_' is not a language code known to LanguageTool. Supported language codes are: ar, ast-ES, be-BY, br-FR, ca-ES, ca-ES-valencia, da-DK, de, de-AT, de-CH, de-DE, de-DE-x-simple-language, el-GR, en, en-AU, en-CA, en-GB, en-NZ, en-US, en-ZA, eo, es, fa, fr, ga-IE, gl-ES, it, ja-JP, km-KH, pl-PL, pt, pt-AO, pt-BR, pt-MZ, pt-PT, ro-RO, ru-RU, sk-SK, sl-SI, sv, ta-IN, tl-PH, uk-UA, zh-CN. The list of languages is read from META-INF/org/languagetool/language-module.properties in the Java classpath. See https://dev.languagetool.org/java-api for details."));
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_173_getMode.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("data=WokMG&language=_EM_4162_XYZ_&altLanguages=gnRszu4W0Pxprrz&motherTongue=_EM_4163_XYZ_&preferredVariants=Qm&disabledRules=CZqgb2IftI&enabledCategories=_EM_4164_XYZ_")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=gtPXk66iK8Joz6M&" + 
                    "apiKey=_EM_4165_XYZ_&" + 
                    "inputLogging=SQxxExCR39bDT0T&" + 
                    "enabled=R_kg6phR1k&" + 
                    "mode=4pMT&" + 
                    "password=_EM_4166_XYZ_&" + 
                    "enableTempOffRules=kyRHVpQC&" + 
                    "preferredLanguages=_EM_4167_XYZ_&" + 
                    "ruleValues=fnBBfDn3s&" + 
                    "sourceText=ucr0w8&" + 
                    "enableHiddenRules=j9LhaNp0RZ&" + 
                    "autodetect=Ko7bNr&" + 
                    "filterDictionaryMatches=_EM_4170_XYZ_&" + 
                    "textSessionId=&" + 
                    "callback=_EM_4171_XYZ_&" + 
                    "tokenV2=_EM_4173_XYZ_&" + 
                    "instanceId=_EM_4174_XYZ_")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_173_getMode
                .assertThat()
                .body(containsString("Error: Internal Error: Unrecognized token 'WokMG': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"WokMG\"; line: 1, column: 6]"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_4176_XYZ_&data=8sUOURxU&language=oCwJI1thdJZMeci&altLanguages=_EM_4177_XYZ_&preferredVariants=_EM_4178_XYZ_&enabledRules=ndIfFI&enabledCategories=NaXWQzW14qEYhXLl&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?EMextraParam123=_EM_679_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_191_getLevel.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("data=S&language=_EM_4180_XYZ_&preferredVariants=_EM_4181_XYZ_&enabledRules=aws0T08jvYEQ0&disabledRules=&enabledCategories=wQWhUEB1RwaS3Qsi&disabledCategories=gsNNU6mM3FRnO")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "mode=_EM_4185_XYZ_&" + 
                    "password=_EM_4186_XYZ_&" + 
                    "preferredLanguages=AfmrbC3u&" + 
                    "level=WbvmcEkjpDQ&" + 
                    "sourceText=rk&" + 
                    "allowIncompleteResults=9v8Son4n&" + 
                    "filterDictionaryMatches=Zbi6x7PVeLhOUUGs&" + 
                    "textSessionId=4CRSEgWt8&" + 
                    "callback=aJWxbRH5C1&" + 
                    "v=_EM_4188_XYZ_")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_191_getLevel
                .assertThat()
                .body(containsString("Error: Internal Error: Unrecognized token 'S': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"S\"; line: 1, column: 2]"));
        
        // Fault100. HTTP Status 500. org/languagetool/server/ServerTools_191_getLevel.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4192_XYZ_")
                .contentType("application/x-www-form-urlencoded")
                .body("data=hVgH7FzyrYfQw&language=Wr80RojI&altLanguages=_EM_4190_XYZ_&motherTongue=plB3Jj9Z3McE8Gd1&preferredVariants=_EM_4191_XYZ_&enabledRules=&disabledCategories=")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "enableTempOffRules=QDLve&" + 
                    "preferredLanguages=Wr80RojI&" + 
                    "disabled=ZeMsA&" + 
                    "level=&" + 
                    "enableHiddenRules=QZtwk4xur2qa&" + 
                    "filterDictionaryMatches=jLGoVOwULD2N&" + 
                    "textSessionId=_EM_4198_XYZ_&" + 
                    "tokenV2=_EM_4201_XYZ_&" + 
                    "v=_EM_4203_XYZ_")
                .then()
                .statusCode(500)// org/languagetool/server/ServerTools_191_getLevel
                .assertThat()
                .body(containsString("Error: Internal Error: Unrecognized token 'hVgH7FzyrYfQw': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"hVgH7FzyrYfQw\"; line: 1, column: 14]"));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_4205_XYZ_")
                .get(baseUrlOfSut + "/v2/languages?EMextraParam123=_EM_4204_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(44))
                .body("[0].'name'", containsString("Arabic"))
                .body("[0].'code'", containsString("ar"))
                .body("[0].'longCode'", containsString("ar"))
                .body("[1].'name'", containsString("Asturian"))
                .body("[1].'code'", containsString("ast"))
                .body("[1].'longCode'", containsString("ast-ES"))
                .body("[2].'name'", containsString("Belarusian"))
                .body("[2].'code'", containsString("be"))
                .body("[2].'longCode'", containsString("be-BY"))
                ; // Skipping assertions on the remaining 41 elements. This limit of 3 elements can be increased in the configurations
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("text=c6GlBIkVG&data=XP&language=taNlSUNvmldJhiOL&altLanguages=WwYBcPK&preferredVariants=V4v&enabledRules=8fMv2L5Te6f5Z&disabledRules=ONysubO&disabledCategories=PhdHLDXFID&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=8QZ&" + 
                    "noopLanguages=uJIOJ&" + 
                    "mode=TM&" + 
                    "preferredLanguages=taNlSUNvmldJhiOL&" + 
                    "disabled=_EM_4209_XYZ_&" + 
                    "enableHiddenRules=_EM_4211_XYZ_&" + 
                    "token=baCzveeb0&" + 
                    "autodetect=DiydEk&" + 
                    "filterDictionaryMatches=rAjRmG1vf&" + 
                    "callback=JJ874ek_P7&" + 
                    "username=_EM_4214_XYZ_&" + 
                    "tokenV2=GyFP&" + 
                    "instanceId=JrO&" + 
                    "v=PM")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4219_XYZ_")
                .contentType("application/x-www-form-urlencoded")
                .body("data=&language=KVqTYmLLkxw&altLanguages=QLNNay1Uz&preferredVariants=_EM_4216_XYZ_&enabledRules=Lnqh&disabledRules=kbJHCPE&enabledCategories=_EM_4217_XYZ_")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: 'data' key in JSON requires 'text' or 'annotation' key"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/v2/languages
    */
    @Test @Timeout(60)
    public void test_11_getOnLanguagesReturns44Elements() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v2/languages?EMextraParam123=_EM_0_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(44))
                .body("[0].'name'", containsString("Arabic"))
                .body("[0].'code'", containsString("ar"))
                .body("[0].'longCode'", containsString("ar"))
                .body("[1].'name'", containsString("Asturian"))
                .body("[1].'code'", containsString("ast"))
                .body("[1].'longCode'", containsString("ast-ES"))
                .body("[2].'name'", containsString("Belarusian"))
                .body("[2].'code'", containsString("be"))
                .body("[2].'longCode'", containsString("be-BY"))
                ; // Skipping assertions on the remaining 41 elements. This limit of 3 elements can be increased in the configurations
    }
    
    
    /**
    * Calls:
    * (200) GET:/v2/swagger
    */
    @Test @Timeout(60)
    public void test_12_getOnSwaggerReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/swagger")
                .then()
                .statusCode(200);
    }
    
    
    /**
    * Calls:
    * (200) POST:/v2/check
    */
    @Test @Timeout(60)
    public void test_13_postOnCheckReturns200() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_672_XYZ_&language=cA&enabledRules=PzaYmPg7OR6IOE5v&disabledRules=_EM_676_XYZ_&enabledCategories=_EM_677_XYZ_&disabledCategories=_EM_678_XYZ_&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?EMextraParam123=_EM_679_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'software'.'name'", containsString("LanguageTool"))
                .body("'software'.'version'", containsString("5.2-SNAPSHOT"))
                .body("'software'.'buildDate'", nullValue())
                .body("'software'.'apiVersion'", numberMatches(1.0))
                .body("'software'.'premium'", equalTo(false))
                .body("'software'.'premiumHint'", containsString("You might be missing errors only the Premium version can find. Contact us at support<at>languagetoolplus.com."))
                .body("'software'.'status'", containsString(""))
                .body("'warnings'.'incompleteResults'", equalTo(false))
                .body("'language'.'name'", containsString("Catalan"))
                .body("'language'.'code'", containsString("ca-ES"))
                .body("'language'.'detectedLanguage'.'name'", containsString("Catalan"))
                .body("'language'.'detectedLanguage'.'code'", containsString("ca-ES"))
                .body("'language'.'detectedLanguage'.'confidence'", numberMatches(0.32367373))
                .body("'matches'.size()", equalTo(1))
                .body("'matches'[0].'message'", containsString("Possible error ortogràfic."))
                .body("'matches'[0].'shortMessage'", containsString("Error ortogràfic"))
                .body("'matches'[0].'replacements'.size()", equalTo(0))
                .body("'matches'[0].'offset'", numberMatches(0.0))
                .body("'matches'[0].'length'", numberMatches(12.0))
                .body("'matches'[0].'context'.'text'", containsString("_EM_672_XYZ_"))
                .body("'matches'[0].'context'.'offset'", numberMatches(0.0))
                .body("'matches'[0].'context'.'length'", numberMatches(12.0))
                .body("'matches'[0].'sentence'", containsString("_EM_672_XYZ_"))
                .body("'matches'[0].'type'.'typeName'", containsString("Other"))
                .body("'matches'[0].'rule'.'description'", containsString("Possible error ortogràfic"))
                .body("'matches'[0].'rule'.'issueType'", containsString("misspelling"))
                .body("'matches'[0].'rule'.'category'.'name'", containsString("Errors ortogràfics"))
                .body("'matches'[0].'ignoreForIncompleteSentence'", equalTo(false))
                .body("'matches'[0].'contextForSureMatch'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/v2/check
    * 2 - (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_14_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=MMXLLqQPqf47kOY&language=Ca&enabledRules=_EM_3805_XYZ_&disabledRules=_EM_3805_XYZ_&enabledCategories=_EM_3806_XYZ_&disabledCategories=wr0_")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'software'.'name'", containsString("LanguageTool"))
                .body("'software'.'version'", containsString("5.2-SNAPSHOT"))
                .body("'software'.'buildDate'", nullValue())
                .body("'software'.'apiVersion'", numberMatches(1.0))
                .body("'software'.'premium'", equalTo(false))
                .body("'software'.'premiumHint'", containsString("You might be missing errors only the Premium version can find. Contact us at support<at>languagetoolplus.com."))
                .body("'software'.'status'", containsString(""))
                .body("'warnings'.'incompleteResults'", equalTo(false))
                .body("'language'.'name'", containsString("Catalan"))
                .body("'language'.'code'", containsString("ca-ES"))
                .body("'language'.'detectedLanguage'.'name'", containsString("English (US)"))
                .body("'language'.'detectedLanguage'.'code'", containsString("en-US"))
                .body("'language'.'detectedLanguage'.'confidence'", numberMatches(0.5544517))
                .body("'matches'.size()", equalTo(1))
                .body("'matches'[0].'message'", containsString("Possible error ortogràfic."))
                .body("'matches'[0].'shortMessage'", containsString("Error ortogràfic"))
                .body("'matches'[0].'replacements'.size()", equalTo(0))
                .body("'matches'[0].'offset'", numberMatches(0.0))
                .body("'matches'[0].'length'", numberMatches(15.0))
                .body("'matches'[0].'context'.'text'", containsString("MMXLLqQPqf47kOY"))
                .body("'matches'[0].'context'.'offset'", numberMatches(0.0))
                .body("'matches'[0].'context'.'length'", numberMatches(15.0))
                .body("'matches'[0].'sentence'", containsString("MMXLLqQPqf47kOY"))
                .body("'matches'[0].'type'.'typeName'", containsString("Other"))
                .body("'matches'[0].'rule'.'description'", containsString("Possible error ortogràfic"))
                .body("'matches'[0].'rule'.'issueType'", containsString("misspelling"))
                .body("'matches'[0].'rule'.'category'.'name'", containsString("Errors ortogràfics"))
                .body("'matches'[0].'ignoreForIncompleteSentence'", equalTo(false))
                .body("'matches'[0].'contextForSureMatch'", numberMatches(0.0));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=T9bVoC1a8GwDJ&language=ci&altLanguages=_EM_3809_XYZ_&motherTongue=q1Q7ZhaxHtcEz8&preferredVariants=_EM_3810_XYZ_&disabledRules=W&disabledCategories=U&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=k%C2%82pCHB2jw&" + 
                    "inputLogging=no&" + 
                    "noopLanguages=Ic%60R9&" + 
                    "password=NhSjQrHfps9&" + 
                    "enableTempOffRules=_EM_3814_XYZ_&" + 
                    "disabled=ppb5Oy7NReetb&" + 
                    "level=Xtihd&" + 
                    "ruleValues=7vP5ihxhR1F&" + 
                    "enableHiddenRules=apmz5CR.vy3j6Q&" + 
                    "allowIncompleteResults=lJoMIKDJ&" + 
                    "autodetect=cxQKr2NBTbGbKZI&" + 
                    "filterDictionaryMatches=GT&" + 
                    "textSessionId=T9bVoC1a8GvDJ&" + 
                    "username=l9CaKw&" + 
                    "tokenV2=_EM_4674_XYZ_&" + 
                    "instanceId=r7&" + 
                    "v=4")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'disabled' but the parameter is now called 'disabledRules' in v2 of the API"));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/v2/check
    * 2 - (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_15_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_13099_XYZ_&language=IT&enabledRules=_EM_3805_XYZ_&disabledRules=_EM_3805_XYZ_&enabledCategories=_EM_3806_XYZ_&disabledCategories=wr0_W")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'software'.'name'", containsString("LanguageTool"))
                .body("'software'.'version'", containsString("5.2-SNAPSHOT"))
                .body("'software'.'buildDate'", nullValue())
                .body("'software'.'apiVersion'", numberMatches(1.0))
                .body("'software'.'premium'", equalTo(false))
                .body("'software'.'premiumHint'", containsString("You might be missing errors only the Premium version can find. Contact us at support<at>languagetoolplus.com."))
                .body("'software'.'status'", containsString(""))
                .body("'warnings'.'incompleteResults'", equalTo(false))
                .body("'language'.'name'", containsString("Italian"))
                .body("'language'.'code'", containsString("it"))
                .body("'language'.'detectedLanguage'.'name'", containsString("Catalan"))
                .body("'language'.'detectedLanguage'.'code'", containsString("ca-ES"))
                .body("'language'.'detectedLanguage'.'confidence'", numberMatches(0.32367373))
                .body("'matches'.size()", equalTo(0));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=T9bVoC1a8GwDJ&language=cA&altLanguages=_EM_3809_XYZ_&motherTongue=q1Q7ZhaxHtcEz8&preferredVariants=_EM_3810_XYZ_&disabledRules=W&disabledCategories=U&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=k%C2%82pCHB2jw&" + 
                    "inputLogging=no&" + 
                    "noopLanguages=IcdR9&" + 
                    "mode=_EM_3812_XYZ_&" + 
                    "password=NhSjRrHfps9&" + 
                    "enableTempOffRules=&" + 
                    "level=PUaNcj9TF7uqG&" + 
                    "enableHiddenRules=apmz5CR.vy3j6&" + 
                    "token=AiggPwCgA&" + 
                    "allowIncompleteResults=lJoMIKDJ&" + 
                    "autodetect=cxQKr2NBTbGbKZI&" + 
                    "filterDictionaryMatches=GT&" + 
                    "textSessionId=T9bUoC1a8GvCJ&" + 
                    "callback=PQSb9j3QVSep_Lj&" + 
                    "username=l9CaKw&" + 
                    "v=")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'autodetect' but automatic language detection is now activated with 'language=auto' in v2 of the API"));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/v2/check
    * 2 - (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_16_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_13099_XYZ_&language=iT&enabledRules=_EM_3805_XYZ_&disabledRules=_EM_3805_XYZ_&enabledCategories=_EM_3806_XYZ_&disabledCategories=wr0_")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'software'.'name'", containsString("LanguageTool"))
                .body("'software'.'version'", containsString("5.2-SNAPSHOT"))
                .body("'software'.'buildDate'", nullValue())
                .body("'software'.'apiVersion'", numberMatches(1.0))
                .body("'software'.'premium'", equalTo(false))
                .body("'software'.'premiumHint'", containsString("You might be missing errors only the Premium version can find. Contact us at support<at>languagetoolplus.com."))
                .body("'software'.'status'", containsString(""))
                .body("'warnings'.'incompleteResults'", equalTo(false))
                .body("'language'.'name'", containsString("Italian"))
                .body("'language'.'code'", containsString("it"))
                .body("'language'.'detectedLanguage'.'name'", containsString("Catalan"))
                .body("'language'.'detectedLanguage'.'code'", containsString("ca-ES"))
                .body("'language'.'detectedLanguage'.'confidence'", numberMatches(0.32367373))
                .body("'matches'.size()", equalTo(0));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=T9bVoC1a8GwDJ&language=cA&altLanguages=_EM_3809_XYZ_&motherTongue=q1Q7ZhaxHtcEz8&preferredVariants=_EM_3810_XYZ_&disabledRules=W&disabledCategories=U&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "inputLogging=no&" + 
                    "mode=_EM_3812_XYZ_&" + 
                    "password=NhSjRrHfps9&" + 
                    "enableTempOffRules=&" + 
                    "disabled=ppb5Oy7NRgetb&" + 
                    "level=PUaNcj9TF7uqG&" + 
                    "ruleValues=7vP5ihxhR1&" + 
                    "sourceText=_EM_12552_XYZ_&" + 
                    "enableHiddenRules=apmz5CR.vy3j6&" + 
                    "token=AiggPwCgAx&" + 
                    "allowIncompleteResults=lJoMIKDJ&" + 
                    "filterDictionaryMatches=GT&" + 
                    "textSessionId=T9bUoC1a8GvCJ&" + 
                    "username=l9CaJw&" + 
                    "instanceId=r8&" + 
                    "v=")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'disabled' but the parameter is now called 'disabledRules' in v2 of the API"));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/v2/check
    * 2 - (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_17_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=MMXLLqQPqf47kOY&language=Ca&enabledRules=_EM_3805_XYZ_&disabledRules=_EM_3805_XYZ_&enabledCategories=_EM_3806_XYZ_&disabledCategories=wr0a")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'software'.'name'", containsString("LanguageTool"))
                .body("'software'.'version'", containsString("5.2-SNAPSHOT"))
                .body("'software'.'buildDate'", nullValue())
                .body("'software'.'apiVersion'", numberMatches(1.0))
                .body("'software'.'premium'", equalTo(false))
                .body("'software'.'premiumHint'", containsString("You might be missing errors only the Premium version can find. Contact us at support<at>languagetoolplus.com."))
                .body("'software'.'status'", containsString(""))
                .body("'warnings'.'incompleteResults'", equalTo(false))
                .body("'language'.'name'", containsString("Catalan"))
                .body("'language'.'code'", containsString("ca-ES"))
                .body("'language'.'detectedLanguage'.'name'", containsString("English (US)"))
                .body("'language'.'detectedLanguage'.'code'", containsString("en-US"))
                .body("'language'.'detectedLanguage'.'confidence'", numberMatches(0.5544517))
                .body("'matches'.size()", equalTo(1))
                .body("'matches'[0].'message'", containsString("Possible error ortogràfic."))
                .body("'matches'[0].'shortMessage'", containsString("Error ortogràfic"))
                .body("'matches'[0].'replacements'.size()", equalTo(0))
                .body("'matches'[0].'offset'", numberMatches(0.0))
                .body("'matches'[0].'length'", numberMatches(15.0))
                .body("'matches'[0].'context'.'text'", containsString("MMXLLqQPqf47kOY"))
                .body("'matches'[0].'context'.'offset'", numberMatches(0.0))
                .body("'matches'[0].'context'.'length'", numberMatches(15.0))
                .body("'matches'[0].'sentence'", containsString("MMXLLqQPqf47kOY"))
                .body("'matches'[0].'type'.'typeName'", containsString("Other"))
                .body("'matches'[0].'rule'.'description'", containsString("Possible error ortogràfic"))
                .body("'matches'[0].'rule'.'issueType'", containsString("misspelling"))
                .body("'matches'[0].'rule'.'category'.'name'", containsString("Errors ortogràfics"))
                .body("'matches'[0].'ignoreForIncompleteSentence'", equalTo(false))
                .body("'matches'[0].'contextForSureMatch'", numberMatches(0.0));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_12826_XYZ_&data=_EM_3808_XYZ_&language=EPnWLNpXNSFkUQ45&motherTongue=q1Q7ZhaxHtcEz8&disabledRules=&enabledCategories=AkOFwF&disabledCategories=5&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=k%C2%82pCHB2jw&" + 
                    "inputLogging=_EM_12827_XYZ_&" + 
                    "noopLanguages=IcdR9&" + 
                    "enabled=cCyAz&" + 
                    "mode=_EM_3812_XYZ_&" + 
                    "password=NhSjQvHfps9&" + 
                    "preferredLanguages=_EM_12550_XYZ_&" + 
                    "disabled=ppd5Oy7NReetb&" + 
                    "level=_EM_12551_XYZ_&" + 
                    "ruleValues=7vP5ihxhR1F&" + 
                    "sourceText=_EM_12552_XYZ_&" + 
                    "enableHiddenRules=apmz5CR.zy3j6&" + 
                    "allowIncompleteResults=lJoMIKDJ&" + 
                    "autodetect=cxQKr2NBTbGbKZI&" + 
                    "filterDictionaryMatches=GT&" + 
                    "callback=PQSb9j3QVSep_Lj&" + 
                    "username=l9CaKwq&" + 
                    "instanceId=r6")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_18_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=W&language=auto&disabledRules=NWslEA_GKTgUW&enabledCategories=jL7ohlP&disabledCategories=V7ywVHuoPoV&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You cannot specify disabled rules or categories using enabledOnly=true"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_19_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3366_XYZ_")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_3359_XYZ_&language=7_XPITbKCJbH8a6&altLanguages=_EM_3361_XYZ_&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?EMextraParam123=_EM_3365_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: '7_XPITbKCJbH8a6' is not a language code known to LanguageTool. Supported language codes are: ar, ast-ES, be-BY, br-FR, ca-ES, ca-ES-valencia, da-DK, de, de-AT, de-CH, de-DE, de-DE-x-simple-language, el-GR, en, en-AU, en-CA, en-GB, en-NZ, en-US, en-ZA, eo, es, fa, fr, ga-IE, gl-ES, it, ja-JP, km-KH, pl-PL, pt, pt-AO, pt-BR, pt-MZ, pt-PT, ro-RO, ru-RU, sk-SK, sl-SI, sv, ta-IN, tl-PH, uk-UA, zh-CN. The list of languages is read from META-INF/org/languagetool/language-module.properties in the Java classpath. See https://dev.languagetool.org/java-api for details."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_20_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("text=0pagkb&language=a12n&altLanguages=_EM_652_XYZ_&motherTongue=chP8lHzNYBJlC&preferredVariants=Kj&disabledRules=_EM_653_XYZ_&enabledCategories=DxL&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'preferredVariants' but you didn't specify 'language=auto'"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_21_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3505_XYZ_")
                .contentType("application/x-www-form-urlencoded")
                .body("language=_EM_3501_XYZ_&altLanguages=0LMrJdi3W792WF3&motherTongue=0M&enabledRules=_EM_3502_XYZ_&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Missing 'text' or 'data' parameter"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_22_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("data=&language=_EM_2604_XYZ_&preferredVariants=_EM_2606_XYZ_&enabledRules=cceMN&disabledRules=FFy5ht0BX&disabledCategories=LHu&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: 'data' key in JSON requires 'text' or 'annotation' key"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_23_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_4075_XYZ_&language=eROJEYWM&altLanguages=ZtEnoUjmlO2Gu&disabledRules=_EM_4076_XYZ_&enabledCategories=_EM_4077_XYZ_&disabledCategories=T3JtlqqHhvp&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=42&" + 
                    "apiKey=w&" + 
                    "inputLogging=no&" + 
                    "tokenV2=_EM_4078_XYZ_&" + 
                    "level=t1iq1l7ackhw4Bt&" + 
                    "ruleValues=_EM_4079_XYZ_&" + 
                    "useragent=fKPUhpCSCAP&" + 
                    "noopLanguages=_EM_4080_XYZ_&" + 
                    "enabled=4&" + 
                    "token=hufQEZ8iD7&" + 
                    "mode=WdJgDpgqeDED&" + 
                    "password=_EM_4081_XYZ_&" + 
                    "autodetect=_EM_4082_XYZ_&" + 
                    "instanceId=_E18pyCizYSK&" + 
                    "filterDictionaryMatches=d6LtsPIap&" + 
                    "v=_EM_4083_XYZ_&" + 
                    "preferredLanguages=Q5iHq2XXIDRVsa6t&" + 
                    "textSessionId=_EM_4074_XYZ_&" + 
                    "disabled=nAd&" + 
                    "username=rz_4Mj")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'enabled' but the parameter is now called 'enabledRules' in v2 of the API"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_24_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=X_6N3KZKZEQiv&language=a%5Ey&altLanguages=H&preferredVariants=_EM_1264_XYZ_&disabledRules=_Nz&enabledCategories=XeI&disabledCategories=B1l1&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=30L4d1_pNRejF&" + 
                    "inputLogging=fNx&" + 
                    "tokenV2=WkZb_H6SNzdEZ&" + 
                    "level=_EM_2662_XYZ_&" + 
                    "ruleValues=LRn8G1UQlAP&" + 
                    "useragent=BmK_VA&" + 
                    "enabled=pIexp%2Fs2rSWEJ&" + 
                    "token=G9GC85&" + 
                    "mode=_EM_2663_XYZ_&" + 
                    "autodetect=ciS0S5&" + 
                    "password=7yms8K66wZWHoj&" + 
                    "instanceId=5FCLugQjW6l&" + 
                    "filterDictionaryMatches=_EM_2664_XYZ_&" + 
                    "v=_EM_2665_XYZ_&" + 
                    "textSessionId=_EM_2666_XYZ_&" + 
                    "disabled=SLJyt&" + 
                    "multilingual=_EM_2667_XYZ_&" + 
                    "username=_EM_2668_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'enabled' but the parameter is now called 'enabledRules' in v2 of the API"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_25_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_3359_XYZ_&language=7_XPITbKCJbH8a6&altLanguages=grlNW&motherTongue=_EM_3362_XYZ_&enabledRules=w1D6zgnb&enabledCategories=Q&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=_EM_5822_XYZ_&" + 
                    "inputLogging=DuMnO7s&" + 
                    "tokenV2=HV_bEBb3&" + 
                    "level=_EM_5823_XYZ_&" + 
                    "ruleValues=sCCt0kRwXA_Din&" + 
                    "useragent=9&" + 
                    "noopLanguages=1kjzpR&" + 
                    "enabled=_EM_5832_XYZ_&" + 
                    "token=_EM_5833_XYZ_&" + 
                    "mode=all&" + 
                    "password=_EM_5834_XYZ_&" + 
                    "autodetect=_EM_5825_XYZ_&" + 
                    "instanceId=_EM_5826_XYZ_&" + 
                    "filterDictionaryMatches=_EM_5827_XYZ_&" + 
                    "v=o&" + 
                    "preferredLanguages=bSTtVIOFvR&" + 
                    "textSessionId=pxPFkQqUQ&" + 
                    "disabled=aam401izpkd6pyq9&" + 
                    "username=_EM_5831_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'enabled' but the parameter is now called 'enabledRules' in v2 of the API"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_26_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_650_XYZ_&language=a12&altLanguages=_EM_652_XYZ_&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=42&" + 
                    "apiKey=Mouw3W3Zw5y&" + 
                    "inputLogging=_EM_3162_XYZ_&" + 
                    "tokenV2=_EM_3163_XYZ_&" + 
                    "level=_EM_3164_XYZ_&" + 
                    "ruleValues=_EM_3165_XYZ_&" + 
                    "useragent=dFeOjA1YA6K8ae&" + 
                    "noopLanguages=GRp_QnEljEmi&" + 
                    "enabled=byXCPDxBuV&" + 
                    "token=ar5S8O&" + 
                    "mode=HJj&" + 
                    "password=vouFnbtxWSo6Xu&" + 
                    "autodetect=MT8M5jlg85g5N&" + 
                    "instanceId=_EM_3166_XYZ_&" + 
                    "filterDictionaryMatches=_EM_3167_XYZ_&" + 
                    "v=eJ1al&" + 
                    "preferredLanguages=42&" + 
                    "textSessionId=GQoFVPpXKjCincK&" + 
                    "disabled=_EM_3168_XYZ_&" + 
                    "username=Y2dbdRk1")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'enabled' but the parameter is now called 'enabledRules' in v2 of the API"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_27_postOnV2CheckWithQueryParamsEmptyPassword() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_1317_XYZ_&language=de-%5CE%28d%7CD%29%28e%7CE%29%5CQ-%5CE%28x%7CX%29%5CQ-%5CE%28s%7CS%29%28i%7CI%29%28m%7CM%29%28p%7CP%29%28l%7CL%29%28e%7CE%29%5CQ-LaNgUAGe&altLanguages=QJWxctKsHfNcQ&motherTongue=kc15_VX1GJPZvn&preferredVariants=cAcym0ATezW&enabledRules=_EM_806_XYZ_&disabledRules=_EM_807_XYZ_&disabledCategories=_EM_808_XYZ_&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=_ODUdvH&" + 
                    "inputLogging=_EM_1786_XYZ_&" + 
                    "tokenV2=_EM_1787_XYZ_&" + 
                    "level=_EM_1788_XYZ_&" + 
                    "ruleValues=qKBJutck&" + 
                    "useragent=eeANMz&" + 
                    "enabled=wpEKooBUn6oc1&" + 
                    "token=_EM_1789_XYZ_&" + 
                    "mode=_EM_1790_XYZ_&" + 
                    "autodetect=aEd3qtuDrrJ&" + 
                    "password=&" + 
                    "instanceId=oxwe0&" + 
                    "filterDictionaryMatches=06p&" + 
                    "v=_EM_1791_XYZ_&" + 
                    "textSessionId=%60&" + 
                    "disabled=N2ab3W5Ul3gl&" + 
                    "username=2")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'enabled' but the parameter is now called 'enabledRules' in v2 of the API"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_28_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=kMK7fkV&data=SBfdFan&language=&enabledRules=_EM_389_XYZ_&disabledRules=G9OYwXYe6gAa7&enabledCategories=_EM_3318_XYZ_&disabledCategories=_EM_391_XYZ_&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=42&" + 
                    "apiKey=_EM_3319_XYZ_&" + 
                    "inputLogging=_EM_3320_XYZ_&" + 
                    "tokenV2=eGyFhdywGV&" + 
                    "level=bkWqkdegse6SRXnj&" + 
                    "ruleValues=F&" + 
                    "useragent=_EM_3321_XYZ_&" + 
                    "noopLanguages=_lvxmP1sz_jNnqQ&" + 
                    "enabled=l&" + 
                    "token=1WsfJZ5&" + 
                    "mode=_EM_3322_XYZ_&" + 
                    "password=%2F&" + 
                    "autodetect=EdKQE&" + 
                    "instanceId=djmgzJSnFIjR6j&" + 
                    "filterDictionaryMatches=LM%60bF&" + 
                    "v=B1vE&" + 
                    "preferredLanguages=_EM_3323_XYZ_&" + 
                    "textSessionId=Er&" + 
                    "disabled=P7mcW1sxNZ&" + 
                    "username=Cv")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_29_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=&language=EXEhsbzU&motherTongue=_EM_10842_XYZ_&enabledRules=_EM_10844_XYZ_&disabledCategories=izKvmL&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: 'EXEhsbzU' is not a language code known to LanguageTool. Supported language codes are: ar, ast-ES, be-BY, br-FR, ca-ES, ca-ES-valencia, da-DK, de, de-AT, de-CH, de-DE, de-DE-x-simple-language, el-GR, en, en-AU, en-CA, en-GB, en-NZ, en-US, en-ZA, eo, es, fa, fr, ga-IE, gl-ES, it, ja-JP, km-KH, pl-PL, pt, pt-AO, pt-BR, pt-MZ, pt-PT, ro-RO, ru-RU, sk-SK, sl-SI, sv, ta-IN, tl-PH, uk-UA, zh-CN. The list of languages is read from META-INF/org/languagetool/language-module.properties in the Java classpath. See https://dev.languagetool.org/java-api for details."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_30_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=COVZQh2k4EiIn&language=auto&altLanguages=hJ5PxHYU&motherTongue=Q8CD3HSnlZs&enabledRules=PzaYmPg7OR.IOE5v&disabledRules=_EM_676_XYZ_&enabledCategories=_EM_677_XYZ_&disabledCategories=W3DjTdBOVW0v9_&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=_EM_11109_XYZ_&" + 
                    "inputLogging=Bb60C9NoF5B&" + 
                    "useragent=w6d&" + 
                    "noopLanguages=_EM_11110_XYZ_&" + 
                    "enabled=LpXbpV8UW&" + 
                    "mode=_EM_11111_XYZ_&" + 
                    "password=k7MhIq6QQVKOioYb&" + 
                    "enableTempOffRules=Qe&" + 
                    "preferredLanguages=_EM_11097_XYZ_&" + 
                    "disabled=ng_YjVjIidR&" + 
                    "level=8&" + 
                    "ruleValues=bdWnn6&" + 
                    "sourceText=_EM_11101_XYZ_&" + 
                    "enableHiddenRules=_EM_11102_XYZ_&" + 
                    "token=aDpdc8HTOLK1Hf&" + 
                    "allowIncompleteResults=_EM_11112_XYZ_&" + 
                    "autodetect=YN8q6NF5wiPd&" + 
                    "filterDictionaryMatches=_EM_11107_XYZ_&" + 
                    "textSessionId=IM1PxiskjKwx&" + 
                    "callback=_EM_11108_XYZ_&" + 
                    "username=npqNvx1R4_tn")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'enabled' but the parameter is now called 'enabledRules' in v2 of the API"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_31_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_5497_XYZ_&language=&motherTongue=_EM_5498_XYZ_&enabledCategories=7vJ&disabledCategories=_EM_5502_XYZ_&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?EMextraParam123=_EM_5503_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Missing 'language' parameter, e.g. 'language=en-US' for American English or 'language=fr' for French"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/v2/check
    * 2 - (400) POST:/v2/check
    * Found 2 potential faults of type-code 101
    */
    @Test @Timeout(60)
    public void test_32_postOnV2CheckWithQueryParamsEmptyLevelAndEmptyV() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("language=_EM_2745_XYZ_&motherTongue=qdV&preferredVariants=_EM_2746_XYZ_&enabledRules=v3Zni&enabledCategories=_EM_2747_XYZ_&disabledCategories=_EM_2748_XYZ_")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Missing 'text' or 'data' parameter"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("text=6&language=_EM_2750_XYZ_&altLanguages=_EM_2751_XYZ_&preferredVariants=jjTrbiUcvA&enabledRules=hF3kV5QCwfcae&enabledCategories=_EM_2753_XYZ_&disabledCategories=_EM_2754_XYZ_&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=42&" + 
                    "apiKey=_EM_2755_XYZ_&" + 
                    "level=&" + 
                    "ruleValues=_EM_2758_XYZ_&" + 
                    "instanceId=G9Md3_1n&" + 
                    "v=&" + 
                    "textSessionId=6")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: apiKey was set, but username was not: _EM_2755_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_33_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("text=WWM41_&language=dkxw&altLanguages=_EM_3773_XYZ_&motherTongue=KSk&preferredVariants=2rNFSyYQF4&disabledRules=_EM_3774_XYZ_&enabledCategories=tLspxxWrApCPACEr&disabledCategories=fHWuY4z6sGJCx&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=_EM_3775_XYZ_&" + 
                    "apiKey=_EM_4010_XYZ_&" + 
                    "inputLogging=_EM_4011_XYZ_&" + 
                    "tokenV2=_EM_4012_XYZ_&" + 
                    "level=N&" + 
                    "ruleValues=H0jmqXKvYl&" + 
                    "useragent=_EM_4018_XYZ_&" + 
                    "noopLanguages=_EM_4019_XYZ_&" + 
                    "enabled=zyua5Y0XQ3kbIuY1&" + 
                    "token=_EM_4016_XYZ_&" + 
                    "mode=allButTextLevelOnly&" + 
                    "password=ihto4OWZC_i&" + 
                    "autodetect=_EM_4017_XYZ_&" + 
                    "instanceId=leF&" + 
                    "filterDictionaryMatches=_EM_4020_XYZ_&" + 
                    "v=0D4D__ew&" + 
                    "preferredLanguages=OUMFq8DnIrx_&" + 
                    "textSessionId=_EM_4021_XYZ_&" + 
                    "disabled=nCdossAYLM&" + 
                    "username=_EM_4022_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'enabled' but the parameter is now called 'enabledRules' in v2 of the API"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/v2/check
    * 2 - (400) POST:/v2/check
    * Found 2 potential faults of type-code 101
    */
    @Test @Timeout(60)
    public void test_34_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("language=pDeMoqwvo7iMR0&disabledRules=DfEohxCBypPC&enabledCategories=_EM_203_XYZ_&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Missing 'text' or 'data' parameter"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("text=_EM_205_XYZ_&language=qHPSJC3POs&altLanguages=_EM_206_XYZ_&motherTongue=_EM_207_XYZ_&preferredVariants=_EM_208_XYZ_&enabledRules=_EM_209_XYZ_&disabledRules=Lvv&enabledCategories=uxTX")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=42&" + 
                    "inputLogging=_EM_211_XYZ_&" + 
                    "tokenV2=w5EiTgNLRAb&" + 
                    "useragent=Y3mUIrASwu&" + 
                    "mode=GiZebOM&" + 
                    "instanceId=V6g&" + 
                    "textSessionId=IAM2BPCHMsE4Pu0p&" + 
                    "username=_EM_217_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: With 'username' set, you also need to specify either 'apiKey' (recommended) or 'password'"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_35_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/x-www-form-urlencoded")
                .body("text=cMZxy&data=_EM_449_XYZ_&language=kYiTDF32lTYm&altLanguages=ByJyaZQ1S&motherTongue=QSqTD&preferredVariants=CesfO9_Gmxqmxf&disabledRules=_EM_450_XYZ_&enabledCategories=_EM_326_XYZ_&disabledCategories=RLaNDRO&enabledOnly=false")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "EMextraParam123=_EM_327_XYZ_&" + 
                    "mode=_EM_451_XYZ_&" + 
                    "instanceId=IQLLbooZXm&" + 
                    "inputLogging=_EM_452_XYZ_&" + 
                    "apiKey=ZUUVQU1UtUhK&" + 
                    "tokenV2=L%60hpFWG&" + 
                    "level=default&" + 
                    "v=jwZsliwt&" + 
                    "useragent=_EM_453_XYZ_&" + 
                    "username=P")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_36_postOnCheckReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=3h3MvTAqM&language=-x-&altLanguages=_EM_8403_XYZ_&motherTongue=_EM_3855_XYZ_&enabledRules=gMhjr9zwTu8IS6Gr&disabledRules=NWslEA_GKTgUW&enabledCategories=jL7ohlPe&disabledCategories=V7ywVHuoPoVh&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: '-x-' is not a language code known to LanguageTool. Supported language codes are: ar, ast-ES, be-BY, br-FR, ca-ES, ca-ES-valencia, da-DK, de, de-AT, de-CH, de-DE, de-DE-x-simple-language, el-GR, en, en-AU, en-CA, en-GB, en-NZ, en-US, en-ZA, eo, es, fa, fr, ga-IE, gl-ES, it, ja-JP, km-KH, pl-PL, pt, pt-AO, pt-BR, pt-MZ, pt-PT, ro-RO, ru-RU, sk-SK, sl-SI, sv, ta-IN, tl-PH, uk-UA, zh-CN. The list of languages is read from META-INF/org/languagetool/language-module.properties in the Java classpath. See https://dev.languagetool.org/java-api for details."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/v2/check
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_37_postOnV2CheckWithQueryParamsEmptyApiKeyReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1110_XYZ_")
                .contentType("application/x-www-form-urlencoded")
                .body("text=V&data=_EM_3905_XYZ_&language=_EM_1104_XYZ_&altLanguages=_EM_1210_XYZ_&motherTongue=uek&preferredVariants=79HT3ZQTtazS6rg&enabledRules=KzvXhxdU&disabledRules=zk&enabledCategories=n&disabledCategories=rG6xmRbfZFtBGm&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "mode=textLevelOnly&" + 
                    "instanceId=LMBGWRHMj&" + 
                    "inputLogging=Sc4RBQSTO&" + 
                    "apiKey=&" + 
                    "tokenV2=XM9%3BFsZwdPm&" + 
                    "level=UUMU5UU2_XUZ_&" + 
                    "v=_zGnr1LIICJZHvDX&" + 
                    "useragent=yTq8oKmhwFTUO&" + 
                    "username=8iiHVALVQd2I_Tdu")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/v2/check
    * 2 - (400) POST:/v2/check
    * Found 2 potential faults of type-code 101
    */
    @Test @Timeout(60)
    public void test_38_postOnV2CheckWithQueryParamsEmptyLevelReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=4osIr%5DME6yUZeh&language=PT&altLanguages=l_yZ9jvPmDT52P&motherTongue=ru&enabledRules=QI8RMkZZdVY&disabledRules=OpZYMKuthfPUZ&enabledCategories=_EM_6356_XYZ_&disabledCategories=_EM_7904_XYZ_&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: 'l_yZ9jvPmDT52P' is not a language code known to LanguageTool. Supported language codes are: ar, ast-ES, be-BY, br-FR, ca-ES, ca-ES-valencia, da-DK, de, de-AT, de-CH, de-DE, de-DE-x-simple-language, el-GR, en, en-AU, en-CA, en-GB, en-NZ, en-US, en-ZA, eo, es, fa, fr, ga-IE, gl-ES, it, ja-JP, km-KH, pl-PL, pt, pt-AO, pt-BR, pt-MZ, pt-PT, ro-RO, ru-RU, sk-SK, sl-SI, sv, ta-IN, tl-PH, uk-UA, zh-CN. The list of languages is read from META-INF/org/languagetool/language-module.properties in the Java classpath. See https://dev.languagetool.org/java-api for details."));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=b&language=auto&motherTongue=JJL9cr3_AKw2BgDr&preferredVariants=_EM_7985_XYZ_&enabledRules=3&disabledRules=wHXa3")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=_EM_8U2%3FUXUZ_&" + 
                    "inputLogging=no&" + 
                    "useragent=_EM_6358_XYZ_&" + 
                    "noopLanguages=de8izaV3yxEe5m&" + 
                    "enabled=A&" + 
                    "mode=ds&" + 
                    "password=MfSYX6h0_gS1&" + 
                    "disabled=_EM_6363_XYZ_&" + 
                    "level=&" + 
                    "sourceText=hS&" + 
                    "enableHiddenRules=_EM_8290_XYZ_&" + 
                    "token=CVvcXt4Ryuh&" + 
                    "filterDictionaryMatches=x&" + 
                    "textSessionId=kP&" + 
                    "callback=75kKqqICV9wEvRd6&" + 
                    "username=_EM_8291_XYZ_&" + 
                    "tokenV2=_EM_8292_XYZ_&" + 
                    "v=ioonY2e3zT")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: You specified 'enabled' but the parameter is now called 'enabledRules' in v2 of the API"));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/v2/check
    * 2 - (400) POST:/v2/check
    * Found 2 potential faults of type-code 101
    */
    @Test @Timeout(60)
    public void test_39_postOnV2CheckWithQueryParamsEmptyFilterDictionaryMatches() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=FXswx8Ov2Q_KKb&language=SK&altLanguages=b8AMX%3FK8AYOf944JY&disabledRules=_EM_7833_XYZ_&enabledCategories=Pe&disabledCategories=jAvv&enabledOnly=true")
                .post(baseUrlOfSut + "/v2/check")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: 'b8AMX?K8AYOf944JY' is not a language code known to LanguageTool. Supported language codes are: ar, ast-ES, be-BY, br-FR, ca-ES, ca-ES-valencia, da-DK, de, de-AT, de-CH, de-DE, de-DE-x-simple-language, el-GR, en, en-AU, en-CA, en-GB, en-NZ, en-US, en-ZA, eo, es, fa, fr, ga-IE, gl-ES, it, ja-JP, km-KH, pl-PL, pt, pt-AO, pt-BR, pt-MZ, pt-PT, ro-RO, ru-RU, sk-SK, sl-SI, sv, ta-IN, tl-PH, uk-UA, zh-CN. The list of languages is read from META-INF/org/languagetool/language-module.properties in the Java classpath. See https://dev.languagetool.org/java-api for details."));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/check'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/x-www-form-urlencoded")
                .body("text=AYgplv7hkz&data=o54PSW&language=cA&altLanguages=3Mo852sI&motherTongue=ia4E&enabledRules=_EM_3763_XYZ_&disabledRules=Z3alinFP6zRKBzu&disabledCategories=y9pcpphJODeoEBf")
                .post(baseUrlOfSut + "/v2/check?" + 
                    "apiKey=kQ8UMmQh&" + 
                    "inputLogging=wwPcF&" + 
                    "noopLanguages=_EM_7834_XYZ_&" + 
                    "enabled=_EM_6950_XYZ_&" + 
                    "mode=_EM_7835_XYZ_&" + 
                    "password=gK5RPz&" + 
                    "disabled=s2TJ&" + 
                    "level=_EM_3767_XYZ_&" + 
                    "ruleValues=_EM_3768_XYZ_&" + 
                    "sourceText=WDHI&" + 
                    "token=Ob4eL3XnEVtQnJP&" + 
                    "autodetect=UTR6qf_j5f&" + 
                    "filterDictionaryMatches=&" + 
                    "textSessionId=AYgplv7hkzw&" + 
                    "callback=3wng4KEPpJNIfw&" + 
                    "tokenV2=_EM_6951_XYZ_&" + 
                    "instanceId=F&" + 
                    "v=RWI8okVpHz")
                .then()
                .statusCode(400)
                .assertThat()
                .body(containsString("Error: Set only 'text' or 'data' parameter, not both"));
    }


}
