package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:56:23.101-04:00[America/New_York]
 * <br>
*  The generated test suite contains 2398 tests
 * <br>
*  Covered targets: 28479
 * <br>
*  Used time: 1h 14m 59s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_ocvndefault_1234_Test_264_test_264_postOnApiTotalProjectsByYearWithQueryParamsMonthlyReturns200 {
    

    
    private static final SutHandler controller = new em.external.org.devgateway.ocvn.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/ocvn-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList());
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (200) POST:/api/totalProjectsByYear
    */
    @Test @Timeout(60)
    public void test_264_postOnApiTotalProjectsByYearWithQueryParamsMonthlyReturns200() throws Exception {
        
        final Map<String,String> cookies_ADMIN = given()
            .contentType("application/x-www-form-urlencoded")
            .body("username=admin&password=admin")
            .post(baseUrlOfSut + "/login")
            .then().extract().cookies();
            
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_ADMIN)
                .post(baseUrlOfSut + "/api/totalProjectsByYear?" + 
                    "notBidTypeId=RIGGING&notBidTypeId=FRAUD&notBidTypeId=_EM_11905_XYZ_&notBidTypeId=FRAUD&notBidTypeId=Ni3&" + 
                    "notBidSelectionMethod=Q2LW2294MWpm6gq&notBidSelectionMethod=_EM_11911_XYZ_&" + 
                    "planningLoc=_EM_11914_XYZ_&planningLoc=Qrmg&planningLoc=_EM_11915_XYZ_&planningLoc=hotuM3E&planningLoc=_EM_11916_XYZ_&" + 
                    "tenderLoc=eeeQOkX_i&tenderLoc=_EM_11917_XYZ_&tenderLoc=Wi8drMRxai&tenderLoc=_EM_11918_XYZ_&" + 
                    "procuringEntityCityId=Of&procuringEntityCityId=_EM_11919_XYZ_&" + 
                    "year=706&year=493&" + 
                    "month=653&month=168&month=427&month=887&month=324&" + 
                    "pageNumber=986&" + 
                    "minTenderValue=0.6016239663382005&" + 
                    "maxTenderValue=0.9535063641920319&" + 
                    "maxAwardValue=0.27739855392028556&" + 
                    "flagged=false&" + 
                    "monthly=true&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
}
