package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:56:23.101-04:00[America/New_York]
 * <br>
*  The generated test suite contains 2398 tests
 * <br>
*  Covered targets: 28479
 * <br>
*  Used time: 1h 14m 59s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_ocvndefault_1234_Test_1833_test_1833_getOnStatsReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.org.devgateway.ocvn.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/ocvn-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList());
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * 1 - (302) POST:/api/flags/i019/stats
    * 2 - (302) GET:/api/flags/i019/stats
    * Found 2 potential faults of type-code 101
    */
    @Test @Timeout(60)
    public void test_1833_getOnStatsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 302 not defined for path '/api/flags/i019/stats'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .post(baseUrlOfSut + "/api/flags/i019/stats?" + 
                    "bidTypeId=3&bidTypeId=_EM_4001_XYZ_&bidTypeId=_EM_4002_XYZ_&" + 
                    "procuringEntityId=OKHz3JaMM5XgCa&procuringEntityId=_EM_4005_XYZ_&procuringEntityId=_EM_4006_XYZ_&" + 
                    "bidSelectionMethod=_EM_4011_XYZ_&" + 
                    "procurementMethod=_EM_4017_XYZ_&procurementMethod=pV&procurementMethod=IaBOXJ7QKFU&procurementMethod=csF3yFW5AOm&" + 
                    "procuringEntityCityId=_EM_4018_XYZ_&procuringEntityCityId=DwbbmC8&procuringEntityCityId=vxENe&procuringEntityCityId=_EM_4019_XYZ_&procuringEntityCityId=_EM_4020_XYZ_&" + 
                    "procuringEntityDepartmentId=17&" + 
                    "year=178&year=852&year=242&year=673&" + 
                    "month=&" + 
                    "pageSize=564&" + 
                    "minTenderValue=0.41406343953981106&" + 
                    "maxAwardValue=0.528457006654737&" + 
                    "flagged=true&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(302)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 302 not defined for path '/api/flags/i019/stats'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/flags/i019/stats?" + 
                    "notBidTypeId=hwoumW&notBidTypeId=2OoZz&notBidTypeId=Nvy4F7JW&" + 
                    "notProcuringEntityId=_EM_4026_XYZ_&" + 
                    "supplierId=_EM_4027_XYZ_&supplierId=FoJbFsawhjVGF3&supplierId=_EM_4028_XYZ_&supplierId=_EM_4029_XYZ_&supplierId=J7vG&" + 
                    "bidSelectionMethod=&" + 
                    "notBidSelectionMethod=&" + 
                    "tenderLoc=l4nNGQZfZPZ7&tenderLoc=_EM_4031_XYZ_&tenderLoc=9dfro3QN3&tenderLoc=_EM_4032_XYZ_&" + 
                    "procurementMethod=2gmiji05Ge_8R&procurementMethod=pV&procurementMethod=_EM_4033_XYZ_&procurementMethod=_EM_4034_XYZ_&" + 
                    "year=178&year=852&year=242&year=673&" + 
                    "month=&" + 
                    "pageSize=564&" + 
                    "minTenderValue=0.41406343953981106&" + 
                    "minAwardValue=0.23415247148180873&" + 
                    "maxAwardValue=0.528457006654737&" + 
                    "electronicSubmission=true")
                .then()
                .statusCode(302)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
