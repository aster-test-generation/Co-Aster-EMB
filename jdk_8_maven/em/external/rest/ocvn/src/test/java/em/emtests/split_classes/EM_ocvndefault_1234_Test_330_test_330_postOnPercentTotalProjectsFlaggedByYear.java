package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:56:23.101-04:00[America/New_York]
 * <br>
*  The generated test suite contains 2398 tests
 * <br>
*  Covered targets: 28479
 * <br>
*  Used time: 1h 14m 59s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_ocvndefault_1234_Test_330_test_330_postOnPercentTotalProjectsFlaggedByYear {
    

    
    private static final SutHandler controller = new em.external.org.devgateway.ocvn.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/ocvn-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList());
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (302) POST:/api/percentTotalProjectsFlaggedByYear
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_330_postOnPercentTotalProjectsFlaggedByYear() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 302 not defined for path '/api/percentTotalProjectsFlaggedByYear'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .post(baseUrlOfSut + "/api/percentTotalProjectsFlaggedByYear?" + 
                    "notBidTypeId=zCXJo6RsTz6d&notBidTypeId=_EM_2761_XYZ_&notBidTypeId=_EM_2762_XYZ_&notBidTypeId=Keo&notBidTypeId=_EM_2763_XYZ_&" + 
                    "notProcuringEntityId=_EM_2765_XYZ_&" + 
                    "supplierId=bidEmJRBfdtSna&supplierId=_EM_2766_XYZ_&supplierId=_EM_2767_XYZ_&supplierId=_EM_2768_XYZ_&" + 
                    "bidSelectionMethod=&" + 
                    "notBidSelectionMethod=7OO&" + 
                    "contrMethod=pRy&contrMethod=V6trdQF&contrMethod=u&" + 
                    "tenderLoc=_EM_2769_XYZ_&tenderLoc=co4euK&tenderLoc=XnRWSkmHwV4LEt&" + 
                    "procurementMethod=_EM_2770_XYZ_&" + 
                    "procuringEntityDepartmentId=18&procuringEntityDepartmentId=181&procuringEntityDepartmentId=488&procuringEntityDepartmentId=23&procuringEntityDepartmentId=198&" + 
                    "year=&" + 
                    "month=601&month=684&" + 
                    "minTenderValue=0.9076295552095565&" + 
                    "maxTenderValue=0.9439359625733237&" + 
                    "EMextraParam123=_EM_2773_XYZ_")
                .then()
                .statusCode(302)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
