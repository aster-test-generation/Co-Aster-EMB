package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:56:23.101-04:00[America/New_York]
 * <br>
*  The generated test suite contains 2398 tests
 * <br>
*  Covered targets: 28479
 * <br>
*  Used time: 1h 14m 59s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_ocvndefault_1234_Test_1835_test_1835_getOnI077CrosstabWithQueryParamsElectronicSubmission {
    

    
    private static final SutHandler controller = new em.external.org.devgateway.ocvn.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/ocvn-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList());
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * 1 - (302) POST:/api/flags/i077/crosstab
    * 2 - (302) GET:/api/flags/i077/crosstab
    * Found 2 potential faults of type-code 101
    */
    @Test @Timeout(60)
    public void test_1835_getOnI077CrosstabWithQueryParamsElectronicSubmission() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 302 not defined for path '/api/flags/i077/crosstab'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .post(baseUrlOfSut + "/api/flags/i077/crosstab?" + 
                    "notProcuringEntityId=_EM_4248_XYZ_&notProcuringEntityId=_EM_4249_XYZ_&notProcuringEntityId=_EM_4250_XYZ_&notProcuringEntityId=_EM_4251_XYZ_&notProcuringEntityId=0z24zxO9j2&" + 
                    "supplierId=R_RSY4HdXr1rb81&" + 
                    "bidSelectionMethod=hrxXXFDq8m7Gd1ZP&bidSelectionMethod=xbPmhdxq&bidSelectionMethod=_mQeHvO4Jr&bidSelectionMethod=f&" + 
                    "planningLoc=_EM_4255_XYZ_&planningLoc=_EM_4256_XYZ_&planningLoc=_EM_4257_XYZ_&planningLoc=_EM_4258_XYZ_&" + 
                    "tenderLoc=_EM_4259_XYZ_&tenderLoc=Cmg&" + 
                    "procuringEntityDepartmentId=565&procuringEntityDepartmentId=679&procuringEntityDepartmentId=605&procuringEntityDepartmentId=290&procuringEntityDepartmentId=848&" + 
                    "procuringEntityGroupId=231&procuringEntityGroupId=626&procuringEntityGroupId=323&" + 
                    "year=772&year=268&year=252&" + 
                    "month=1&month=688&" + 
                    "minTenderValue=0.7984165999051649&" + 
                    "minAwardValue=0.08752432795769627&" + 
                    "electronicSubmission=true&" + 
                    "flagged=true&" + 
                    "monthly=true")
                .then()
                .statusCode(302)
                .assertThat()
                .body(isEmptyOrNullString());
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 302 not defined for path '/api/flags/i077/crosstab'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/flags/i077/crosstab?" + 
                    "notBidTypeId=_EM_4262_XYZ_&" + 
                    "notProcuringEntityId=KgkfFvIeS&notProcuringEntityId=_EM_4264_XYZ_&notProcuringEntityId=_EM_4265_XYZ_&notProcuringEntityId=_EM_4266_XYZ_&notProcuringEntityId=_EM_4267_XYZ_&" + 
                    "bidSelectionMethod=hrxXXFDq8m7Gd1ZP&bidSelectionMethod=_EM_4268_XYZ_&bidSelectionMethod=_EM_4269_XYZ_&bidSelectionMethod=f&" + 
                    "notBidSelectionMethod=_EM_4270_XYZ_&notBidSelectionMethod=_EM_4271_XYZ_&notBidSelectionMethod=fS9KdvZPpj&notBidSelectionMethod=RGua&" + 
                    "contrMethod=_EM_4272_XYZ_&contrMethod=_EM_4273_XYZ_&contrMethod=_EM_4274_XYZ_&" + 
                    "procuringEntityCityId=&" + 
                    "procuringEntityDepartmentId=565&procuringEntityDepartmentId=679&procuringEntityDepartmentId=605&procuringEntityDepartmentId=290&procuringEntityDepartmentId=848&" + 
                    "year=772&year=268&year=252&" + 
                    "pageSize=97&" + 
                    "minAwardValue=0.08752432795769627&" + 
                    "electronicSubmission=true&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(302)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
