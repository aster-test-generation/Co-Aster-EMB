package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:56:23.101-04:00[America/New_York]
 * <br>
*  The generated test suite contains 2398 tests
 * <br>
*  Covered targets: 28479
 * <br>
*  Used time: 1h 14m 59s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_ocvndefault_1234_Test_1849_test_1849_postOnCrosstabReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.org.devgateway.ocvn.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/ocvn-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList());
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (302) POST:/api/flags/i003/crosstab
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_1849_postOnCrosstabReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 302 not defined for path '/api/flags/i003/crosstab'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .post(baseUrlOfSut + "/api/flags/i003/crosstab?" + 
                    "bidTypeId=_EM_1674_XYZ_&bidTypeId=tH3&bidTypeId=_EM_1675_XYZ_&" + 
                    "notBidTypeId=_EM_1676_XYZ_&" + 
                    "notBidSelectionMethod=_EM_1683_XYZ_&notBidSelectionMethod=_EM_1684_XYZ_&notBidSelectionMethod=_EM_1685_XYZ_&notBidSelectionMethod=vocetER1icGwWtW&" + 
                    "planningLoc=43xN3WVG6VHKal&planningLoc=UyjMx78AFiWyfCcS&" + 
                    "procurementMethod=0b5m04IFOV13Aeab&procurementMethod=_EM_1686_XYZ_&" + 
                    "procuringEntityCityId=_EM_1687_XYZ_&procuringEntityCityId=7vVF_3EGo&procuringEntityCityId=_EM_1688_XYZ_&procuringEntityCityId=1u0p7L75HP&" + 
                    "procuringEntityDepartmentId=222&procuringEntityDepartmentId=489&" + 
                    "procuringEntityGroupId=442&" + 
                    "year=163&year=1&year=435&year=311&year=286&" + 
                    "minTenderValue=0.4863506581984437&" + 
                    "maxTenderValue=0.9403841077349399&" + 
                    "maxAwardValue=0.6716016101306955")
                .then()
                .statusCode(302)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
