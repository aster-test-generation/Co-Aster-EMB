package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:56:23.101-04:00[America/New_York]
 * <br>
*  The generated test suite contains 2398 tests
 * <br>
*  Covered targets: 28479
 * <br>
*  Used time: 1h 14m 59s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_ocvndefault_1234_Test_147_test_147_getOnPercentOfEligibleProjectsFlaggedByYearReturnsEmptyList {
    

    
    private static final SutHandler controller = new em.external.org.devgateway.ocvn.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/ocvn-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList());
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (200) GET:/api/percentOfEligibleProjectsFlaggedByYear
    */
    @Test @Timeout(60)
    public void test_147_getOnPercentOfEligibleProjectsFlaggedByYearReturnsEmptyList() throws Exception {
        
        final Map<String,String> cookies_user1 = given()
            .contentType("application/x-www-form-urlencoded")
            .body("username=user1&password=password")
            .post(baseUrlOfSut + "/login")
            .then().extract().cookies();
            
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .cookies(cookies_user1)
                .get(baseUrlOfSut + "/api/percentOfEligibleProjectsFlaggedByYear?" + 
                    "notBidTypeId=&" + 
                    "procuringEntityId=lft&procuringEntityId=YnGNea9hGrJ&procuringEntityId=nLJL7j6oJ7Tv&" + 
                    "notProcuringEntityId=_EM_33871_XYZ_&notProcuringEntityId=P8SD&notProcuringEntityId=_EM_33872_XYZ_&notProcuringEntityId=_EM_33873_XYZ_&" + 
                    "bidSelectionMethod=HYnX7qlx&bidSelectionMethod=&bidSelectionMethod=_EM_33874_XYZ_&" + 
                    "notBidSelectionMethod=&" + 
                    "procurementMethod=fQyfmF5pm&procurementMethod=_EM_33881_XYZ_&procurementMethod=_EM_33882_XYZ_&procurementMethod=_EM_33883_XYZ_&procurementMethod=l966DgNmLZ&" + 
                    "procuringEntityDepartmentId=897&procuringEntityDepartmentId=692&procuringEntityDepartmentId=73&" + 
                    "year=681&year=784&year=-2145793259&year=94&" + 
                    "month=168&month=583&month=868&month=775&" + 
                    "electronicSubmission=false&" + 
                    "skip=Sn0sYEyoa1tFWs&" + 
                    "class=vk5bT0JGQKcAO2Bk")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
}
