package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:56:23.101-04:00[America/New_York]
 * <br>
*  The generated test suite contains 2398 tests
 * <br>
*  Covered targets: 28479
 * <br>
*  Used time: 1h 14m 59s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_ocvndefault_1234_Test_1870_test_1870_postOnI180ReleasesWithQueryParamsElectronicSubmission {
    

    
    private static final SutHandler controller = new em.external.org.devgateway.ocvn.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/ocvn-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList());
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (302) POST:/api/flags/i180/releases
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_1870_postOnI180ReleasesWithQueryParamsElectronicSubmission() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 302 not defined for path '/api/flags/i180/releases'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .post(baseUrlOfSut + "/api/flags/i180/releases?" + 
                    "procuringEntityId=_EM_2049_XYZ_&procuringEntityId=U&procuringEntityId=KHuXH&" + 
                    "notProcuringEntityId=_EM_2050_XYZ_&notProcuringEntityId=e7d89wpvAWE&notProcuringEntityId=_EM_2051_XYZ_&notProcuringEntityId=_EM_2052_XYZ_&notProcuringEntityId=_EM_2053_XYZ_&" + 
                    "supplierId=C6EZZ0&supplierId=_EM_2054_XYZ_&" + 
                    "bidSelectionMethod=nLZisxsp8wbfQ5cM&bidSelectionMethod=_EM_2055_XYZ_&bidSelectionMethod=_EM_2056_XYZ_&bidSelectionMethod=_EM_2057_XYZ_&bidSelectionMethod=zhdObs&" + 
                    "contrMethod=Fzm9g&contrMethod=_EM_2060_XYZ_&contrMethod=_EM_2061_XYZ_&" + 
                    "planningLoc=_EM_2062_XYZ_&" + 
                    "procuringEntityDepartmentId=814&procuringEntityDepartmentId=511&procuringEntityDepartmentId=811&procuringEntityDepartmentId=765&procuringEntityDepartmentId=525&" + 
                    "procuringEntityGroupId=592&" + 
                    "pageSize=732&" + 
                    "minTenderValue=0.40251435516240675&" + 
                    "minAwardValue=0.3725597616933555&" + 
                    "maxAwardValue=0.03516557332283998&" + 
                    "electronicSubmission=true&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(302)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
