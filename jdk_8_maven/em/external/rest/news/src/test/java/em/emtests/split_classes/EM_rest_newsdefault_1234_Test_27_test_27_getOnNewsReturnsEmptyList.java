package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-04T15:29:43.623-04:00[America/New_York]
 * <br>
*  The generated test suite contains 66 tests
 * <br>
*  Covered targets: 619
 * <br>
*  Used time: 1h 0m 46s
 * <br>
*  Needed budget for current results: 85%
 * <br>
*  
*/

public class EM_rest_newsdefault_1234_Test_27_test_27_getOnNewsReturnsEmptyList {
    

    
    private static final SutHandler controller = new em.external.org.tsdes.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/rest-news-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList("NEWS_ENTITY","news_entity"));
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (200) GET:/news
    */
    @Test @Timeout(60)
    public void test_27_getOnNewsReturnsEmptyList() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("NEWS_ENTITY", 712L)
                .d("ID", "353")
                .d("AUTHOR_ID", "\"uiuoOiT0R1tCpSXS\"")
                .d("COUNTRY", "\"yUfRmbA7F9\"")
                .d("CREATION_TIME", "\"1918-10-28 02:53:34\"")
                .d("TEXT", "\"SxpFXOn\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/vnd.tsdes.news+json;charset=UTF-8;version=2")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/news?country=_EM_13479_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/vnd.tsdes.news+json")
                .body("size()", equalTo(0));
    }
}
