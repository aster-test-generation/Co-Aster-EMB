package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-04T17:11:05.925-04:00[America/New_York]
 * <br>
*  The generated test suite contains 87 tests
 * <br>
*  Covered targets: 4214
 * <br>
*  Used time: 1h 4m 25s
 * <br>
*  Needed budget for current results: 98%
 * <br>
*  
*/

public class EM_genome_nexusdefault_1234_Test_81_test_81_getOnEntrezReturns404UsingMongo {
    

    
    private static final SutHandler controller = new em.external.org.cbioportal.genome_nexus.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/genome-nexus-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (404) GET:/ensembl/canonical-gene/entrez/{entrezGeneId}
    */
    @Test @Timeout(60)
    public void test_81_getOnEntrezReturns404UsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"a3LCa6n_LbDf10es\", \"ensembl_canonical_gene\":\"gX54kuEQ7QVr67e\", \"ensembl_canonical_transcript\":\"mKgABeUJwRRCMbY\", \"genome_nexus_canonical_transcript\":\"mt6TfqbAyM\", \"uniprot_canonical_transcript\":\"W\", \"mskcc_canonical_transcript\":\"hM_VE4\", \"hgnc_id\":\"XgXMeQ\", \"approved_name\":\"Ss\", \"status\":\"I7m\", \"previous_symbols\":\"vBAtX\", \"synonyms\":\"MNgFcUCZGbd82\", \"accession_numbers\":\"nRYIB0wkoF\", \"refseq_ids\":\"c\", \"uniprot_id\":\"FziGv7XfnDLyQs\", \"entrez_gene_id\":\"4ETWIXp4ghruZhF\", \"_id\":{\"$oid\":\"3c14c93fade0d5f865fcdd13\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"2ukorKL3gl5rTau2\", \"ensembl_canonical_gene\":\"K8m9rDjT\", \"ensembl_canonical_transcript\":\"_EM_728_XYZ_\", \"genome_nexus_canonical_transcript\":\"G4sG\", \"uniprot_canonical_transcript\":\"z0UWkmIh4H\", \"mskcc_canonical_transcript\":\"jmfq2ntj\", \"hgnc_id\":\"Pr\", \"approved_name\":\"IbPPAy3_EkOPUz2\", \"status\":\"q_zXjb\", \"previous_symbols\":\"kK4yU54j.LH5qCHq\", \"synonyms\":\"_EM_729_XYZ_\", \"accession_numbers\":\"_EM_730_XYZ_\", \"refseq_ids\":\"4xmz0QvOI\", \"uniprot_id\":\"p\", \"entrez_gene_id\":\"R_a_A7r\", \"_id\":{\"$oid\":\"d1a86bccfa0e0d4ec0a9237b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/ensembl/canonical-gene/entrez/-1073741575?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
