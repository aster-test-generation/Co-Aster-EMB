package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-04T17:11:05.925-04:00[America/New_York]
 * <br>
*  The generated test suite contains 87 tests
 * <br>
*  Covered targets: 4214
 * <br>
*  Used time: 1h 4m 25s
 * <br>
*  Needed budget for current results: 98%
 * <br>
*  
*/

public class EM_genome_nexusdefault_1234_Test_57_test_57_getOnHeaderReturnsObject {
    

    
    private static final SutHandler controller = new em.external.org.cbioportal.genome_nexus.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/genome-nexus-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (200) GET:/pdb/header/{pdbId}
    */
    @Test @Timeout(60)
    public void test_57_getOnHeaderReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/pdb/header/6go7")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'pdbId'", containsString("6go7"))
                .body("'title'", containsString("tdt chimera (loop1 of pol mu) - full dna synapsis complex"))
                .body("'compound'.'1'.'other_details'", containsString("there is an insertion of one residue between loop1 of pol mu and tdt (q394). this insertion explain the numbering shift with wt-tdt.,there is an insertion of one residue between loop1 of pol mu and tdt (q394). this insertion explain the numbering shift with wt-tdt.,there is an insertion of one residue between loop1 of pol mu and tdt (q394). this insertion explain the numbering shift with wt-tdt."))
                .body("'compound'.'1'.'chain'.size()", equalTo(1))
                .body("'compound'.'1'.'chain'", hasItems("a"))
                .body("'compound'.'1'.'synonym'", containsString("terminal addition enzyme,terminal deoxynucleotidyltransferase,terminal transferase,pol mu,terminal transferase,terminal addition enzyme,terminal deoxynucleotidyltransferase,terminal transferase"))
                .body("'compound'.'1'.'engineered'", containsString("yes"))
                .body("'compound'.'1'.'molecule'", containsString("dna nucleotidylexotransferase,dna-directed dna/rna polymerase mu,dna nucleotidylexotransferase"))
                .body("'compound'.'1'.'mol_id'", containsString("1"))
                .body("'compound'.'1'.'ec'", containsString("2.7.7.31,2.7.7.7,2.7.7.31"))
                .body("'compound'.'2'.'chain'.size()", equalTo(2))
                .body("'compound'.'2'.'chain'", hasItems("f", "g"))
                .body("'compound'.'2'.'engineered'", containsString("yes"))
                .body("'compound'.'2'.'molecule'", containsString("dna (5'-d(*ap*ap*ap*ap*ap*c)-3')"))
                .body("'compound'.'2'.'mol_id'", containsString("2"))
                .body("'compound'.'3'.'chain'.size()", equalTo(4))
                .body("'compound'.'3'.'chain'", hasItems("e", "h", "i", "j"))
                .body("'compound'.'3'.'molecule'", containsString("dna (5'-d(*tp*tp*tp*tp*tp*gp*c)-3')"))
                .body("'compound'.'3'.'mol_id'", containsString("3"))
                .body("'source'.'1'.'gene'.size()", equalTo(4))
                .body("'source'.'1'.'gene'", hasItems("dntt", "tdt", "polm", "polmu"))
                .body("'source'.'1'.'organism_scientific'", containsString("mus musculus"))
                .body("'source'.'1'.'organism_common'", containsString("mouse"))
                .body("'source'.'1'.'organism_taxid'", containsString("10090"))
                .body("'source'.'1'.'expression_system_taxid'", containsString("562"))
                .body("'source'.'1'.'expression_system'", containsString("escherichia coli"))
                .body("'source'.'1'.'mol_id'", containsString("1"))
                .body("'source'.'2'.'synthetic'", containsString("yes"))
                .body("'source'.'2'.'organism_scientific'", containsString("synthetic construct"))
                .body("'source'.'2'.'organism_taxid'", containsString("32630"))
                .body("'source'.'2'.'mol_id'", containsString("2"))
                .body("'source'.'3'.'synthetic'", containsString("yes"))
                .body("'source'.'3'.'organism_scientific'", containsString("synthetic construct"))
                .body("'source'.'3'.'mol_id'", containsString("3"));
    }
}
