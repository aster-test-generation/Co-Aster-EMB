package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-04T17:11:05.925-04:00[America/New_York]
 * <br>
*  The generated test suite contains 87 tests
 * <br>
*  Covered targets: 4214
 * <br>
*  Used time: 1h 4m 25s
 * <br>
*  Needed budget for current results: 98%
 * <br>
*  
*/

public class EM_genome_nexusdefault_1234_Test_52_test_52_getOnAnnotationDbsnpWithQueryParamsEmptyTokenReturnsObject {
    

    
    private static final SutHandler controller = new em.external.org.cbioportal.genome_nexus.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/genome-nexus-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (200) GET:/annotation/dbsnp/{variantId}
    */
    @Test @Timeout(60)
    public void test_52_getOnAnnotationDbsnpWithQueryParamsEmptyTokenReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/annotation/dbsnp/rs9?" + 
                    "isoformOverrideSource=_EM_9308_XYZ_&" + 
                    "token=&" + 
                    "fields=_EM_3501_XYZ_&fields=Ha90_87QyU5_dk&fields=42&fields=GzqyhYh")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("rs9"))
                .body("'originalVariantQuery'", containsString("rs9"))
                .body("'assembly_name'", containsString("GRCh37"))
                .body("'seq_region_name'", containsString("7"))
                .body("'start'", numberMatches(9.2373455E7))
                .body("'end'", numberMatches(9.2373455E7))
                .body("'allele_string'", containsString("G/-"))
                .body("'strand'", numberMatches(1.0))
                .body("'most_severe_consequence'", containsString("intron_variant"))
                .body("'transcript_consequences'.size()", equalTo(2))
                .body("'transcript_consequences'[0].'transcript_id'", containsString("ENST00000265734"))
                .body("'transcript_consequences'[0].'hgvsc'", containsString("ENST00000265734.4:c.370-18348del"))
                .body("'transcript_consequences'[0].'variant_allele'", containsString("-"))
                .body("'transcript_consequences'[0].'protein_id'", containsString("ENSP00000265734"))
                .body("'transcript_consequences'[0].'gene_symbol'", containsString("CDK6"))
                .body("'transcript_consequences'[0].'gene_id'", containsString("ENSG00000105810"))
                .body("'transcript_consequences'[0].'hgnc_id'", containsString("1777"))
                .body("'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_001259.6"))
                .body("'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'consequence_terms'", hasItems("intron_variant"))
                .body("'transcript_consequences'[1].'transcript_id'", containsString("ENST00000424848"))
                .body("'transcript_consequences'[1].'hgvsc'", containsString("ENST00000424848.2:c.370-18348del"))
                .body("'transcript_consequences'[1].'variant_allele'", containsString("-"))
                .body("'transcript_consequences'[1].'protein_id'", containsString("ENSP00000397087"))
                .body("'transcript_consequences'[1].'gene_symbol'", containsString("CDK6"))
                .body("'transcript_consequences'[1].'gene_id'", containsString("ENSG00000105810"))
                .body("'transcript_consequences'[1].'hgnc_id'", containsString("1777"))
                .body("'transcript_consequences'[1].'refseq_transcript_ids'.size()", equalTo(1))
                .body("'transcript_consequences'[1].'refseq_transcript_ids'", hasItems("NM_001145306.1"))
                .body("'transcript_consequences'[1].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[1].'consequence_terms'", hasItems("intron_variant"))
                .body("'successfully_annotated'", equalTo(true));
    }
}
