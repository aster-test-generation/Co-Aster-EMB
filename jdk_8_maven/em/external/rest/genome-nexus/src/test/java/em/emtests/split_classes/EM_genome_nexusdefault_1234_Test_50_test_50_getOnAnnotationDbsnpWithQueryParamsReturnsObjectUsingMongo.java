package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-04T17:11:05.925-04:00[America/New_York]
 * <br>
*  The generated test suite contains 87 tests
 * <br>
*  Covered targets: 4214
 * <br>
*  Used time: 1h 4m 25s
 * <br>
*  Needed budget for current results: 98%
 * <br>
*  
*/

public class EM_genome_nexusdefault_1234_Test_50_test_50_getOnAnnotationDbsnpWithQueryParamsReturnsObjectUsingMongo {
    

    
    private static final SutHandler controller = new em.external.org.cbioportal.genome_nexus.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/genome-nexus-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (200) GET:/annotation/dbsnp/{variantId}
    */
    @Test @Timeout(60)
    public void test_50_getOnAnnotationDbsnpWithQueryParamsReturnsObjectUsingMongo() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"\", \"ensembl_canonical_gene\":\"QfRT\", \"ensembl_canonical_transcript\":\"eo_HjS6d\", \"genome_nexus_canonical_transcript\":\"yGsA7iCk7vIV\", \"uniprot_canonical_transcript\":\"rDQiDM\", \"mskcc_canonical_transcript\":\"Za3hmigxdZq7CR\", \"hgnc_id\":\"Jx0TI7ZGskyvE\", \"approved_name\":\"JWr\", \"status\":\"TRUU5ODxUjsnu\", \"previous_symbols\":\"oyS7pNb6dv8pmSzJ\", \"synonyms\":\"MH4qBQh\", \"accession_numbers\":\"LkoMy7GnzOqOKOu\", \"refseq_ids\":\"\", \"uniprot_id\":\"ayafHR4oj73dPdbq\", \"entrez_gene_id\":\"2NBBvI\", \"_id\":{\"$oid\":\"2e64b2ef8ef7296a19f345e6\"}}")
            .and().insertInto("annotator", "ensembl.canonical_transcript_per_hgnc")
                .d("{\"hgnc_symbol\":\"NgKbiSXD4Ixsr\", \"ensembl_canonical_gene\":\"kDyXozo975\", \"ensembl_canonical_transcript\":\"aqPq_rQl3gk0\", \"genome_nexus_canonical_transcript\":\"DKaovNmHuHnIAl\", \"uniprot_canonical_transcript\":\"XVD\", \"mskcc_canonical_transcript\":\"AbVY_jpLRpa5\", \"hgnc_id\":\"_EM_10786_XYZ_\", \"approved_name\":\"oLcDfH1cGH2oJmUu\", \"status\":\"j_Z0KMbQNgQGnq4h\", \"previous_symbols\":\"o^\", \"synonyms\":\"V{Q\", \"accession_numbers\":\"8BSU\", \"refseq_ids\":\"EgXhXkk0UuPdqRC3\", \"uniprot_id\":\"Or\", \"entrez_gene_id\":\"]7\", \"_id\":{\"$oid\":\"5b90ddd0e2addf37496c6bf1\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/annotation/dbsnp/rs47?" + 
                    "isoformOverrideSource=_EM_10788_XYZ_&" + 
                    "token=o%7BtRQkcD_6gIr&" + 
                    "fields=Y5TU&fields=fUaXO&fields=rsHl1V&fields=_EM_7283_XYZ_&fields=qwwtqf")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'variant'", containsString("rs47"))
                .body("'originalVariantQuery'", containsString("rs47"))
                .body("'assembly_name'", containsString("GRCh37"))
                .body("'seq_region_name'", containsString("7"))
                .body("'start'", numberMatches(1.1581121E7))
                .body("'end'", numberMatches(1.1581121E7))
                .body("'allele_string'", containsString("T/A/C/G"))
                .body("'strand'", numberMatches(1.0))
                .body("'most_severe_consequence'", containsString("missense_variant"))
                .body("'transcript_consequences'.size()", equalTo(6))
                .body("'transcript_consequences'[0].'exon'", containsString("6/28"))
                .body("'transcript_consequences'[0].'transcript_id'", containsString("ENST00000423059"))
                .body("'transcript_consequences'[0].'hgvsp'", containsString("ENSP00000406482.2:p.Asn583Tyr"))
                .body("'transcript_consequences'[0].'hgvsc'", containsString("ENST00000423059.4:c.1747A>T"))
                .body("'transcript_consequences'[0].'variant_allele'", containsString("A"))
                .body("'transcript_consequences'[0].'codons'", containsString("Aac/Tac"))
                .body("'transcript_consequences'[0].'protein_id'", containsString("ENSP00000406482"))
                .body("'transcript_consequences'[0].'protein_start'", numberMatches(583.0))
                .body("'transcript_consequences'[0].'protein_end'", numberMatches(583.0))
                .body("'transcript_consequences'[0].'gene_symbol'", containsString("THSD7A"))
                .body("'transcript_consequences'[0].'gene_id'", containsString("ENSG00000005108"))
                .body("'transcript_consequences'[0].'amino_acids'", containsString("N/Y"))
                .body("'transcript_consequences'[0].'hgnc_id'", containsString("22207"))
                .body("'transcript_consequences'[0].'canonical'", containsString("1"))
                .body("'transcript_consequences'[0].'polyphen_score'", numberMatches(0.0))
                .body("'transcript_consequences'[0].'polyphen_prediction'", containsString("benign"))
                .body("'transcript_consequences'[0].'sift_score'", numberMatches(0.05))
                .body("'transcript_consequences'[0].'sift_prediction'", containsString("deleterious"))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'refseq_transcript_ids'", hasItems("NM_015204.2"))
                .body("'transcript_consequences'[0].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[0].'consequence_terms'", hasItems("missense_variant"))
                .body("'transcript_consequences'[1].'exon'", containsString("6/28"))
                .body("'transcript_consequences'[1].'transcript_id'", containsString("ENST00000423059"))
                .body("'transcript_consequences'[1].'hgvsp'", containsString("ENSP00000406482.2:p.Asn583Asp"))
                .body("'transcript_consequences'[1].'hgvsc'", containsString("ENST00000423059.4:c.1747A>G"))
                .body("'transcript_consequences'[1].'variant_allele'", containsString("C"))
                .body("'transcript_consequences'[1].'codons'", containsString("Aac/Gac"))
                .body("'transcript_consequences'[1].'protein_id'", containsString("ENSP00000406482"))
                .body("'transcript_consequences'[1].'protein_start'", numberMatches(583.0))
                .body("'transcript_consequences'[1].'protein_end'", numberMatches(583.0))
                .body("'transcript_consequences'[1].'gene_symbol'", containsString("THSD7A"))
                .body("'transcript_consequences'[1].'gene_id'", containsString("ENSG00000005108"))
                .body("'transcript_consequences'[1].'amino_acids'", containsString("N/D"))
                .body("'transcript_consequences'[1].'hgnc_id'", containsString("22207"))
                .body("'transcript_consequences'[1].'canonical'", containsString("1"))
                .body("'transcript_consequences'[1].'polyphen_score'", numberMatches(0.0))
                .body("'transcript_consequences'[1].'polyphen_prediction'", containsString("benign"))
                .body("'transcript_consequences'[1].'sift_score'", numberMatches(0.63))
                .body("'transcript_consequences'[1].'sift_prediction'", containsString("tolerated"))
                .body("'transcript_consequences'[1].'refseq_transcript_ids'.size()", equalTo(1))
                .body("'transcript_consequences'[1].'refseq_transcript_ids'", hasItems("NM_015204.2"))
                .body("'transcript_consequences'[1].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[1].'consequence_terms'", hasItems("missense_variant"))
                .body("'transcript_consequences'[2].'exon'", containsString("6/28"))
                .body("'transcript_consequences'[2].'transcript_id'", containsString("ENST00000423059"))
                .body("'transcript_consequences'[2].'hgvsp'", containsString("ENSP00000406482.2:p.Asn583His"))
                .body("'transcript_consequences'[2].'hgvsc'", containsString("ENST00000423059.4:c.1747A>C"))
                .body("'transcript_consequences'[2].'variant_allele'", containsString("G"))
                .body("'transcript_consequences'[2].'codons'", containsString("Aac/Cac"))
                .body("'transcript_consequences'[2].'protein_id'", containsString("ENSP00000406482"))
                .body("'transcript_consequences'[2].'protein_start'", numberMatches(583.0))
                .body("'transcript_consequences'[2].'protein_end'", numberMatches(583.0))
                .body("'transcript_consequences'[2].'gene_symbol'", containsString("THSD7A"))
                .body("'transcript_consequences'[2].'gene_id'", containsString("ENSG00000005108"))
                .body("'transcript_consequences'[2].'amino_acids'", containsString("N/H"))
                .body("'transcript_consequences'[2].'hgnc_id'", containsString("22207"))
                .body("'transcript_consequences'[2].'canonical'", containsString("1"))
                .body("'transcript_consequences'[2].'polyphen_score'", numberMatches(0.0))
                .body("'transcript_consequences'[2].'polyphen_prediction'", containsString("benign"))
                .body("'transcript_consequences'[2].'sift_score'", numberMatches(0.12))
                .body("'transcript_consequences'[2].'sift_prediction'", containsString("tolerated"))
                .body("'transcript_consequences'[2].'refseq_transcript_ids'.size()", equalTo(1))
                .body("'transcript_consequences'[2].'refseq_transcript_ids'", hasItems("NM_015204.2"))
                .body("'transcript_consequences'[2].'consequence_terms'.size()", equalTo(1))
                .body("'transcript_consequences'[2].'consequence_terms'", hasItems("missense_variant"))
                // Skipping assertions on the remaining 3 elements. This limit of 3 elements can be increased in the configurations
                .body("'successfully_annotated'", equalTo(true));
    }
}
