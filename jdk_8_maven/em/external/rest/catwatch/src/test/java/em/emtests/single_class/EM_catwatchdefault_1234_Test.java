package em.emtests.single_class;

/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T17:16:58.617-04:00[America/New_York]
 * <br>
*  The generated test suite contains 130 tests
 * <br>
*  Covered targets: 2587
 * <br>
*  Used time: 1h 3m 57s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/
public class EM_catwatchdefault_1234_Test {

    
    private static final SutHandler controller = new em.external.org.zalando.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/catwatch-sut.jar");
    private static String baseUrlOfSut;
    
    
    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CONTRIBUTOR","LANGUAGE_LIST","MAINTAINERS","PROJECT","STATISTICS"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (null) GET:/fetch
    */
    @Test @Timeout(60)
    public void test_0_getOnFetchReturnsNullUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 250L)
                .d("ID", "465")
                .d("SNAPSHOT_DATE", "\"1942-12-12 21:44:12\"")
                .d("ALL_CONTRIBUTORS_COUNT", "399")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "228")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"UokAzqPazd\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "420")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "993")
            .and().insertInto("PROJECT", 252L)
                .d("GIT_HUB_PROJECT_ID", "42")
            .and().insertInto("CONTRIBUTOR", 253L)
                .d("ID", "981")
                .d("ORGANIZATION_ID", "19")
                .d("SNAPSHOT_DATE", "\"1991-03-08 14:32:46\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "818")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "936")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"_EM_3336_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        try{
            given().accept("*/*")
                    .header("x-EMextraHeader123", "")
                    .get(baseUrlOfSut + "/fetch");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (500) GET:/projects
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_1_getOnProjectsWithQueryParamsNegativeOffsetShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/service/ProjectServiceImpl_71_findProjects.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=ZhcD85k&" + 
                    "offset=-992399222&" + 
                    "end_date=2018-11-06T22%3A10%3A13.320Z&" + 
                    "language=SIzWok0_D8zq&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/service/ProjectServiceImpl_71_findProjects
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("-992399222"))
                .body("'path'", containsString("/projects"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_2_getOnContributorsShowsFaults_100_101UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 114L)
                .d("ID", "297")
                .d("ORGANIZATION_ID", "640")
                .d("SNAPSHOT_DATE", "\"1998-04-20 21:13:15\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "346")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"qC6LK9phId2tanP\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_203_sublist.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "cVhBRYo1WK3TAco")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=640&" + 
                    "limit=723&" + 
                    "offset=578")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_203_sublist
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("fromIndex(578) > toIndex(0)"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_3_getOnContributorsShowsFaults_100_101UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10209")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "643")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"Ngtcf6TP|7hVgcv\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8920")
                .d("TAGS_COUNT", "44")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "20")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-130715")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "483")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yx9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3785_XYZ_\"")
                .d("TITLE", "\"Fpr4Yjhi_QQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"_EM_3792_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"_EM_3716_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"_EM_3717_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "V43yx9kLspx_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=&" + 
                    "limit=986&" + 
                    "offset=770&" + 
                    "start_date=Ngtcf6TP%7C7hVgcv&" + 
                    "end_date=Ngtcf6TP%7C7hVgcv&" + 
                    "sortBy=S_8bU2B&" + 
                    "q=YkUiBnJ3n2LIXb8")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was S_8bU2B. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_4_getOnContributorsShowsFaults_100_101UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 235L)
                .d("ID", "733")
                .d("ORGANIZATION_ID", "830")
                .d("SNAPSHOT_DATE", "\"1972-08-17 20:01:05\"")
                .d("NAME", "\"BBas6\"")
                .d("ORGANIZATION_NAME", "\"3_BfVLx\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "136")
                .d("PERSONAL_COMMITS_COUNT", "936")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"dLUBX5_\"")
            .and().insertInto("PROJECT", 236L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"_EM_3133_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "-4474432245927856128")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"8AIToNmEnJof\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "913")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"_EM_3134_XYZ_\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "839")
            .and().insertInto("STATISTICS", 237L)
                .d("ID", "-6461921138454238208")
                .d("SNAPSHOT_DATE", "\"2025-04-01 04:33:34\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "923")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("PRIVATE_PROJECT_COUNT", "453")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "166")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=830&" + 
                    "offset=699&" + 
                    "start_date=EQbg52lmgEDoOcsu")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"EQbg52lmgEDoOcsu\""))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_5_getOnContributorsShowsFaults_100_101UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10208")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "643")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"Ngtcf6TP|7hVgcv\"")
                .d("PRIVATE_PROJECT_COUNT", "772")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8920")
                .d("TAGS_COUNT", "0")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "-108")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-130715")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "227")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yz9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3`y\"")
                .d("SCORE", "0")
                .d("SNAPSHOT_DATE", "\"1974-05-09 21:43:52\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3785_XYZ_\"")
                .d("TITLE", "\"FUr0YjhiUQQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"_EM_3792_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"_EM_3716_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "V43yz9kLspx_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=&" + 
                    "limit=986&" + 
                    "start_date=Ngtcf6TP%7C7hVgcv&" + 
                    "end_date=Ngtcf6TP%7C7hVgcv&" + 
                    "q=YkUiBnJ3n2LIXb8")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"Ngtcf6TP|7hVgcv\""))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_6_getOnContributorsShowsFaults_100_101UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 30L)
                .d("ID", "211")
                .d("ORGANIZATION_ID", "837")
                .d("SNAPSHOT_DATE", "\"2096-03-22 07:11:57\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "520")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "44")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=837&" + 
                    "limit=651&" + 
                    "EMextraParam123=_EM_12_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_128_contributorsGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.UnsupportedOperationException"))
                .body("'message'", containsString("this parameter configuration is not implemented yet .. start date, end date required atm"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/languages
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_7_getOnLanguagesShowsFaults_100_101UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10273")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "643")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"1917-00-06T14:12:15-09:07\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8920")
                .d("TAGS_COUNT", "-131028")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "20")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-129691")
                .d("DESCRIPTION", "\"088d7bNW\"")
                .d("FORKS_COUNT", "524771")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yx9kLshx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"\"")
                .d("TITLE", "\"_EM_3796_XYZ_\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"zL_uL\"")
                .d("ORGANIZATION_NAME", "\"_EM_3797_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "312")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"Zjzo\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/service/LanguageService_36_filterLanguages.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=ALL_CONT3_4_&" + 
                    "offset=-523518&" + 
                    "q=")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/service/LanguageService_36_filterLanguages
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("-523518"))
                .body("'path'", containsString("/languages"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_8_getOnContributorsWithQueryParamsNegativeOffsetEmptyOrganizations() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10273")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "643")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"1917-00-06T14:12:15-09:07\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8920")
                .d("TAGS_COUNT", "-131028")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "20")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-129691")
                .d("DESCRIPTION", "\"088d7bNW\"")
                .d("FORKS_COUNT", "524771")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yx9kLshx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"\"")
                .d("TITLE", "\"_EM_3796_XYZ_\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"zL_uL\"")
                .d("ORGANIZATION_NAME", "\"_EM_3797_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "312")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"Zjzo\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_215_validate.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=&" + 
                    "limit=986&" + 
                    "offset=-523518&" + 
                    "start_date=1917-00-06T14%3A12%3A15-09%3A07&" + 
                    "end_date=1917-00-06T14%3A12%3A15-09%3A07&" + 
                    "q=")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_215_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("offset must be greater than zero but was -523518"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_9_getOnContributorsWithQueryParamsNegativeLimitShowsFaults_100_101() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 8L)
                .d("ID", "445")
                .d("ORGANIZATION_ID", "82")
                .d("SNAPSHOT_DATE", "\"1909-02-06 05:38:35\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "617")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "221")
                .d("PERSONAL_COMMITS_COUNT", "644")
                .d("PERSONAL_PROJECTS_COUNT", "399")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_217_validate.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=82&" + 
                    "limit=-31794&" + 
                    "offset=943")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_217_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("limit must be greater than zero but was -31794"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_10_getOnContributorsShowsFaults_100_101UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 171L)
                .d("ID", "159")
                .d("ORGANIZATION_ID", "720")
                .d("SNAPSHOT_DATE", "\"2081-06-08 08:52:27\"")
                .d("NAME", "\"_EM_2457_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "726")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "656")
                .d("PERSONAL_COMMITS_COUNT", "66")
                .d("PERSONAL_PROJECTS_COUNT", "317")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=720&" + 
                    "start_date=Rcp4m90sN9swtw1f&" + 
                    "end_date=Axvq7Xqx&" + 
                    "sortBy=_EM_2459_XYZ_&" + 
                    "q=_EM_2460_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _EM_2459_XYZ_. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_11_getOnContributorsShowsFaults_100_101UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 81L)
                .d("ID", "488")
                .d("ORGANIZATION_ID", "-7309544969920227328")
                .d("SNAPSHOT_DATE", "\"1908-06-30 02:49:12\"")
                .d("NAME", "\"_EM_1304_XYZ_\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "220")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "427")
                .d("PERSONAL_COMMITS_COUNT", "-1503928042")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"wGVAm3vEm_FDOlEL\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_13_XYZ_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=-7309544969920227328&" + 
                    "limit=695&" + 
                    "offset=359&" + 
                    "start_date=_EM_1305_XYZ_&" + 
                    "sortBy=_EM_1306_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _EM_1306_XYZ_. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_12_getOnContributorsShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=TX&" + 
                    "limit=974&" + 
                    "end_date=OZ7HmadpHGCr&" + 
                    "sortBy=_EM_329_XYZ_&" + 
                    "q=iVsk7iSZDJ&" + 
                    "EMextraParam123=_EM_12_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _EM_329_XYZ_. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_13_getOnContributorsShowsFaults_100_101UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 78L)
                .d("ID", "860")
                .d("ORGANIZATION_ID", "-3802991923057869824")
                .d("SNAPSHOT_DATE", "\"1915-06-26 06:57:02\"")
                .d("NAME", "\"HEEYds9\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "160")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "mEwR1Mq")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=-3802991923057869824&" + 
                    "limit=241&" + 
                    "start_date=Im1p1qeWOnUmjj&" + 
                    "end_date=c7865uyGM&" + 
                    "sortBy=_EM_1273_XYZ_&" + 
                    "q=eB0O&" + 
                    "EMextraParam123=_EM_1274_XYZ_")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _EM_1273_XYZ_. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_14_getOnContributorsWithQueryParamsEmptyOrganizationsShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/ContributorsApi_221_validate.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_13_XYZ_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=&" + 
                    "sortBy=_EM_1086_XYZ_&" + 
                    "q=DJ8zhJ2qs&" + 
                    "EMextraParam123=MLjwcN2c1d")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/ContributorsApi_221_validate
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IllegalArgumentException"))
                .body("'message'", containsString("sortBy must be empty or have a valid value but was _EM_1086_XYZ_. Valid values are organizationalCommitsCount,organizationalProjectsCount,personalCommitsCount,personalProjectsCount,organizationName,name"))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_15_getOnContributorsShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_2766_XYZ_&" + 
                    "start_date=5oE1k_lFa")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/config/DateUtil_15_iso8601
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.RuntimeException"))
                .body("'message'", containsString("java.text.ParseException: Unparseable date: \"5oE1k_lFa\""))
                .body("'path'", containsString("/contributors"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/contributors
    */
    @Test @Timeout(60)
    public void test_16_getOnContributorsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 484L)
                .d("ID", "351")
                .d("ORGANIZATION_ID", "753")
                .d("SNAPSHOT_DATE", "\"1934-01-23 02:26:56\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"NVbl0mxXRgE\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "136")
                .d("PERSONAL_COMMITS_COUNT", "936")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .and().insertInto("PROJECT", 485L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "357")
                .d("DESCRIPTION", "\"\"")
                .d("FORKS_COUNT", "353")
                .d("GIT_HUB_PROJECT_ID", "314")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"04MI\"")
                .d("ORGANIZATION_NAME", "\"753\"")
                .d("PRIMARY_LANGUAGE", "\"NbmxjTel7js\"")
                .d("SCORE", "707")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "947")
                .d("URL", "NULL")
                .d("TITLE", "\"2KIipREsBH524\"")
                .d("IMAGE", "\"WwU0KFKpAD8h\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 486L)
                .d("ID", "357")
                .d("SNAPSHOT_DATE", "\"1932-06-07 15:57:50\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10209")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "9")
                .d("ALL_STARS_COUNT", "322")
                .d("MEMBERS_COUNT", "489")
                .d("ORGANIZATION_NAME", "\"oC3W4Q2jqdka\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "369")
                .d("PUBLIC_PROJECT_COUNT", "485")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "843")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "387")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=753&" + 
                    "limit=334&" + 
                    "q=d2EKiIxhe4S4r4C")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test @Timeout(60)
    public void test_17_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=Mu0uNJUc&" + 
                    "limit=392&" + 
                    "offset=801&" + 
                    "q=F7O33ZGYLS&" + 
                    "end_date=tV6vSUJJ1aX&" + 
                    "start_date=k1ZLgDnBnNz")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test @Timeout(60)
    public void test_18_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 245L)
                .d("COMMITS_COUNT", "264")
                .d("CONTRIBUTORS_COUNT", "478")
                .d("DESCRIPTION", "\"6MtG8oFhkyFl_\"")
                .d("FORKS_COUNT", "182")
                .d("GIT_HUB_PROJECT_ID", "621")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"A4tLBhB5nZOk8LUr\"")
                .d("PRIMARY_LANGUAGE", "\"Y8_m8NSkcXINNB\"")
                .d("SCORE", "123")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"ppTkK_JZ9G\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "15")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "A4tLBhB5nZOk8LUr")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=85&" + 
                    "offset=488&" + 
                    "start_date=1952-10-09T23%3A27%3A09.559%2B04%3A54&" + 
                    "q=iegvm4Gbtn")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test @Timeout(60)
    public void test_19_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 254L)
                .d("COMMITS_COUNT", "343")
                .d("CONTRIBUTORS_COUNT", "26")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "969")
                .d("GIT_HUB_PROJECT_ID", "-3604")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"XmLwT\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"_EM_3911_XYZ_\"")
                .d("SCORE", "68")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "634")
                .d("URL", "NULL")
                .d("TITLE", "\"Tw_YcxWPxcaDUFiP\"")
                .d("IMAGE", "\"q\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "2303")
            .and().insertInto("STATISTICS", 255L)
                .d("ID", "-4901418485146505216")
                .d("SNAPSHOT_DATE", "\"1969-02-24 04:22:35\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "722")
                .d("ALL_SIZE_COUNT", "100")
                .d("ALL_STARS_COUNT", "878")
                .d("MEMBERS_COUNT", "63")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "359")
                .d("PROGRAM_LANGUAGES_COUNT", "-3603")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "757")
                .d("TEAMS_COUNT", "832")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=274&" + 
                    "end_date=2098-06-03T04%3A28%3A28%2B05%3A24&" + 
                    "sortBy=_EM_3907_XYZ_&" + 
                    "q=_EM_3913_XYZ_&" + 
                    "language=_EM_3911_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    * Found 2 potential faults of type-code 101
    */
    @Test @Timeout(60)
    public void test_20_getOnExportReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10273")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "643")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"1917-00-06T14:12:15-09:07\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8920")
                .d("TAGS_COUNT", "-131028")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "20")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-129691")
                .d("DESCRIPTION", "\"088d7bNW\"")
                .d("FORKS_COUNT", "524771")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yx9kLshx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"\"")
                .d("TITLE", "\"_EM_3796_XYZ_\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"zL_uL\"")
                .d("ORGANIZATION_NAME", "\"_EM_3797_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "312")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"Zjzo\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.format.date-time. [Path '/contributors/0/key/snapshotDate'] String "1994-03-31T07:25:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.type. [Path '/contributors/0/snapshotDate'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(675.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1994-03-31T07:25:58"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", containsString("zL_uL"))
                .body("'contributors'[0].'url'", containsString("Zjzo"))
                .body("'contributors'[0].'organizationalCommitsCount'", numberMatches(312.0))
                .body("'contributors'[0].'personalCommitsCount'", numberMatches(387.0))
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(241.0))
                .body("'contributors'[0].'organizationalProjectsCount'", numberMatches(1048712.0))
                .body("'contributors'[0].'organizationName'", containsString("_EM_3797_XYZ_"))
                .body("'contributors'[0].'organizationId'", numberMatches(675.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(7.65116758E11))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(432.0))
                .body("'projects'[0].'snapshotDate'", containsString("1974-06-01T21:11:53"))
                .body("'projects'[0].'name'", containsString("_EM_3714_XYZ_"))
                .body("'projects'[0].'title'", containsString("_EM_3796_XYZ_"))
                .body("'projects'[0].'image'", containsString("aHYL`OaXi0"))
                .body("'projects'[0].'organizationName'", containsString("V43yx9kLshx_"))
                .body("'projects'[0].'url'", containsString(""))
                .body("'projects'[0].'description'", containsString("088d7bNW"))
                .body("'projects'[0].'starsCount'", numberMatches(826.0))
                .body("'projects'[0].'commitsCount'", nullValue())
                .body("'projects'[0].'forksCount'", numberMatches(524771.0))
                .body("'projects'[0].'contributorsCount'", numberMatches(-129691.0))
                .body("'projects'[0].'externalContributorsCount'", nullValue())
                .body("'projects'[0].'score'", numberMatches(25.0))
                .body("'projects'[0].'lastPushed'", containsString("_EM_3791_XYZ_"))
                .body("'projects'[0].'primaryLanguage'", containsString("wc3dyB"))
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2005-05-27T22:51:57"))
                .body("'statistics'[0].'privateProjectCount'", nullValue())
                .body("'statistics'[0].'publicProjectCount'", numberMatches(8920.0))
                .body("'statistics'[0].'membersCount'", numberMatches(610.0))
                .body("'statistics'[0].'teamsCount'", numberMatches(233.0))
                .body("'statistics'[0].'allContributorsCount'", numberMatches(-10273.0))
                .body("'statistics'[0].'externalContributorsCount'", numberMatches(20.0))
                .body("'statistics'[0].'allStarsCount'", numberMatches(1.0))
                .body("'statistics'[0].'allForksCount'", numberMatches(-1669.0))
                .body("'statistics'[0].'allSizeCount'", numberMatches(643.0))
                .body("'statistics'[0].'programLanguagesCount'", numberMatches(3033.0))
                .body("'statistics'[0].'tagsCount'", numberMatches(-131028.0))
                .body("'statistics'[0].'organizationName'", containsString("1917-00-06T14:12:15-09:07"))
                .body("'statistics'[0].'snapshotDate'", numberMatches(1.117248717E12));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test @Timeout(60)
    public void test_21_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 174L)
                .d("COMMITS_COUNT", "427")
                .d("CONTRIBUTORS_COUNT", "796")
                .d("DESCRIPTION", "\"BJ31ON\"")
                .d("FORKS_COUNT", "198")
                .d("GIT_HUB_PROJECT_ID", "917997")
                .d("LAST_PUSHED", "\"6q95\"")
                .d("NAME", "\"UqTUT\\wCSiVjh\"")
                .d("ORGANIZATION_NAME", "\"nA6DlZzqyfgp1\"")
                .d("PRIMARY_LANGUAGE", "\"PyuvlMhmG8QlPcN\"")
                .d("SCORE", "-1")
                .d("SNAPSHOT_DATE", "\"1947-12-12 20:55:17\"")
                .d("STARS_COUNT", "131941")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"_EM_2500_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "18")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=nA6DlZzqyfgp1&" + 
                    "limit=1585741293&" + 
                    "offset=296&" + 
                    "start_date=1951-08-06T04%3A31%3A22Z&" + 
                    "end_date=1902-01-09T05%3A25%3A23.832-08%3A29&" + 
                    "q=nA6DlZzqyfgp1&" + 
                    "language=PyuvlMhmG8QlPcN")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test @Timeout(60)
    public void test_22_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 346L)
                .d("COMMITS_COUNT", "654")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"_EM_3825_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "960")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"SWu2a\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "670")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"5UAMXAHm_IsdVs\"")
                .d("TITLE", "\"_EM_3827_XYZ_\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "923")
            .and().insertInto("STATISTICS", 347L)
                .d("ID", "307")
                .d("SNAPSHOT_DATE", "\"1971-06-18 16:00:17\"")
                .d("ALL_CONTRIBUTORS_COUNT", "152")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"RR7nrPfm0PL9mV7\"")
                .d("PRIVATE_PROJECT_COUNT", "1")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "44")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "4Q46JBu99uYs2")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=336&" + 
                    "start_date=1970-06-27T22%3A34%3A30%2B16%3A12&" + 
                    "q=fJshF74CS2z&" + 
                    "language=7hxu7r2G")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test @Timeout(60)
    public void test_23_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 250L)
                .d("ID", "465")
                .d("SNAPSHOT_DATE", "\"1942-12-12 21:44:12\"")
                .d("ALL_CONTRIBUTORS_COUNT", "399")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "228")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"UokAzqPazd\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "420")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "993")
            .and().insertInto("PROJECT", 252L)
                .d("GIT_HUB_PROJECT_ID", "42")
            .and().insertInto("CONTRIBUTOR", 253L)
                .d("ID", "981")
                .d("ORGANIZATION_ID", "19")
                .d("SNAPSHOT_DATE", "\"1991-03-08 14:32:46\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "818")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "936")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"_EM_3336_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=509&" + 
                    "start_date=2031-08-16T20%3A50%3A29%2B12%3A55&" + 
                    "end_date=1978-06-23T07%3A29%3A34.605Z&" + 
                    "sortBy=v")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test @Timeout(60)
    public void test_24_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 120L)
                .d("COMMITS_COUNT", "347")
                .d("CONTRIBUTORS_COUNT", "700")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "219")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"XRDh3mozdSdxsne8\"")
                .d("PRIMARY_LANGUAGE", "\"pM\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "658")
                .d("URL", "NULL")
                .d("TITLE", "\"Vd2XJ\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "tnQRsyfOG15C")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=139&" + 
                    "offset=732&" + 
                    "start_date=2076-08-07T13%3A46%3A06Z&" + 
                    "end_date=1935-07-24T06%3A24%3A00.755-03%3A10&" + 
                    "sortBy=QF5aXixGPHdf5Y&" + 
                    "q=7zO6F&" + 
                    "language=pM&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test @Timeout(60)
    public void test_25_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=1195046809&" + 
                    "start_date=2057-02-25T15%3A56%3A24.026-10%3A16&" + 
                    "q=m6T4eZs&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/config
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_26_getOnConfigReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.type. [Path '/github.login'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_3511_XYZ_")
                .get(baseUrlOfSut + "/config")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'cache.path'", containsString("/home/rhuang329/coaster/EMB/exp2/temp/tmp_catwatch/cache_10032"))
                .body("'cache.size'", containsString("50"))
                .body("'endpoints.enabled'", containsString("false"))
                .body("'endpoints.health.enabled'", containsString("true"))
                .body("'github.login'", nullValue())
                .body("'organization.list'", containsString("zalando,zalando-stups,zalando-incubator"))
                .body("'schedule'", containsString("0 1 8 * * *"))
                .body("'scoring.project'", containsString("function(project) {var daysSinceLastPush = 0;if (project.lastPushed) {var tokens = project.lastPushed.split(\" \");var day = tokens[2];var month = tokens[1];var year = tokens[5];var lastPushedDate = new Date(day + ' ' + month + ' ' + year);var millisInDay = 86400000;daysSinceLastPush = Math.floor((new Date() - lastPushedDate) / millisInDay);}var maintainersPenalty = 0;if (project.maintainers.length < 2) {maintainersPenalty = 100;}return project.starsCount * 3 + project.forksCount * 2 + project.contributorsCount * 5 - daysSinceLastPush - maintainersPenalty}"))
                .body("'spring.database.driverClassName'", nullValue())
                .body("'spring.datasource.platform'", nullValue())
                .body("'spring.datasource.username'", containsString("sa"))
                .body("'spring.jpa.database'", nullValue())
                .body("'spring.jpa.hibernate.ddl-auto'", containsString("update"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/contributors
    */
    @Test @Timeout(60)
    public void test_27_getOnContributorsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 144L)
                .d("ID", "291")
                .d("ORGANIZATION_ID", "360")
                .d("SNAPSHOT_DATE", "\"1920-09-01 15:08:45\"")
                .d("NAME", "\"lE4dUk7f\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "657")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "276")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_2137_XYZ_")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=360&" + 
                    "limit=1492281158&" + 
                    "EMextraParam123=_EM_12_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test @Timeout(60)
    public void test_28_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=251&" + 
                    "offset=749&" + 
                    "sortBy=cj&" + 
                    "EMextraParam123=_EM_1070_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test @Timeout(60)
    public void test_29_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "Anr3KCWod5XTv7b")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_4754_XYZ_&" + 
                    "offset=139&" + 
                    "q=8SNL&" + 
                    "end_date=unKvS09igwqfG&" + 
                    "sortBy=_d&" + 
                    "start_date=KM1L_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test @Timeout(60)
    public void test_30_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "EIPmGu16")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=wGQ7k2jC1KKi&" + 
                    "limit=804&" + 
                    "offset=393")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics
    * Found 2 potential faults of type-code 101
    */
    @Test @Timeout(60)
    public void test_31_getOnStatisticsWithQueryParamReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 87L)
                .d("ID", "372")
                .d("SNAPSHOT_DATE", "\"1950-11-25 07:19:05\"")
                .d("ALL_CONTRIBUTORS_COUNT", "476")
                .d("ALL_FORKS_COUNT", "100")
                .d("ALL_SIZE_COUNT", "100")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "600")
                .d("ORGANIZATION_NAME", "\"I_cLI\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "985")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "423")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "19")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.type. [Path '/0/allStarsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.format.date-time. [Path '/0/key/snapshotDate'] String "1950-11-25T07:19:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?organizations=I_cLI")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'key'.'snapshotDate'", containsString("1950-11-25T07:19:05"))
                .body("[0].'privateProjectCount'", nullValue())
                .body("[0].'publicProjectCount'", nullValue())
                .body("[0].'membersCount'", numberMatches(600.0))
                .body("[0].'teamsCount'", nullValue())
                .body("[0].'allContributorsCount'", numberMatches(476.0))
                .body("[0].'externalContributorsCount'", numberMatches(19.0))
                .body("[0].'allStarsCount'", nullValue())
                .body("[0].'allForksCount'", numberMatches(100.0))
                .body("[0].'allSizeCount'", numberMatches(100.0))
                .body("[0].'programLanguagesCount'", numberMatches(985.0))
                .body("[0].'tagsCount'", numberMatches(423.0))
                .body("[0].'organizationName'", containsString("I_cLI"))
                .body("[0].'snapshotDate'", numberMatches(-6.02768455E11));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics
    */
    @Test @Timeout(60)
    public void test_32_getOnStatisticsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "q=0EzN7Q&" + 
                    "limit=C&" + 
                    "sortBy=pbX&" + 
                    "language=C4oGe4bbVeKoGO")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test @Timeout(60)
    public void test_33_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 21L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"PvpcpKdU\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "693")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"ucAvT0Yk9_0Try\"")
                .d("SCORE", "NULL")
                .d("SNAPSHOT_DATE", "\"1957-12-05 18:07:36\"")
                .d("STARS_COUNT", "NULL")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_250_XYZ_")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=953&" + 
                    "offset=682&" + 
                    "sortBy=_EM_249_XYZ_&" + 
                    "q=1tAv99oAK3MuDFGp&" + 
                    "language=ucAvT0Yk9_0Try")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test @Timeout(60)
    public void test_34_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .header("x-organizations", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=sUWhJMQ4Dmh&" + 
                    "limit=944&" + 
                    "q=niy&" + 
                    "sortBy=MuxhL")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/config
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_35_getOnConfigWithQueryParamsEmptyEnd_date() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.type. [Path '/github.login'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "AfK4iJSL7ShG8z9")
                .get(baseUrlOfSut + "/config?" + 
                    "end_date=&" + 
                    "organizations=q7QGCQF9peK")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'cache.path'", containsString("/home/rhuang329/coaster/EMB/exp2/temp/tmp_catwatch/cache_10032"))
                .body("'cache.size'", containsString("50"))
                .body("'endpoints.enabled'", containsString("false"))
                .body("'endpoints.health.enabled'", containsString("true"))
                .body("'github.login'", nullValue())
                .body("'organization.list'", containsString("zalando,zalando-stups,zalando-incubator"))
                .body("'schedule'", containsString("0 1 8 * * *"))
                .body("'scoring.project'", containsString("function(project) {var daysSinceLastPush = 0;if (project.lastPushed) {var tokens = project.lastPushed.split(\" \");var day = tokens[2];var month = tokens[1];var year = tokens[5];var lastPushedDate = new Date(day + ' ' + month + ' ' + year);var millisInDay = 86400000;daysSinceLastPush = Math.floor((new Date() - lastPushedDate) / millisInDay);}var maintainersPenalty = 0;if (project.maintainers.length < 2) {maintainersPenalty = 100;}return project.starsCount * 3 + project.forksCount * 2 + project.contributorsCount * 5 - daysSinceLastPush - maintainersPenalty}"))
                .body("'spring.database.driverClassName'", nullValue())
                .body("'spring.datasource.platform'", nullValue())
                .body("'spring.datasource.username'", containsString("sa"))
                .body("'spring.jpa.database'", nullValue())
                .body("'spring.jpa.hibernate.ddl-auto'", containsString("update"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/config
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_36_getOnConfigReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.type. [Path '/github.login'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config?" + 
                    "end_date=umRxvT&" + 
                    "start_date=vbX7WGNA")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'cache.path'", containsString("/home/rhuang329/coaster/EMB/exp2/temp/tmp_catwatch/cache_10032"))
                .body("'cache.size'", containsString("50"))
                .body("'endpoints.enabled'", containsString("false"))
                .body("'endpoints.health.enabled'", containsString("true"))
                .body("'github.login'", nullValue())
                .body("'organization.list'", containsString("zalando,zalando-stups,zalando-incubator"))
                .body("'schedule'", containsString("0 1 8 * * *"))
                .body("'scoring.project'", containsString("function(project) {var daysSinceLastPush = 0;if (project.lastPushed) {var tokens = project.lastPushed.split(\" \");var day = tokens[2];var month = tokens[1];var year = tokens[5];var lastPushedDate = new Date(day + ' ' + month + ' ' + year);var millisInDay = 86400000;daysSinceLastPush = Math.floor((new Date() - lastPushedDate) / millisInDay);}var maintainersPenalty = 0;if (project.maintainers.length < 2) {maintainersPenalty = 100;}return project.starsCount * 3 + project.forksCount * 2 + project.contributorsCount * 5 - daysSinceLastPush - maintainersPenalty}"))
                .body("'spring.database.driverClassName'", nullValue())
                .body("'spring.datasource.platform'", nullValue())
                .body("'spring.datasource.username'", containsString("sa"))
                .body("'spring.jpa.database'", nullValue())
                .body("'spring.jpa.hibernate.ddl-auto'", containsString("update"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test @Timeout(60)
    public void test_37_getOnProjectsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "d4")
                .get(baseUrlOfSut + "/projects?" + 
                    "offset=357&" + 
                    "start_date=2061-04-20T03%3A06%3A12.364Z&" + 
                    "end_date=1948-05-09T06%3A35%3A57%2B06%3A52&" + 
                    "language=rhIdh9NfisyoA&" + 
                    "EMextraParam123=_EM_364_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics
    */
    @Test @Timeout(60)
    public void test_38_getOnStatisticsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?limit=JLoS1Zs8r")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics
    */
    @Test @Timeout(60)
    public void test_39_getOnStatisticsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "q=OgQeJu&" + 
                    "offset=NG_kz1azdH8&" + 
                    "sortBy=iDAFSdNRVhl&" + 
                    "language=ACkg8h8X0v41")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    * Found 2 potential faults of type-code 101
    */
    @Test @Timeout(60)
    public void test_40_getOnExportWithQueryParamsReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 208L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "361")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"9RXqv20hxPa\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "29")
                .d("SNAPSHOT_DATE", "\"1979-05-11 08:34:20\"")
                .d("STARS_COUNT", "947")
                .d("URL", "\"_EM_2937_XYZ_\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.type. [Path '/projects/0/commitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.format.date-time. [Path '/projects/0/snapshotDate'] String "1979-05-11T08:34:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "end_date=AGTsJrPSPkfBSB&" + 
                    "organizations=rz&" + 
                    "start_date=9oj1Ar_HXaf_J46")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(361.0))
                .body("'projects'[0].'snapshotDate'", containsString("1979-05-11T08:34:20"))
                .body("'projects'[0].'name'", nullValue())
                .body("'projects'[0].'title'", nullValue())
                .body("'projects'[0].'image'", containsString(""))
                .body("'projects'[0].'organizationName'", containsString("9RXqv20hxPa"))
                .body("'projects'[0].'url'", containsString("_EM_2937_XYZ_"))
                .body("'projects'[0].'description'", nullValue())
                .body("'projects'[0].'starsCount'", numberMatches(947.0))
                .body("'projects'[0].'commitsCount'", nullValue())
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", nullValue())
                .body("'projects'[0].'externalContributorsCount'", nullValue())
                .body("'projects'[0].'score'", numberMatches(29.0))
                .body("'projects'[0].'lastPushed'", nullValue())
                .body("'projects'[0].'primaryLanguage'", nullValue())
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    */
    @Test @Timeout(60)
    public void test_41_getOnExportReturnsObject() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "organizations=GeIOUnmmIDGJa&" + 
                    "q=lAGpfhDCTsrCL59L&" + 
                    "limit=_Po0S")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    */
    @Test @Timeout(60)
    public void test_42_getOnExportReturnsObject() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "y")
                .get(baseUrlOfSut + "/export?" + 
                    "end_date=tq&" + 
                    "organizations=ZfB&" + 
                    "start_date=Me&" + 
                    "q=CVwCKz1VqQXNO&" + 
                    "offset=FutO4Y&" + 
                    "limit=pQ5&" + 
                    "sortBy=ekJHtNJpmmt_kiz")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics
    */
    @Test @Timeout(60)
    public void test_43_getOnStatisticsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?organizations=_EM_2548_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test @Timeout(60)
    public void test_44_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_762_XYZ_&" + 
                    "limit=131733&" + 
                    "offset=524915&" + 
                    "q=_EM_763_XYZ_&" + 
                    "EMextraParam123=_EM_764_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics
    */
    @Test @Timeout(60)
    public void test_45_getOnStatisticsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-8161")
                .d("ALL_FORKS_COUNT", "251")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"_EM_3779_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "728")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "21")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "357")
                .d("DESCRIPTION", "\"088d7bVW\"")
                .d("FORKS_COUNT", "483")
                .d("GIT_HUB_PROJECT_ID", "304")
                .d("LAST_PUSHED", "\"_EM_3713_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"V43yz9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3715_XYZ_\"")
                .d("TITLE", "\"Fpr4Ynhi_QQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"FY_9\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "136")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"_EM_3717_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "q=oAxgCyPMWoeOh3&" + 
                    "offset=pSwVq8&" + 
                    "language=HQ6CsnjN")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test @Timeout(60)
    public void test_46_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_1618_XYZ_")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=S2MbzRUE3B_J&" + 
                    "limit=368&" + 
                    "q=_EM_1617_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test @Timeout(60)
    public void test_47_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_1650_XYZ_&" + 
                    "limit=525&" + 
                    "q=_EM_1651_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test @Timeout(60)
    public void test_48_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_1960_XYZ_&" + 
                    "limit=961&" + 
                    "offset=924&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test @Timeout(60)
    public void test_49_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_1983_XYZ_&" + 
                    "offset=410&" + 
                    "q=_EM_1984_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test @Timeout(60)
    public void test_50_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_2836_XYZ_&" + 
                    "limit=659&" + 
                    "offset=125&" + 
                    "q=T6ljIPVE50SJ")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    * Found 2 potential faults of type-code 101
    */
    @Test @Timeout(60)
    public void test_51_getOnExportReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 346L)
                .d("COMMITS_COUNT", "654")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"_EM_3825_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "960")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"SWu2a\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "670")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"5UAMXAHm_IsdVs\"")
                .d("TITLE", "\"_EM_3827_XYZ_\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "923")
            .and().insertInto("STATISTICS", 347L)
                .d("ID", "307")
                .d("SNAPSHOT_DATE", "\"1971-06-18 16:00:17\"")
                .d("ALL_CONTRIBUTORS_COUNT", "152")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"RR7nrPfm0PL9mV7\"")
                .d("PRIVATE_PROJECT_COUNT", "1")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "44")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.type. [Path '/projects/0/contributorsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.format.date-time. [Path '/statistics/0/key/snapshotDate'] String "1971-06-18T16:00:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(960.0))
                .body("'projects'[0].'snapshotDate'", nullValue())
                .body("'projects'[0].'name'", containsString("SWu2a"))
                .body("'projects'[0].'title'", containsString("_EM_3827_XYZ_"))
                .body("'projects'[0].'image'", nullValue())
                .body("'projects'[0].'organizationName'", nullValue())
                .body("'projects'[0].'url'", containsString("5UAMXAHm_IsdVs"))
                .body("'projects'[0].'description'", containsString("_EM_3825_XYZ_"))
                .body("'projects'[0].'starsCount'", nullValue())
                .body("'projects'[0].'commitsCount'", numberMatches(654.0))
                .body("'projects'[0].'forksCount'", nullValue())
                .body("'projects'[0].'contributorsCount'", nullValue())
                .body("'projects'[0].'externalContributorsCount'", numberMatches(923.0))
                .body("'projects'[0].'score'", numberMatches(670.0))
                .body("'projects'[0].'lastPushed'", nullValue())
                .body("'projects'[0].'primaryLanguage'", nullValue())
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("1971-06-18T16:00:17"))
                .body("'statistics'[0].'privateProjectCount'", numberMatches(1.0))
                .body("'statistics'[0].'publicProjectCount'", nullValue())
                .body("'statistics'[0].'membersCount'", nullValue())
                .body("'statistics'[0].'teamsCount'", nullValue())
                .body("'statistics'[0].'allContributorsCount'", numberMatches(152.0))
                .body("'statistics'[0].'externalContributorsCount'", nullValue())
                .body("'statistics'[0].'allStarsCount'", nullValue())
                .body("'statistics'[0].'allForksCount'", nullValue())
                .body("'statistics'[0].'allSizeCount'", nullValue())
                .body("'statistics'[0].'programLanguagesCount'", nullValue())
                .body("'statistics'[0].'tagsCount'", numberMatches(44.0))
                .body("'statistics'[0].'organizationName'", containsString("RR7nrPfm0PL9mV7"))
                .body("'statistics'[0].'snapshotDate'", numberMatches(4.6123217E10));
    }
    
    
    /**
    * Calls:
    * (200) GET:/projects
    */
    @Test @Timeout(60)
    public void test_52_getOnProjectsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 174L)
                .d("COMMITS_COUNT", "171")
                .d("CONTRIBUTORS_COUNT", "796")
                .d("DESCRIPTION", "\"BJ31ON\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "917997")
                .d("LAST_PUSHED", "\"6q95\"")
                .d("NAME", "\"UqTUT\\wCSiVjh\"")
                .d("ORGANIZATION_NAME", "\"nA6DlZzqyfgp1\"")
                .d("PRIMARY_LANGUAGE", "\"PyuvlMhmG8QlPcN\"")
                .d("SCORE", "0")
                .d("SNAPSHOT_DATE", "\"1939-11-28 20:55:17\"")
                .d("STARS_COUNT", "131941")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"_EM_2500_XYZ_\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "18")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=nA6DlZzqyfgp1&" + 
                    "limit=1585740781&" + 
                    "offset=296&" + 
                    "start_date=1951-08-06T04%3A31%3A22Z&" + 
                    "end_date=1902-01-09T05%3A25%3A23.832-08%3A29&" + 
                    "q=nA6DlZzqyfgp1")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    */
    @Test @Timeout(60)
    public void test_53_getOnExportReturnsObject() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "pvirh")
                .get(baseUrlOfSut + "/export?" + 
                    "organizations=N&" + 
                    "start_date=mxzCbjS8&" + 
                    "sortBy=thILsXgSCL")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    */
    @Test @Timeout(60)
    public void test_54_getOnExportReturnsObject() throws Exception {
        
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?" + 
                    "end_date=OCIkBSNpaqmV2V&" + 
                    "q=Tss&" + 
                    "sortBy=rAFB")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(0))
                .body("'projects'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test @Timeout(60)
    public void test_55_getOnLanguagesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_4619_XYZ_&" + 
                    "limit=276&" + 
                    "offset=4734&" + 
                    "q=WJdu8LUoYkwDQteX")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/export
    * Found 2 potential faults of type-code 101
    */
    @Test @Timeout(60)
    public void test_56_getOnExportReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10208")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "643")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"Ngtcf6TP|7hVgcv\"")
                .d("PRIVATE_PROJECT_COUNT", "772")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8920")
                .d("TAGS_COUNT", "0")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "-108")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-130715")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "227")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yz9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3`y\"")
                .d("SCORE", "0")
                .d("SNAPSHOT_DATE", "\"1974-05-09 21:43:52\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3785_XYZ_\"")
                .d("TITLE", "\"FUr0YjhiUQQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"_EM_3792_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"_EM_3716_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.format.date-time. [Path '/contributors/0/key/snapshotDate'] String "1994-03-31T07:25:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.type. [Path '/contributors/0/organizationalCommitsCount'] Instance type (null) does not match any allowed primitive type (allowed: ["integer"])
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'contributors'.size()", equalTo(1))
                .body("'contributors'[0].'key'.'organizationId'", numberMatches(675.0))
                .body("'contributors'[0].'key'.'snapshotDate'", containsString("1994-03-31T07:25:58"))
                .body("'contributors'[0].'loginId'", containsString(""))
                .body("'contributors'[0].'name'", containsString("_EM_3792_XYZ_"))
                .body("'contributors'[0].'url'", nullValue())
                .body("'contributors'[0].'organizationalCommitsCount'", nullValue())
                .body("'contributors'[0].'personalCommitsCount'", numberMatches(387.0))
                .body("'contributors'[0].'personalProjectsCount'", numberMatches(241.0))
                .body("'contributors'[0].'organizationalProjectsCount'", numberMatches(1048712.0))
                .body("'contributors'[0].'organizationName'", containsString("_EM_3716_XYZ_"))
                .body("'contributors'[0].'organizationId'", numberMatches(675.0))
                .body("'contributors'[0].'snapshotDate'", numberMatches(7.65116758E11))
                .body("'projects'.size()", equalTo(1))
                .body("'projects'[0].'languageList'.size()", equalTo(0))
                .body("'projects'[0].'gitHubProjectId'", numberMatches(432.0))
                .body("'projects'[0].'snapshotDate'", containsString("1974-05-09T21:43:52"))
                .body("'projects'[0].'name'", containsString("_EM_3714_XYZ_"))
                .body("'projects'[0].'title'", containsString("FUr0YjhiUQQE0h"))
                .body("'projects'[0].'image'", containsString("aHYL`OaXi0"))
                .body("'projects'[0].'organizationName'", containsString("V43yz9kLspx_"))
                .body("'projects'[0].'url'", containsString("_EM_3785_XYZ_"))
                .body("'projects'[0].'description'", nullValue())
                .body("'projects'[0].'starsCount'", numberMatches(826.0))
                .body("'projects'[0].'commitsCount'", nullValue())
                .body("'projects'[0].'forksCount'", numberMatches(227.0))
                .body("'projects'[0].'contributorsCount'", numberMatches(-130715.0))
                .body("'projects'[0].'externalContributorsCount'", nullValue())
                .body("'projects'[0].'score'", numberMatches(0.0))
                .body("'projects'[0].'lastPushed'", containsString("_EM_3791_XYZ_"))
                .body("'projects'[0].'primaryLanguage'", containsString("wc3`y"))
                .body("'projects'[0].'maintainers'.size()", equalTo(0))
                .body("'statistics'.size()", equalTo(1))
                .body("'statistics'[0].'key'.'snapshotDate'", containsString("2005-05-27T22:51:57"))
                .body("'statistics'[0].'privateProjectCount'", numberMatches(772.0))
                .body("'statistics'[0].'publicProjectCount'", numberMatches(8920.0))
                .body("'statistics'[0].'membersCount'", numberMatches(610.0))
                .body("'statistics'[0].'teamsCount'", numberMatches(233.0))
                .body("'statistics'[0].'allContributorsCount'", numberMatches(-10208.0))
                .body("'statistics'[0].'externalContributorsCount'", numberMatches(-108.0))
                .body("'statistics'[0].'allStarsCount'", numberMatches(1.0))
                .body("'statistics'[0].'allForksCount'", numberMatches(-1669.0))
                .body("'statistics'[0].'allSizeCount'", numberMatches(643.0))
                .body("'statistics'[0].'programLanguagesCount'", numberMatches(3033.0))
                .body("'statistics'[0].'tagsCount'", numberMatches(0.0))
                .body("'statistics'[0].'organizationName'", containsString("Ngtcf6TP|7hVgcv"))
                .body("'statistics'[0].'snapshotDate'", numberMatches(1.117248717E12));
    }
    
    
    /**
    * Calls:
    * (200) GET:/languages
    */
    @Test @Timeout(60)
    public void test_57_getOnLanguagesWithQueryParamsEmptyOrganizationsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=&" + 
                    "q=_EM_4697_XYZ_&" + 
                    "end_date=vytJ&" + 
                    "start_date=eEpeOO")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_58_getOnStatisticsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/statistics'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "5377dO")
                .get(baseUrlOfSut + "/statistics?" + 
                    "end_date=_EM_4576_XYZ_&" + 
                    "q=f3&" + 
                    "offset=nrZ3&" + 
                    "sortBy=_EM_4579_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for endDate"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/delete
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_59_getOnDeleteWithQueryParamsEmptyAccess_token() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/delete'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_4394_XYZ_")
                .get(baseUrlOfSut + "/delete?" + 
                    "access_token=&" + 
                    "end_date=A%3D&" + 
                    "q=_vE&" + 
                    "offset=6QxvB9XU&" + 
                    "organizations=VD0RDSYcM4HUhbkA&" + 
                    "limit=riGZRJ1lAi&" + 
                    "sortBy=w2ruDlI&" + 
                    "start_date=sjM")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_60_getOnStatisticsReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 457L)
                .d("ID", "-3658333420846256128")
                .d("SNAPSHOT_DATE", "\"1969-06-11 03:07:53\"")
                .d("ALL_CONTRIBUTORS_COUNT", "972")
                .d("ALL_FORKS_COUNT", "841")
                .d("ALL_SIZE_COUNT", "100")
                .d("ALL_STARS_COUNT", "670")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"X\"")
                .d("PRIVATE_PROJECT_COUNT", "453")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "525")
                .d("TEAMS_COUNT", "174")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "703")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/statistics'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "X")
                .get(baseUrlOfSut + "/statistics?" + 
                    "start_date=QRs2mR02&" + 
                    "offset=uIB&" + 
                    "sortBy=M")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for stardDate"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/projects
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_61_getOnProjectsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_173_XYZ_")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=f7PZj&" + 
                    "limit=225&" + 
                    "offset=893&" + 
                    "start_date=1925-06-04T-1%3A48%3A00.513%2B17%3A03&" + 
                    "end_date=2037-05-21T06%3A13%3A15.217Z&" + 
                    "sortBy=KRRyy5VG4Oey1Kk&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'exception'", containsString("org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"))
                .body("'message'", containsString("Failed to convert value of type 'java.lang.String' to required type 'java.util.Date'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@io.swagger.annotations.ApiParam @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.util.Date] for value '1925-06-04T-1:48:00.513+17:03'; nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [1925-06-04T-1:48:00.513+17:03]"))
                .body("'path'", containsString("/projects"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/init
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_62_getOnInitWithQueryParamEmptyAccess_token() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/init'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "_EM_17_XYZ_")
                .get(baseUrlOfSut + "/init?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_63_getOnStatisticsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/statistics'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "start_date=_EM_1096_XYZ_&" + 
                    "EMextraParam123=_EM_1097_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Invalid date format for stardDate"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/projects
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_64_getOnProjectsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=556&" + 
                    "start_date=1954-06-20T22%3A03%3A15.895-06%3A37&" + 
                    "end_date=1919-06-02T14%3A56%3A-1.253Z&" + 
                    "sortBy=BOimvB7l&" + 
                    "q=OqhMPvb_u5wH&" + 
                    "language=wFvo3a05&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'exception'", containsString("org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"))
                .body("'message'", containsString("Failed to convert value of type 'java.lang.String' to required type 'java.util.Date'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@io.swagger.annotations.ApiParam @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.util.Date] for value '1919-06-02T14:56:-1.253Z'; nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [1919-06-02T14:56:-1.253Z]"))
                .body("'path'", containsString("/projects"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/config
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_65_getOnConfigWithQueryParamEmptyAccess_token() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/config'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/config?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributors
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_66_getOnContributorsWithQueryParamsEmptySortByAndEmptyAccess_token() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "y4qSXD1qOoBk")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=_EM_4249_XYZ_&" + 
                    "limit=368&" + 
                    "offset=496&" + 
                    "start_date=eIP8NIKV8cI4qVe&" + 
                    "end_date=3d9n1GOYMGzLk&" + 
                    "sortBy=&" + 
                    "q=gg23EPZzu&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/fetch
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_67_getOnFetchWithQueryParamEmptyAccess_token() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/fetch'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/fetch?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/export
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_68_getOnExportWithQueryParamEmptyAccess_token() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/export'.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/languages
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_69_getOnLanguagesWithQueryParamsEmptyOrganizationsAndEmptyAccess_token() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10208")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "643")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"Ngtcf6TP|7hVgcv\"")
                .d("PRIVATE_PROJECT_COUNT", "772")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8920")
                .d("TAGS_COUNT", "0")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "-108")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-130715")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "227")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yz9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3`y\"")
                .d("SCORE", "0")
                .d("SNAPSHOT_DATE", "\"1974-05-09 21:43:52\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3785_XYZ_\"")
                .d("TITLE", "\"FUr0YjhiUQQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"_EM_3792_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"_EM_3716_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=&" + 
                    "limit=986&" + 
                    "offset=770&" + 
                    "q=YkUiBnJ3n2LIXb8&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (401) GET:/delete
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_70_getOnDeleteReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/delete?" + 
                    "q=_vE&" + 
                    "offset=6QxvB9XU&" + 
                    "limit=riGZRJ1lAi&" + 
                    "sortBy=w2ruDlI&" + 
                    "start_date=sjM")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    /**
    * Calls:
    * (401) GET:/init
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_71_getOnInitReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("unauthorized"))
                .body("'error_description'", containsString("Full authentication is required to access this resource"));
    }
    
    
    /**
    * Calls:
    * (403) GET:/projects
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_72_getOnProjectsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=_EM_1642_XYZ_&" + 
                    "limit=952&" + 
                    "offset=729&" + 
                    "start_date=1936-05-32T17%3A-1%3A49.562%2B06%3A48&" + 
                    "end_date=2019-05-06T20%3A33%3A05%2B18%3A50&" + 
                    "q=jtNMjbwpvtrALaAm&" + 
                    "language=EG6sF&" + 
                    "EMextraParam123=_EM_1643_XYZ_&" + 
                    "access_token=omVOO5y65Hdd")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/init
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_73_getOnInitReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init?access_token=rKn")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/projects
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_74_getOnProjectsWithQueryParamsNegativeOffsetEmptyOrganizationsUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10273")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "643")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"1917-00-06T14:12:15-09:07\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8920")
                .d("TAGS_COUNT", "-131028")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "20")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-129691")
                .d("DESCRIPTION", "\"088d7bNW\"")
                .d("FORKS_COUNT", "524771")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yx9kLshx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"\"")
                .d("TITLE", "\"_EM_3796_XYZ_\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"zL_uL\"")
                .d("ORGANIZATION_NAME", "\"_EM_3797_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "312")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"Zjzo\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=&" + 
                    "limit=986&" + 
                    "offset=-523518&" + 
                    "start_date=1917-00-06T14%3A12%3A15-09%3A07&" + 
                    "end_date=1917-00-06T14%3A15%3A12.107Z&" + 
                    "language=wc3dyB&" + 
                    "access_token=1917-00-06T14%3A12%3A15-09%3A07")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/delete
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_75_getOnDeleteReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "EAB3An3sq13LttHs")
                .get(baseUrlOfSut + "/delete?" + 
                    "access_token=Dz4y&" + 
                    "end_date=GIyX6dh&" + 
                    "q=g&" + 
                    "start_date=VshRs6L435ZmTFuw")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/delete
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_76_getOnDeleteReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/delete?" + 
                    "access_token=s4mcJql&" + 
                    "q=oxu21dk&" + 
                    "start_date=50fzvXj1HBGCqy")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/contributors
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_77_getOnContributorsWithQueryParamsReturnsMismatchResponseWithSchema() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "22560")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "579")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "1122")
                .d("ORGANIZATION_NAME", "\"1949-00-06T14:23:44.107Z\"")
                .d("PRIVATE_PROJECT_COUNT", "740")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8904")
                .d("TAGS_COUNT", "43")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "20")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-130715")
                .d("DESCRIPTION", "\"088d7bNW\"")
                .d("FORKS_COUNT", "227")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yx9kLrpx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dy\"")
                .d("SCORE", "0")
                .d("SNAPSHOT_DATE", "\"1974-05-09 21:43:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3785_XYZ_\"")
                .d("TITLE", "\"FUr0YjhiUQQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"_EM_3792_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"_EM_3716_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"aGVmhRjZ0olvsU\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/contributors?" + 
                    "organizations=ALL_CONT3_4_&" + 
                    "limit=986&" + 
                    "offset=770&" + 
                    "start_date=1949-00-06T14%3A23%3A44.107Z&" + 
                    "end_date=1949-00-06T14%3A23%3A44.107Z&" + 
                    "sortBy=S_8bU2B&" + 
                    "q=_EM_4672_XYZ_&" + 
                    "access_token=ALL_CONT3_4_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/languages
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_78_getOnLanguagesWithQueryParamsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "EIPmGu16")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=wGQ7k2jC1KKi&" + 
                    "limit=17188&" + 
                    "offset=393&" + 
                    "access_token=x&" + 
                    "end_date=bRAjwaij4uIrnX&" + 
                    "sortBy=Db&" + 
                    "start_date=4q1zdtShg3NuGiH")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/config
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_79_getOnConfigReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_3443_XYZ_")
                .get(baseUrlOfSut + "/config?" + 
                    "access_token=xOdVaZdXPveSzJTD&" + 
                    "end_date=32I&" + 
                    "start_date=K4oe")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/projects
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_80_getOnProjectsWithQueryParamsReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 208L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "361")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"9RXqv20hxPa\"")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "29")
                .d("SNAPSHOT_DATE", "\"1979-05-11 08:34:20\"")
                .d("STARS_COUNT", "947")
                .d("URL", "\"_EM_2937_XYZ_\"")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=9RXqv20hxPa&" + 
                    "start_date=2076-02-07T-1%3A05%3A42.525Z&" + 
                    "end_date=2007-03-29T19%3A50%3A32.129-15%3A13&" + 
                    "q=_EM_2939_XYZ_&" + 
                    "language=CrISEfJMJIRYLHV&" + 
                    "access_token=ey2_gAQ5Vpe")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/export
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_81_getOnExportWithQueryParamsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "4")
                .get(baseUrlOfSut + "/export?" + 
                    "access_token=CC1dn6TOgFzqw4&" + 
                    "end_date=ts&" + 
                    "organizations=JqeaOHdusV0T8kP2&" + 
                    "start_date=qlGvyVeQvUH&" + 
                    "q=cd3&" + 
                    "offset=mhxxAV&" + 
                    "limit=lBD1Ibv")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/projects
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_82_getOnProjectsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "start_date=1914-10-21T00%3A31%3A52.461Z&" + 
                    "end_date=2006-01-18T-1%3A58%3A14-05%3A12&" + 
                    "sortBy=APV&" + 
                    "EMextraParam123=_EM_452_XYZ_&" + 
                    "access_token=_EM_453_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/fetch
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_83_getOnFetchWithQueryParamsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/fetch?" + 
                    "EMextraParam123=42&" + 
                    "access_token=R")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_84_getOnStatisticsWithQueryParamsEmptyOrganizations() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "5Cj")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=&" + 
                    "start_date=xb4gOFjT7OZqld&" + 
                    "access_token=_EM_4314_XYZ_&" + 
                    "offset=stYrYZSPZc8bqN11&" + 
                    "language=_EM_4315_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/projects
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_85_getOnProjectsWithQueryParamsNegativeLimit() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_20_XYZ_")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=-31937&" + 
                    "offset=136&" + 
                    "start_date=2000-06-24T06%3A31%3A57.560Z&" + 
                    "end_date=2055-11-10T04%3A43%3A04.703%2B17%3A44&" + 
                    "q=zRN_o5U5_TA&" + 
                    "access_token=jYH1YnG_04fU")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/languages
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_86_getOnLanguagesWithQueryParamsNegativeLimit() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=_EM_3600_XYZ_&" + 
                    "limit=-1492506893&" + 
                    "access_token=Yj2")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/projects
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_87_getOnProjectsWithQueryParamsEmptyOrganizationsUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-8161")
                .d("ALL_FORKS_COUNT", "251")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"_EM_3779_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "728")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "21")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "357")
                .d("DESCRIPTION", "\"088d7bVW\"")
                .d("FORKS_COUNT", "483")
                .d("GIT_HUB_PROJECT_ID", "304")
                .d("LAST_PUSHED", "\"_EM_3713_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"V43yz9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3715_XYZ_\"")
                .d("TITLE", "\"Fpr4Ynhi_QQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"FY_9\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "136")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"_EM_3717_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "_EM_3779_XYZ_")
                .get(baseUrlOfSut + "/projects?" + 
                    "organizations=&" + 
                    "start_date=1917-00-06T14%3A44%3A23-13%3A07&" + 
                    "language=wc3dyB&" + 
                    "access_token=_EM_3779_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/export
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_88_getOnExportWithQueryParamReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-8161")
                .d("ALL_FORKS_COUNT", "251")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"_EM_3779_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "728")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "21")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "357")
                .d("DESCRIPTION", "\"088d7bVW\"")
                .d("FORKS_COUNT", "483")
                .d("GIT_HUB_PROJECT_ID", "304")
                .d("LAST_PUSHED", "\"_EM_3713_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"V43yz9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3715_XYZ_\"")
                .d("TITLE", "\"Fpr4Ynhi_QQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"FY_9\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "136")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"_EM_3717_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/export?access_token=_EM_3779_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/delete
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_89_getOnDeleteReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 254L)
                .d("COMMITS_COUNT", "345")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"iKVjU\"")
                .d("FORKS_COUNT", "969")
                .d("GIT_HUB_PROJECT_ID", "476")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"Lg5ZFoClheZo\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"\"")
                .d("SCORE", "0")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "634")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"r\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "255")
            .and().insertInto("STATISTICS", 255L)
                .d("ID", "-4901418485146505216")
                .d("SNAPSHOT_DATE", "\"1969-02-24 04:22:35\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "100")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "67")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "557")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "832")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "931")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_3994_XYZ_")
                .get(baseUrlOfSut + "/delete?access_token=_EM_3994_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_90_getOnStatisticsReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 254L)
                .d("COMMITS_COUNT", "345")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"iKVjU\"")
                .d("FORKS_COUNT", "969")
                .d("GIT_HUB_PROJECT_ID", "476")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"Lg5ZFoClheZo\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"\"")
                .d("SCORE", "0")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "634")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "\"r\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "255")
            .and().insertInto("STATISTICS", 255L)
                .d("ID", "-4901418485146505216")
                .d("SNAPSHOT_DATE", "\"1969-02-24 04:22:35\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "100")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "67")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "557")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "832")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "931")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics?" + 
                    "organizations=_EM_3994_XYZ_&" + 
                    "start_date=1918-09-00T03%3A41%3A21Z&" + 
                    "access_token=_EM_3994_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/delete
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_91_getOnDeleteReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/delete?" + 
                    "access_token=P8mRGDNItzE&" + 
                    "offset=mxzTcMGE27IyEbOJ&" + 
                    "limit=xufquMkT53jEwcm&" + 
                    "sortBy=7j4M5G&" + 
                    "start_date=93dFyTUpbbg")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/delete
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_92_getOnDeleteWithQueryParamsEmptyOffsetReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/delete?" + 
                    "access_token=yDiXv3mTK2&" + 
                    "end_date=_EM_4502_XYZ_&" + 
                    "q=sZ_Xhwyi&" + 
                    "offset=&" + 
                    "limit=ah")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/projects
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_93_getOnProjectsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "RbuIeyVW")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=1245518481&" + 
                    "offset=562&" + 
                    "start_date=2042-08-09T10%3A20%3A-1.908-03%3A15&" + 
                    "end_date=1902-00-14T20%3A27%3A14.813Z&" + 
                    "q=nszkset&" + 
                    "access_token=NlD2x9CVDOht_Oif")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/import
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_94_postOnImportReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"description\": \"C_yqXrWy\", " + 
                    " \"externalContributorsCount\": 802, " + 
                    " \"gitHubProjectId\": 127, " + 
                    " \"image\": \"_EM_343_XYZ_\", " + 
                    " \"lastPushed\": \"_EM_345_XYZ_\", " + 
                    " \"maintainers\": [ " + 
                    " \"a5lkwoBf\" " + 
                    " ], " + 
                    " \"name\": \"y47I_vSl9W3\", " + 
                    " \"snapshotDate\": \"2001-12-11T16:12:51Z\", " + 
                    " \"starsCount\": 786, " + 
                    " \"title\": \"_EM_346_XYZ_\", " + 
                    " \"url\": \"_EM_347_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"contributorsCount\": 51, " + 
                    " \"externalContributorsCount\": 831, " + 
                    " \"image\": \"_EM_349_XYZ_\", " + 
                    " \"lastPushed\": \"_EM_352_XYZ_\", " + 
                    " \"name\": \"_EM_353_XYZ_\", " + 
                    " \"organizationName\": \"YcZxrz\", " + 
                    " \"primaryLanguage\": \"A\", " + 
                    " \"score\": 582, " + 
                    " \"starsCount\": 141 " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"id\": -373293059, " + 
                    " \"key\": {}, " + 
                    " \"organizationName\": \"_EM_355_XYZ_\", " + 
                    " \"programLanguagesCount\": 481, " + 
                    " \"tagsCount\": 813 " + 
                    " }, " + 
                    " { " + 
                    " \"allContributorsCount\": 399, " + 
                    " \"allStarsCount\": 1266186473, " + 
                    " \"organizationName\": \"HoHo\", " + 
                    " \"privateProjectCount\": 422, " + 
                    " \"programLanguagesCount\": 672, " + 
                    " \"publicProjectCount\": 820, " + 
                    " \"teamsCount\": 507 " + 
                    " }, " + 
                    " { " + 
                    " \"allForksCount\": 399, " + 
                    " \"allSizeCount\": 463, " + 
                    " \"allStarsCount\": 933, " + 
                    " \"id\": -1266696919, " + 
                    " \"key\": {}, " + 
                    " \"membersCount\": 649, " + 
                    " \"organizationName\": \"_EM_356_XYZ_\", " + 
                    " \"privateProjectCount\": 373, " + 
                    " \"publicProjectCount\": 599, " + 
                    " \"teamsCount\": 214 " + 
                    " }, " + 
                    " { " + 
                    " \"allForksCount\": 705, " + 
                    " \"allStarsCount\": 399, " + 
                    " \"id\": 565, " + 
                    " \"key\": { " + 
                    " \"id\": 134 " + 
                    " }, " + 
                    " \"privateProjectCount\": 134, " + 
                    " \"programLanguagesCount\": 711, " + 
                    " \"publicProjectCount\": 230, " + 
                    " \"snapshotDate\": \"2099-03-03T03:31:59.985Z\", " + 
                    " \"tagsCount\": 317 " + 
                    " }, " + 
                    " { " + 
                    " \"allSizeCount\": 872, " + 
                    " \"externalContributorsCount\": 756, " + 
                    " \"id\": 121, " + 
                    " \"organizationName\": \"Ua\", " + 
                    " \"privateProjectCount\": 342623573, " + 
                    " \"publicProjectCount\": 480, " + 
                    " \"tagsCount\": 347 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/import
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_95_postOnImportReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"loginId\": \"DwXisLrNp1\", " + 
                    " \"name\": \"aRkxeWuPKs\", " + 
                    " \"organizationName\": \"VMMSBISlLv\", " + 
                    " \"organizationalCommitsCount\": 899, " + 
                    " \"organizationalProjectsCount\": 364, " + 
                    " \"personalCommitsCount\": 906 " + 
                    " }, " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"id\": -4571186232815871448, " + 
                    " \"organizationId\": 72, " + 
                    " \"snapshotDate\": \"1909-06-27T-1:07:45.471+11:30\" " + 
                    " }, " + 
                    " \"organizationId\": 2054529220, " + 
                    " \"organizationName\": \"_EM_1141_XYZ_\", " + 
                    " \"organizationalCommitsCount\": 651, " + 
                    " \"organizationalProjectsCount\": 315, " + 
                    " \"personalCommitsCount\": 712, " + 
                    " \"snapshotDate\": \"2066-13-21T12:39:11.128Z\", " + 
                    " \"url\": \"_EM_1142_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -8060063967861031892, " + 
                    " \"loginId\": \"_EM_1143_XYZ_\", " + 
                    " \"name\": \"crMiHnFsFB5mPF\", " + 
                    " \"organizationId\": 808, " + 
                    " \"organizationName\": \"y_sHRCi\", " + 
                    " \"organizationalCommitsCount\": 1751129554, " + 
                    " \"personalCommitsCount\": 458, " + 
                    " \"snapshotDate\": \"1929-01-08T16:49:04+10:12\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 967, " + 
                    " \"name\": \"0U2ypBvtEzd6gMUx\", " + 
                    " \"organizationalCommitsCount\": -111878875, " + 
                    " \"personalCommitsCount\": 267, " + 
                    " \"personalProjectsCount\": 935, " + 
                    " \"snapshotDate\": \"2059-02-30T05:27:18.353Z\", " + 
                    " \"url\": \"\" " + 
                    " }, " + 
                    " { " + 
                    " \"loginId\": \"_EM_1144_XYZ_\", " + 
                    " \"name\": \"Ew4mYWzIkHpk\", " + 
                    " \"organizationId\": 935, " + 
                    " \"personalCommitsCount\": 128, " + 
                    " \"personalProjectsCount\": 747, " + 
                    " \"snapshotDate\": \"2021-00-09T-1:46:39-07:24\", " + 
                    " \"url\": \"K1Agjt2\" " + 
                    " } " + 
                    " ], " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"commitsCount\": 613, " + 
                    " \"description\": \"2p\", " + 
                    " \"externalContributorsCount\": 179, " + 
                    " \"languageList\": [ " + 
                    " \"r\", " + 
                    " \"_EM_1147_XYZ_\", " + 
                    " \"etW9b3O9kLXl\", " + 
                    " \"c\", " + 
                    " \"3jVl_jE8C7ogD\" " + 
                    " ], " + 
                    " \"maintainers\": [ " + 
                    " \"_EM_1149_XYZ_\", " + 
                    " \"d8EQ\", " + 
                    " \"_EM_1150_XYZ_\" " + 
                    " ], " + 
                    " \"name\": \"_EM_1151_XYZ_\", " + 
                    " \"primaryLanguage\": \"o_lC7fcl3Ln\", " + 
                    " \"score\": 570 " + 
                    " }, " + 
                    " { " + 
                    " \"description\": \"wvIi6OwGxU1gt\", " + 
                    " \"forksCount\": 772, " + 
                    " \"languageList\": [], " + 
                    " \"lastPushed\": \"_EM_1154_XYZ_\", " + 
                    " \"maintainers\": [ " + 
                    " \"_EM_1155_XYZ_\", " + 
                    " \"_EM_1156_XYZ_\" " + 
                    " ], " + 
                    " \"name\": \"eVtBlMTw_3X_ni7\", " + 
                    " \"snapshotDate\": \"2057-05-12T09:27:19Z\", " + 
                    " \"starsCount\": 621, " + 
                    " \"url\": \"AzsUaKXPC\" " + 
                    " }, " + 
                    " { " + 
                    " \"contributorsCount\": 63, " + 
                    " \"description\": \"_EM_1159_XYZ_\", " + 
                    " \"languageList\": [ " + 
                    " \"vb9slm\", " + 
                    " \"_EM_1160_XYZ_\", " + 
                    " \"_EM_1161_XYZ_\" " + 
                    " ], " + 
                    " \"lastPushed\": \"_EM_1162_XYZ_\", " + 
                    " \"maintainers\": [ " + 
                    " \"_EM_1163_XYZ_\", " + 
                    " \"LxM\", " + 
                    " \"d4\", " + 
                    " \"_EM_1164_XYZ_\" " + 
                    " ], " + 
                    " \"name\": \"JjtL\", " + 
                    " \"title\": \"JlqZiQWh\", " + 
                    " \"url\": \"yjd\" " + 
                    " }, " + 
                    " { " + 
                    " \"externalContributorsCount\": 798, " + 
                    " \"forksCount\": 249, " + 
                    " \"lastPushed\": \"gQB5fASj\", " + 
                    " \"maintainers\": [ " + 
                    " \"brWj1ox\", " + 
                    " \"_EM_1171_XYZ_\", " + 
                    " \"_EM_1172_XYZ_\", " + 
                    " \"_EM_1173_XYZ_\" " + 
                    " ], " + 
                    " \"organizationName\": \"\", " + 
                    " \"primaryLanguage\": \"g4\", " + 
                    " \"snapshotDate\": \"1976-04-02T17:25:06Z\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/import
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_96_postOnImportReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-8161")
                .d("ALL_FORKS_COUNT", "251")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"_EM_3779_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "728")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "21")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "357")
                .d("DESCRIPTION", "\"088d7bVW\"")
                .d("FORKS_COUNT", "483")
                .d("GIT_HUB_PROJECT_ID", "304")
                .d("LAST_PUSHED", "\"_EM_3713_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"V43yz9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3715_XYZ_\"")
                .d("TITLE", "\"Fpr4Ynhi_QQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"FY_9\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "136")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"_EM_3717_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [ " + 
                    " { " + 
                    " \"id\": 947, " + 
                    " \"key\": { " + 
                    " \"snapshotDate\": \"1964-12-13T01:36:15Z\" " + 
                    " }, " + 
                    " \"name\": \"r7MRRf\", " + 
                    " \"organizationId\": 132, " + 
                    " \"organizationName\": \"I_cLI\", " + 
                    " \"organizationalProjectsCount\": 343, " + 
                    " \"personalCommitsCount\": 284, " + 
                    " \"personalProjectsCount\": 741, " + 
                    " \"url\": \"vQDYnhXxBX3PYM\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 161, " + 
                    " \"key\": { " + 
                    " \"id\": 152, " + 
                    " \"snapshotDate\": \"2038-06-04T-1:50:08.108+12:04\" " + 
                    " }, " + 
                    " \"name\": \"_EM_3780_XYZ_\", " + 
                    " \"organizationId\": 536, " + 
                    " \"personalCommitsCount\": 93, " + 
                    " \"personalProjectsCount\": -32027, " + 
                    " \"snapshotDate\": \"2053-00-21T19:06:53.714Z\", " + 
                    " \"url\": \"ilWDzdDU4DS\" " + 
                    " }, " + 
                    " { " + 
                    " \"key\": { " + 
                    " \"id\": 33744, " + 
                    " \"organizationId\": 872, " + 
                    " \"snapshotDate\": \"2068-00-31T25:40:43+03:46\" " + 
                    " }, " + 
                    " \"loginId\": \"_EM_3733_XYZ_\", " + 
                    " \"name\": \"E3U5WAMu1ZMCPn\", " + 
                    " \"organizationName\": \"_EM_3734_XYZ_\", " + 
                    " \"organizationalCommitsCount\": 234, " + 
                    " \"personalCommitsCount\": 768, " + 
                    " \"personalProjectsCount\": 833 " + 
                    " } " + 
                    " ], " + 
                    " \"projects\": [], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allForksCount\": 271, " + 
                    " \"externalContributorsCount\": 480, " + 
                    " \"organizationName\": \"8CvYGyGsLz4kcH\", " + 
                    " \"publicProjectCount\": 166 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?access_token=_EM_3779_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/import
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_97_postOnImportWithQueryParamReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"contributors\": [], " + 
                    " \"projects\": [ " + 
                    " { " + 
                    " \"commitsCount\": 735, " + 
                    " \"description\": \"nzf0Fm\", " + 
                    " \"image\": \"_EM_531_XYZ_\", " + 
                    " \"lastPushed\": \"_EM_534_XYZ_\", " + 
                    " \"score\": 116 " + 
                    " }, " + 
                    " { " + 
                    " \"commitsCount\": 263, " + 
                    " \"externalContributorsCount\": 218, " + 
                    " \"forksCount\": 279, " + 
                    " \"gitHubProjectId\": 350, " + 
                    " \"image\": \"_EM_540_XYZ_\", " + 
                    " \"maintainers\": [ " + 
                    " \"5J3X0ZpIE7J8f\", " + 
                    " \"_EM_542_XYZ_\" " + 
                    " ], " + 
                    " \"name\": \"dozh0KhJ\", " + 
                    " \"primaryLanguage\": \"_EM_544_XYZ_\", " + 
                    " \"score\": 445, " + 
                    " \"snapshotDate\": \"1938-09-26T06:04:27-18:12\", " + 
                    " \"starsCount\": 317, " + 
                    " \"url\": \"_EM_546_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"statistics\": [ " + 
                    " { " + 
                    " \"allContributorsCount\": 607, " + 
                    " \"allSizeCount\": 371, " + 
                    " \"externalContributorsCount\": 629, " + 
                    " \"privateProjectCount\": 430, " + 
                    " \"programLanguagesCount\": 589, " + 
                    " \"publicProjectCount\": 352, " + 
                    " \"snapshotDate\": \"2072-09-31T19:56:25-01:44\", " + 
                    " \"teamsCount\": 329 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/import?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * (500) GET:/statistics/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_98_getOnStatisticsContributorsShowsFaults_100_101UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 261L)
                .d("ID", "946")
                .d("ORGANIZATION_ID", "-3591434842237600768")
                .d("SNAPSHOT_DATE", "\"2097-10-10 02:33:21\"")
                .d("NAME", "\"8AIToNmEnJof\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "759")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "NULL")
                .d("PERSONAL_PROJECTS_COUNT", "717")
                .d("URL", "\"dLUBX5_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "-3591434842237600768")
                .get(baseUrlOfSut + "/statistics/contributors")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/statistics/projects
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_99_getOnProjectsShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "Ht")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=DfBWsHVBtwoOGfg&" + 
                    "start_date=2060-06-20T22%3A28%3A50.035-10%3A12&" + 
                    "limit=691&" + 
                    "sortBy=imK5GbQotHHICCG_&" + 
                    "language=hMQWrOozhC")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/statistics/projects
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_100_getOnProjectsShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "_EM_1636_XYZ_")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=_EM_1635_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/statistics/projects
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_101_getOnProjectsShowsFaults_100_101UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 346L)
                .d("COMMITS_COUNT", "654")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"_EM_3825_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "960")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"SWu2a\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "670")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"5UAMXAHm_IsdVs\"")
                .d("TITLE", "\"_EM_3827_XYZ_\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "923")
            .and().insertInto("STATISTICS", 347L)
                .d("ID", "307")
                .d("SNAPSHOT_DATE", "\"1971-06-18 16:00:17\"")
                .d("ALL_CONTRIBUTORS_COUNT", "152")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"RR7nrPfm0PL9mV7\"")
                .d("PRIVATE_PROJECT_COUNT", "1")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "44")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=4Q46JBu99uYs2&" + 
                    "start_date=1970-06-27T22%3A34%3A30%2B16%3A12&" + 
                    "sortBy=c2Kc9ZF6z05pSpqY&" + 
                    "language=7hxu7r2G")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/statistics/projects
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_102_getOnProjectsShowsFaults_100_101() throws Exception {
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "limit=F5PG8ED&" + 
                    "sortBy=uHLW6O2BcjJ3FQ")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_132_statisticsProjectGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/projects"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/statistics/contributors
    * Found 2 potential faults. Type-codes: 100, 101
    */
    @Test @Timeout(60)
    public void test_103_getOnStatisticsContributorsWithQueryParamsShowsFaults_100_101UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 484L)
                .d("ID", "351")
                .d("ORGANIZATION_ID", "753")
                .d("SNAPSHOT_DATE", "\"1934-01-23 02:26:56\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"NVbl0mxXRgE\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "136")
                .d("PERSONAL_COMMITS_COUNT", "936")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "NULL")
            .and().insertInto("PROJECT", 485L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "357")
                .d("DESCRIPTION", "\"\"")
                .d("FORKS_COUNT", "353")
                .d("GIT_HUB_PROJECT_ID", "314")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"04MI\"")
                .d("ORGANIZATION_NAME", "\"753\"")
                .d("PRIMARY_LANGUAGE", "\"NbmxjTel7js\"")
                .d("SCORE", "707")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "947")
                .d("URL", "NULL")
                .d("TITLE", "\"2KIipREsBH524\"")
                .d("IMAGE", "\"WwU0KFKpAD8h\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("STATISTICS", 486L)
                .d("ID", "357")
                .d("SNAPSHOT_DATE", "\"1932-06-07 15:57:50\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10209")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "9")
                .d("ALL_STARS_COUNT", "322")
                .d("MEMBERS_COUNT", "489")
                .d("ORGANIZATION_NAME", "\"oC3W4Q2jqdka\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "369")
                .d("PUBLIC_PROJECT_COUNT", "485")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "843")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "387")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet.
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 500 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "753")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=753&" + 
                    "end_date=2080-05-22T16%3A27%3A20-17%3A19&" + 
                    "offset=148")
                .then()
                .statusCode(500)// org/zalando/catwatch/backend/web/StatisticsApi_165_statisticsContributorGet
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'exception'", containsString("java.lang.IndexOutOfBoundsException"))
                .body("'message'", containsString("toIndex = 10"))
                .body("'path'", containsString("/statistics/contributors"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics/languages
    */
    @Test @Timeout(60)
    public void test_104_getOnLanguagesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 346L)
                .d("COMMITS_COUNT", "654")
                .d("CONTRIBUTORS_COUNT", "NULL")
                .d("DESCRIPTION", "\"_EM_3825_XYZ_\"")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "960")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"SWu2a\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "NULL")
                .d("SCORE", "670")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "NULL")
                .d("URL", "\"5UAMXAHm_IsdVs\"")
                .d("TITLE", "\"_EM_3827_XYZ_\"")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "923")
            .and().insertInto("STATISTICS", 347L)
                .d("ID", "307")
                .d("SNAPSHOT_DATE", "\"1971-06-18 16:00:17\"")
                .d("ALL_CONTRIBUTORS_COUNT", "152")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"RR7nrPfm0PL9mV7\"")
                .d("PRIVATE_PROJECT_COUNT", "1")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "44")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "start_date=1970-06-27T22%3A34%3A30%2B16%3A12&" + 
                    "q=fJshF74CS2z&" + 
                    "offset=336&" + 
                    "limit=480&" + 
                    "sortBy=c2Kc9ZF6z05pSpqY&" + 
                    "language=7hxu7r2G")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics/languages
    */
    @Test @Timeout(60)
    public void test_105_getOnLanguagesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 250L)
                .d("ID", "465")
                .d("SNAPSHOT_DATE", "\"1942-12-12 21:44:12\"")
                .d("ALL_CONTRIBUTORS_COUNT", "399")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "228")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"UokAzqPazd\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "420")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "993")
            .and().insertInto("PROJECT", 252L)
                .d("GIT_HUB_PROJECT_ID", "42")
            .and().insertInto("CONTRIBUTOR", 253L)
                .d("ID", "981")
                .d("ORGANIZATION_ID", "19")
                .d("SNAPSHOT_DATE", "\"1991-03-08 14:32:46\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "818")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "936")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"_EM_3336_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=19&" + 
                    "end_date=1978-06-23T07%3A29%3A34.605Z&" + 
                    "language=I")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics/languages
    */
    @Test @Timeout(60)
    public void test_106_getOnStatisticsLanguagesWithQueryParamsReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "SPZXxieduUOdcFii")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "q=n0K45sFFU&" + 
                    "sortBy=M7CZzNHtxu5Mx&" + 
                    "language=_EM_3463_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics/languages
    */
    @Test @Timeout(60)
    public void test_107_getOnStatisticsLanguagesWithQueryParamReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("CONTRIBUTOR", 167L)
                .d("ID", "810")
                .d("ORGANIZATION_ID", "68")
                .d("SNAPSHOT_DATE", "\"2088-06-12 02:05:51\"")
                .d("NAME", "\"J_YCxOqhS\"")
                .d("ORGANIZATION_NAME", "\"_EM_2660_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "867")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "774")
                .d("PERSONAL_COMMITS_COUNT", "-261651")
                .d("PERSONAL_PROJECTS_COUNT", "4337")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?offset=uQWfOl_Kwe0XcX")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * 1 - (403) GET:/languages
    * 2 - (200) GET:/statistics/languages
    * 3 - (200) GET:/projects
    * 4 - (403) GET:/init
    * 5 - (403) GET:/delete
    * 6 - (200) GET:/fetch
    * 7 - (403) GET:/statistics/contributors
    * 8 - (403) POST:/config/scoring.project
    * 9 - (403) POST:/config/scoring.project
    * 10 - (403) GET:/statistics/projects
    * Found 8 potential faults of type-code 101
    */
    @Test @Timeout(60)
    public void test_108_getOnProjectsReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 250L)
                .d("ID", "465")
                .d("SNAPSHOT_DATE", "\"1942-12-12 21:44:12\"")
                .d("ALL_CONTRIBUTORS_COUNT", "399")
                .d("ALL_FORKS_COUNT", "NULL")
                .d("ALL_SIZE_COUNT", "228")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"UokAzqPazd\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "420")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "993")
            .and().insertInto("PROJECT", 252L)
                .d("GIT_HUB_PROJECT_ID", "42")
            .and().insertInto("CONTRIBUTOR", 253L)
                .d("ID", "981")
                .d("ORGANIZATION_ID", "19")
                .d("SNAPSHOT_DATE", "\"1991-03-08 14:32:46\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "818")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "NULL")
                .d("PERSONAL_COMMITS_COUNT", "936")
                .d("PERSONAL_PROJECTS_COUNT", "NULL")
                .d("URL", "\"_EM_3336_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=19&" + 
                    "limit=509&" + 
                    "access_token=19")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=19&" + 
                    "end_date=1978-06-23T07%3A29%3A34.605Z&" + 
                    "language=I")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/projects?" + 
                    "limit=509&" + 
                    "start_date=2031-08-16T20%3A50%3A29%2B12%3A55&" + 
                    "end_date=1978-06-23T07%3A29%3A34.605Z&" + 
                    "sortBy=v")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/init?access_token=19")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "Dj1AsfB_9Qmpy")
                .get(baseUrlOfSut + "/delete?access_token=19")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.invalidJson. Unable to parse JSON - Unrecognized token 'OK': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')  at [Source: (String)"OK"; line: 1, column: 3].
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/fetch")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("OK"));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "access_token=19&" + 
                    "offset=10&" + 
                    "limit=509&" + 
                    "sortBy=v")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" \"19\" ")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "Dj1AsfB_9Qmpy")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=2031-08-16T20%3A50%3A29%2B12%3A55&" + 
                    "end_date=1978-06-23T07%3A29%3A34.605Z&" + 
                    "access_token=19&" + 
                    "q=kQofnASPMcYA&" + 
                    "offset=10&" + 
                    "language=I")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (200) GET:/statistics/languages
    */
    @Test @Timeout(60)
    public void test_109_getOnLanguagesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 478L)
                .d("COMMITS_COUNT", "197")
                .d("CONTRIBUTORS_COUNT", "357")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "NULL")
                .d("GIT_HUB_PROJECT_ID", "-6344092901639586816")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"\"")
                .d("SCORE", "913")
                .d("SNAPSHOT_DATE", "\"1974-09-02 08:13:36\"")
                .d("STARS_COUNT", "447")
                .d("URL", "NULL")
                .d("TITLE", "NULL")
                .d("IMAGE", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "910")
            .and().insertInto("STATISTICS", 479L)
                .d("ID", "609")
                .d("SNAPSHOT_DATE", "\"2091-01-13 17:30:59\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "-1653")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "NULL")
                .d("MEMBERS_COUNT", "894")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "475")
                .d("PUBLIC_PROJECT_COUNT", "430")
                .d("TAGS_COUNT", "2030879949")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 481L)
                .d("GIT_HUB_PROJECT_ID", "806")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=_EM_4760_XYZ_&" + 
                    "q=uC&" + 
                    "limit=fe&" + 
                    "language=u_JWB5VmeL")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/v2/api-docs
    */
    @Test @Timeout(60)
    public void test_110_getOnApi_docsReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics/languages
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_111_getOnLanguagesReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 275L)
                .d("ID", "940")
                .d("SNAPSHOT_DATE", "\"1999-05-27 17:31:05\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "586")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "322")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "625")
                .d("PUBLIC_PROJECT_COUNT", "166")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("PROJECT", 277L)
                .d("GIT_HUB_PROJECT_ID", "210")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/statistics/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "start_date=_EM_3513_XYZ_&" + 
                    "end_date=_EM_3514_XYZ_&" + 
                    "q=2uF8i6ooFHom&" + 
                    "offset=EFhoXtYrZFf_Lk&" + 
                    "sortBy=_EM_3517_XYZ_&" + 
                    "language=IepWVyQdVc8lU")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string _EM_3513_XYZ_."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics/projects
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_112_getOnStatisticsProjectsWithQueryParamsEmptySortByUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 254L)
                .d("COMMITS_COUNT", "343")
                .d("CONTRIBUTORS_COUNT", "26")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "969")
                .d("GIT_HUB_PROJECT_ID", "-3604")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"XmLwT\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"_EM_3911_XYZ_\"")
                .d("SCORE", "68")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "634")
                .d("URL", "NULL")
                .d("TITLE", "\"Tw_YcxWPxcaDUFiP\"")
                .d("IMAGE", "\"q\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "2303")
            .and().insertInto("STATISTICS", 255L)
                .d("ID", "-4901418485146505216")
                .d("SNAPSHOT_DATE", "\"1969-02-24 04:22:35\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "722")
                .d("ALL_SIZE_COUNT", "100")
                .d("ALL_STARS_COUNT", "878")
                .d("MEMBERS_COUNT", "63")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "359")
                .d("PROGRAM_LANGUAGES_COUNT", "-3603")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "757")
                .d("TEAMS_COUNT", "832")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "_EM_3915_XYZ_")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=_EM_3915_XYZ_&" + 
                    "end_date=u3VLonsO02&" + 
                    "q=_EM_3913_XYZ_&" + 
                    "sortBy=&" + 
                    "language=_EM_3911_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string u3VLonsO02."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics/projects
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_113_getOnStatisticsProjectsWithQueryParamsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/statistics/projects'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=l9E9TfE72J&" + 
                    "start_date=_EM_2201_XYZ_&" + 
                    "end_date=_EM_2202_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string _EM_2201_XYZ_."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics/contributors
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_114_getOnContributorsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "1rBu19eQ9KhdyY")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=_EM_4203_XYZ_&" + 
                    "start_date=_EM_4204_XYZ_&" + 
                    "offset=oW3D6kSMc&" + 
                    "sortBy=_EM_4206_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string _EM_4204_XYZ_."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/statistics/contributors
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_115_getOnContributorsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/statistics/contributors'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=_EM_156_XYZ_&" + 
                    "end_date=_ESx0G_mB5tu")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body(containsString("Couldn't parse date string _ESx0G_mB5tu."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/config/scoring.project
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_116_postOnConfigScoring_projectWithQueryParamsEmptyAccess_token() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/config/scoring.project'.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "3WRva9bdqnDJsFW")
                .header("x-EMextraHeader123", "_EM_26_XYZ_")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "EMextraParam123=_EM_25_XYZ_&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/projects
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_117_getOnStatisticsProjectsWithQueryParamsEmptyQUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10273")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "643")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"1917-00-06T14:12:15-09:07\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8920")
                .d("TAGS_COUNT", "-131028")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "20")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-129691")
                .d("DESCRIPTION", "\"088d7bNW\"")
                .d("FORKS_COUNT", "524771")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yx9kLshx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"\"")
                .d("TITLE", "\"_EM_3796_XYZ_\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"zL_uL\"")
                .d("ORGANIZATION_NAME", "\"_EM_3797_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "312")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"Zjzo\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "V43yx9kLshx_")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "organizations=1917-00-06T14%3A12%3A15-09%3A07&" + 
                    "start_date=ALL_CONT3_4_&" + 
                    "end_date=1917-00-06T14%3A12%3A15-09%3A07&" + 
                    "access_token=1917-00-06T14%3A12%3A15-09%3A07&" + 
                    "q=")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/languages
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_118_getOnStatisticsLanguagesWithQueryParamsEmptyQUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10273")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "643")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"1917-00-06T14:12:15-09:07\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8920")
                .d("TAGS_COUNT", "-131028")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "20")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-129691")
                .d("DESCRIPTION", "\"088d7bNW\"")
                .d("FORKS_COUNT", "524771")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yx9kLshx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"\"")
                .d("TITLE", "\"_EM_3796_XYZ_\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"zL_uL\"")
                .d("ORGANIZATION_NAME", "\"_EM_3797_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "312")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"Zjzo\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "V43yx9kLshx_")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "organizations=1917-00-06T14%3A12%3A15-09%3A07&" + 
                    "end_date=1917-00-06T14%3A12%3A15-09%3A07&" + 
                    "access_token=1917-00-06T14%3A12%3A15-09%3A07&" + 
                    "q=&" + 
                    "offset=-523518&" + 
                    "limit=986&" + 
                    "language=wc3dyB")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/contributors
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_119_getOnContributorsReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10209")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "643")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"Ngtcf6TP|7hVgcv\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8920")
                .d("TAGS_COUNT", "44")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "20")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-130715")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "483")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yx9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3785_XYZ_\"")
                .d("TITLE", "\"Fpr4Yjhi_QQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"_EM_3792_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"_EM_3716_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"_EM_3717_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=Ngtcf6TP%7C7hVgcv&" + 
                    "start_date=Ngtcf6TP%7C7hVgcv&" + 
                    "end_date=Ngtcf6TP%7C7hVgcv&" + 
                    "access_token=Ngtcf6TP%7C7hVgcv&" + 
                    "q=YkUiBnJ3n2LIXb8&" + 
                    "offset=_EM_3788_XYZ_&" + 
                    "limit=986&" + 
                    "sortBy=S_8bU2B")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/contributors
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_120_getOnContributorsReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("X-Organizations", "I")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "access_token=CSt&" + 
                    "limit=y6IqsdEUDXn9s&" + 
                    "sortBy=27BGR5iOF&" + 
                    "language=gfrcCNnj_T")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/projects
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_121_getOnProjectsReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-8161")
                .d("ALL_FORKS_COUNT", "251")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"_EM_3779_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "728")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "21")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "357")
                .d("DESCRIPTION", "\"088d7bVW\"")
                .d("FORKS_COUNT", "483")
                .d("GIT_HUB_PROJECT_ID", "304")
                .d("LAST_PUSHED", "\"_EM_3713_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"V43yz9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3715_XYZ_\"")
                .d("TITLE", "\"Fpr4Ynhi_QQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"FY_9\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "136")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"_EM_3717_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "V43yz9kLspx_")
                .get(baseUrlOfSut + "/statistics/projects?" + 
                    "start_date=_EM_3779_XYZ_&" + 
                    "end_date=_EM_3779_XYZ_&" + 
                    "access_token=_EM_3779_XYZ_&" + 
                    "q=YkUiBnJ3n2LIXb8&" + 
                    "offset=870&" + 
                    "limit=986&" + 
                    "sortBy=S_8bU2B")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/languages
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_122_getOnLanguagesReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-8161")
                .d("ALL_FORKS_COUNT", "251")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"_EM_3779_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "728")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "21")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "357")
                .d("DESCRIPTION", "\"088d7bVW\"")
                .d("FORKS_COUNT", "483")
                .d("GIT_HUB_PROJECT_ID", "304")
                .d("LAST_PUSHED", "\"_EM_3713_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"V43yz9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3715_XYZ_\"")
                .d("TITLE", "\"Fpr4Ynhi_QQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"FY_9\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "136")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"_EM_3717_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .header("x-organizations", "V43yz9kLspx_")
                .get(baseUrlOfSut + "/statistics/languages?" + 
                    "start_date=_EM_3779_XYZ_&" + 
                    "end_date=_EM_3779_XYZ_&" + 
                    "access_token=_EM_3779_XYZ_&" + 
                    "q=YkUiBnJ3n2LIXb8&" + 
                    "offset=870&" + 
                    "limit=986&" + 
                    "sortBy=S_8bU2B&" + 
                    "language=wc3dyB")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/statistics/contributors
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_123_getOnContributorsReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 254L)
                .d("COMMITS_COUNT", "343")
                .d("CONTRIBUTORS_COUNT", "26")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "969")
                .d("GIT_HUB_PROJECT_ID", "-3604")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"XmLwT\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"_EM_3911_XYZ_\"")
                .d("SCORE", "68")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "634")
                .d("URL", "NULL")
                .d("TITLE", "\"Tw_YcxWPxcaDUFiP\"")
                .d("IMAGE", "\"q\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "2303")
            .and().insertInto("STATISTICS", 255L)
                .d("ID", "-4901418485146505216")
                .d("SNAPSHOT_DATE", "\"1969-02-24 04:22:35\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "722")
                .d("ALL_SIZE_COUNT", "100")
                .d("ALL_STARS_COUNT", "878")
                .d("MEMBERS_COUNT", "63")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "359")
                .d("PROGRAM_LANGUAGES_COUNT", "-3603")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "757")
                .d("TEAMS_COUNT", "832")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/statistics/contributors?" + 
                    "organizations=_EM_3915_XYZ_&" + 
                    "start_date=_EM_3912_XYZ_&" + 
                    "access_token=_EM_3915_XYZ_&" + 
                    "q=_EM_3913_XYZ_&" + 
                    "offset=Exnxhrh&" + 
                    "limit=_EM_3914_XYZ_&" + 
                    "sortBy=_EM_3907_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/config/scoring.project
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_124_postOnScoring_projectReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-8161")
                .d("ALL_FORKS_COUNT", "251")
                .d("ALL_SIZE_COUNT", "NULL")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "NULL")
                .d("ORGANIZATION_NAME", "\"_EM_3779_XYZ_\"")
                .d("PRIVATE_PROJECT_COUNT", "NULL")
                .d("PROGRAM_LANGUAGES_COUNT", "NULL")
                .d("PUBLIC_PROJECT_COUNT", "728")
                .d("TAGS_COUNT", "NULL")
                .d("TEAMS_COUNT", "NULL")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "21")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "357")
                .d("DESCRIPTION", "\"088d7bVW\"")
                .d("FORKS_COUNT", "483")
                .d("GIT_HUB_PROJECT_ID", "304")
                .d("LAST_PUSHED", "\"_EM_3713_XYZ_\"")
                .d("NAME", "NULL")
                .d("ORGANIZATION_NAME", "\"V43yz9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dyB\"")
                .d("SCORE", "25")
                .d("SNAPSHOT_DATE", "\"1974-06-01 21:11:53\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3715_XYZ_\"")
                .d("TITLE", "\"Fpr4Ynhi_QQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"FY_9\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "136")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"_EM_3717_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "_EM_3779_XYZ_")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" pNd8FC3ASCS9D ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=_EM_3779_XYZ_&" + 
                    "end_date=_EM_3779_XYZ_&" + 
                    "organizations=_EM_3779_XYZ_&" + 
                    "start_date=_EM_3779_XYZ_&" + 
                    "q=l_yZP&" + 
                    "limit=eyOVeVuRfqRUWaU")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/config/scoring.project
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_125_postOnConfigScoring_projectWithQueryParamsEmptyStart_dateUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "22560")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "579")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "1122")
                .d("ORGANIZATION_NAME", "\"U4vtqAUEqh9H0Zs0\"")
                .d("PRIVATE_PROJECT_COUNT", "740")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8904")
                .d("TAGS_COUNT", "43")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "20")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-130715")
                .d("DESCRIPTION", "\"088d7bNW\"")
                .d("FORKS_COUNT", "227")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yx9kLrpx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3dy\"")
                .d("SCORE", "0")
                .d("SNAPSHOT_DATE", "\"1974-05-09 21:43:52\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3785_XYZ_\"")
                .d("TITLE", "\"FUr0YjhiUQQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"_EM_3792_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"_EM_3716_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "\"aGVmhRjZ0olvsU\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "U4vtqAUEqh9H0Zs0")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" pNd8FC3ASCS9D ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=U4vtqAUEqh9H0Zs0&" + 
                    "start_date=&" + 
                    "q=l_yZP&" + 
                    "offset=s3&" + 
                    "limit=eyOVeVuRfqRUWaU&" + 
                    "sortBy=1jCQJWF%60rT")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/config/scoring.project
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_126_postOnScoring_projectReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10208")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "643")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"Ngtcf6TP|7hVgcv\"")
                .d("PRIVATE_PROJECT_COUNT", "772")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8920")
                .d("TAGS_COUNT", "0")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "-108")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-130715")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "227")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yz9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3`y\"")
                .d("SCORE", "0")
                .d("SNAPSHOT_DATE", "\"1974-05-09 21:43:52\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3785_XYZ_\"")
                .d("TITLE", "\"FUr0YjhiUQQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"_EM_3792_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"_EM_3716_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "Ngtcf6TP|7hVgcv")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" pNd8FC3ASCS9D ")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=Ngtcf6TP%7C7hVgcv&" + 
                    "q=l_yZP&" + 
                    "offset=_EM_4689_XYZ_&" + 
                    "limit=eyOVeVuRfqRUWaU")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/config/scoring.project
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_127_postOnConfigScoring_projectWithQueryParams() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "x")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "organizations=6tfBf&" + 
                    "start_date=WHlmxtlix7O6LwcY&" + 
                    "limit=3rJUGHfXdz")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/config/scoring.project
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_128_postOnConfigScoring_projectWithQueryParamsEmptyStart_date() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("X-Organizations", "0vz_4")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "end_date=zd1uu&" + 
                    "organizations=MCDNSR&" + 
                    "start_date=&" + 
                    "offset=MH")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body(containsString("This endpoint is deactivated."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/config/scoring.project
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_129_postOnScoring_projectReturnsMismatchResponseWithSchemaUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("PROJECT", 254L)
                .d("COMMITS_COUNT", "343")
                .d("CONTRIBUTORS_COUNT", "26")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "969")
                .d("GIT_HUB_PROJECT_ID", "-3604")
                .d("LAST_PUSHED", "NULL")
                .d("NAME", "\"XmLwT\"")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIMARY_LANGUAGE", "\"_EM_3911_XYZ_\"")
                .d("SCORE", "68")
                .d("SNAPSHOT_DATE", "NULL")
                .d("STARS_COUNT", "634")
                .d("URL", "NULL")
                .d("TITLE", "\"Tw_YcxWPxcaDUFiP\"")
                .d("IMAGE", "\"q\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "2303")
            .and().insertInto("STATISTICS", 255L)
                .d("ID", "-4901418485146505216")
                .d("SNAPSHOT_DATE", "\"1969-02-24 04:22:35\"")
                .d("ALL_CONTRIBUTORS_COUNT", "NULL")
                .d("ALL_FORKS_COUNT", "722")
                .d("ALL_SIZE_COUNT", "100")
                .d("ALL_STARS_COUNT", "878")
                .d("MEMBERS_COUNT", "63")
                .d("ORGANIZATION_NAME", "NULL")
                .d("PRIVATE_PROJECT_COUNT", "359")
                .d("PROGRAM_LANGUAGES_COUNT", "-3603")
                .d("PUBLIC_PROJECT_COUNT", "NULL")
                .d("TAGS_COUNT", "757")
                .d("TEAMS_COUNT", "832")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.unexpected. No response body is expected but one was found.
        given().accept("application/json;charset=utf-8")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/config/scoring.project?" + 
                    "access_token=_EM_3915_XYZ_&" + 
                    "end_date=bvO1TUvNijaZ3Rd")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("access_denied"))
                .body("'error_description'", containsString("Unable to obtain a new access token for resource &#39;null&#39;. The provider manager is not configured to support it."));
    }


}
