package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T17:16:58.617-04:00[America/New_York]
 * <br>
*  The generated test suite contains 130 tests
 * <br>
*  Covered targets: 2587
 * <br>
*  Used time: 1h 3m 57s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_catwatchdefault_1234_Test_69_test_69_getOnLanguagesWithQueryParamsEmptyOrganizationsAndEmptyAccess_token {
    

    
    private static final SutHandler controller = new em.external.org.zalando.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/catwatch-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList("CONTRIBUTOR","LANGUAGE_LIST","MAINTAINERS","PROJECT","STATISTICS"));
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) GET:/languages
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_69_getOnLanguagesWithQueryParamsEmptyOrganizationsAndEmptyAccess_token() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("STATISTICS", 326L)
                .d("ID", "0")
                .d("SNAPSHOT_DATE", "\"2005-05-27 22:51:57\"")
                .d("ALL_CONTRIBUTORS_COUNT", "-10208")
                .d("ALL_FORKS_COUNT", "-1669")
                .d("ALL_SIZE_COUNT", "643")
                .d("ALL_STARS_COUNT", "1")
                .d("MEMBERS_COUNT", "610")
                .d("ORGANIZATION_NAME", "\"Ngtcf6TP|7hVgcv\"")
                .d("PRIVATE_PROJECT_COUNT", "772")
                .d("PROGRAM_LANGUAGES_COUNT", "3033")
                .d("PUBLIC_PROJECT_COUNT", "8920")
                .d("TAGS_COUNT", "0")
                .d("TEAMS_COUNT", "233")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "-108")
            .and().insertInto("PROJECT", 327L)
                .d("COMMITS_COUNT", "NULL")
                .d("CONTRIBUTORS_COUNT", "-130715")
                .d("DESCRIPTION", "NULL")
                .d("FORKS_COUNT", "227")
                .d("GIT_HUB_PROJECT_ID", "432")
                .d("LAST_PUSHED", "\"_EM_3791_XYZ_\"")
                .d("NAME", "\"_EM_3714_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"V43yz9kLspx_\"")
                .d("PRIMARY_LANGUAGE", "\"wc3`y\"")
                .d("SCORE", "0")
                .d("SNAPSHOT_DATE", "\"1974-05-09 21:43:52\"")
                .d("STARS_COUNT", "826")
                .d("URL", "\"_EM_3785_XYZ_\"")
                .d("TITLE", "\"FUr0YjhiUQQE0h\"")
                .d("IMAGE", "\"aHYL`OaXi0\"")
                .d("EXTERNAL_CONTRIBUTORS_COUNT", "NULL")
            .and().insertInto("CONTRIBUTOR", 330L)
                .d("ID", "712")
                .d("ORGANIZATION_ID", "675")
                .d("SNAPSHOT_DATE", "\"1994-03-31 07:25:58\"")
                .d("NAME", "\"_EM_3792_XYZ_\"")
                .d("ORGANIZATION_NAME", "\"_EM_3716_XYZ_\"")
                .d("ORGANIZATIONAL_COMMITS_COUNT", "NULL")
                .d("ORGANIZATIONAL_PROJECTS_COUNT", "1048712")
                .d("PERSONAL_COMMITS_COUNT", "387")
                .d("PERSONAL_PROJECTS_COUNT", "241")
                .d("URL", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/languages'.
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/languages?" + 
                    "organizations=&" + 
                    "limit=986&" + 
                    "offset=770&" + 
                    "q=YkUiBnJ3n2LIXb8&" + 
                    "access_token=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'error'", containsString("invalid_request"))
                .body("'error_description'", containsString("Access Token not valid"));
    }
}
