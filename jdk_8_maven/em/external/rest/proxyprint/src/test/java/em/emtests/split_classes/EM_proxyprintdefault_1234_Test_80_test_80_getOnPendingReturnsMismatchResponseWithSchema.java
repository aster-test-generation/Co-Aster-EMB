package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-04T17:14:24.264-04:00[America/New_York]
 * <br>
*  The generated test suite contains 425 tests
 * <br>
*  Covered targets: 3113
 * <br>
*  Used time: 1h 8m 36s
 * <br>
*  Needed budget for current results: 96%
 * <br>
*  
*/

public class EM_proxyprintdefault_1234_Test_80_test_80_getOnPendingReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.io.github.proxyprint.kitchen.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/proxyprint-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (200) GET:/requests/pending
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_80_getOnPendingReturnsMismatchResponseWithSchema() throws Exception {
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.body.schema.type. [Path '/0/pShopDateRequestAccepted'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        given().accept("*/*")
                .header("Authorization", "Basic bWFzdGVyOjEyMzQ=") // admin
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/requests/pending?EMextraParam123=_EM_246_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(4))
                .body("[0].'managerName'", containsString("Jorge Caldas"))
                .body("[0].'managerUsername'", containsString("jcaldas"))
                .body("[0].'managerEmail'", containsString("proxyprint.pt.printshop@gmail.com"))
                .body("[0].'managerPassword'", containsString("1234"))
                .body("[0].'pShopAddress'", containsString("Rua das Cruzes n31"))
                .body("[0].'pShopLatitude'", numberMatches(43.221))
                .body("[0].'pShopLongitude'", numberMatches(41.121))
                .body("[0].'pShopNIF'", containsString("124555321"))
                .body("[0].'pShopName'", containsString("Printer Style"))
                .body("[0].'pShopDateRequest'", containsString("04/09/2025 05:06"))
                .body("[0].'pShopDateRequestAccepted'", nullValue())
                .body("[1].'managerName'", containsString("Martim da Silva"))
                .body("[1].'managerUsername'", containsString("msilva"))
                .body("[1].'managerEmail'", containsString("proxyprint.pt.printshop@gmail.com"))
                .body("[1].'managerPassword'", containsString("1234"))
                .body("[1].'pShopAddress'", containsString("Rua das Cruzes n32"))
                .body("[1].'pShopLatitude'", numberMatches(43.221))
                .body("[1].'pShopLongitude'", numberMatches(41.121))
                .body("[1].'pShopNIF'", containsString("124555321"))
                .body("[1].'pShopName'", containsString("Print More"))
                .body("[1].'pShopDateRequest'", containsString("04/09/2025 05:06"))
                .body("[1].'pShopDateRequestAccepted'", nullValue())
                .body("[2].'managerName'", containsString("Carlos Pinto"))
                .body("[2].'managerUsername'", containsString("cpin"))
                .body("[2].'managerEmail'", containsString("proxyprint.pt.printshop@gmail.com"))
                .body("[2].'managerPassword'", containsString("1234"))
                .body("[2].'pShopAddress'", containsString("Rua n33"))
                .body("[2].'pShopLatitude'", numberMatches(43.221))
                .body("[2].'pShopLongitude'", numberMatches(41.121))
                .body("[2].'pShopNIF'", containsString("124555321"))
                .body("[2].'pShopName'", containsString("Papelaria Pinto"))
                .body("[2].'pShopDateRequest'", containsString("04/09/2025 05:06"))
                .body("[2].'pShopDateRequestAccepted'", nullValue())
                ; // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
    }
}
