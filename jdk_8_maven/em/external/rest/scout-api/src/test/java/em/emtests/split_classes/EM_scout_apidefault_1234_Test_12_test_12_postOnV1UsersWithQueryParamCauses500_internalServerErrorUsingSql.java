package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-04T17:09:30.705-04:00[America/New_York]
 * <br>
*  The generated test suite contains 311 tests
 * <br>
*  Covered targets: 2708
 * <br>
*  Used time: 1h 3m 13s
 * <br>
*  Needed budget for current results: 97%
 * <br>
*  
*/

public class EM_scout_apidefault_1234_Test_12_test_12_postOnV1UsersWithQueryParamCauses500_internalServerErrorUsingSql {
    

    
    private static final SutHandler controller = new em.external.se.devscout.scoutapi.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/scout-api-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList("ACTIVITY","ACTIVITY_DERIVED","ACTIVITY_PROPERTIES","ACTIVITY_PROPERTIES_MEDIA_FILE","ACTIVITY_PROPERTIES_TAG","ACTIVITY_RATING","ACTIVITY_RELATION","MEDIA_FILE","MEDIA_FILE_KEYWORDS","SYSTEM_MESSAGE","TAG","TAG_DERIVED","USERS","USER_IDENTITY","activity","activity_properties","activity_properties_media_file","activity_properties_tag","activity_rating","activity_relation","media_file","system_message","tag","user_identity","users"));
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (500) POST:/api/v1/users
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_12_postOnV1UsersWithQueryParamCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 796L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"rGFWQ5llXsmrO\"")
            .and().insertInto("USER_IDENTITY", 795L)
                .d("DATE_CREATED", "\"2060-06-17 11:27:56\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"_EM_14229_XYZ_\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 846L)
                .d("AUTHORIZATION_LEVEL", "146")
                .d("NAME", "\"3cbowpj5U_\"")
            .and().insertInto("ACTIVITY", 845L)
            .and().insertInto("ACTIVITY", 844L)
            .and().insertInto("ACTIVITY_PROPERTIES", 843L)
                .d("AGE_MAX", "-855")
                .d("AGE_MIN", "-66214")
                .d("DATE_CREATED", "\"2010-03-16 11:29:00\"")
                .d("DATE_PUBLISHED", "\"1932-02-09 17:39:19\"")
                .d("DATE_UPDATED", "\"2093-09-01 11:10:14\"")
                .d("DESCRIPTION_INTRODUCTION", "\"t_FJHcTr9m5D\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"xUycgjBZ_e\"")
                .d("DESCRIPTION_NOTES", "\"_EM_14218_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"lv\"")
                .d("DESCRIPTION_SAFETY", "\"\"")
                .d("FEATURED", "true")
                .d("NAME", "\"e4WECZ\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "710")
                .d("SOURCE", "\"fvgkRLGBi4\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "249")
                .r("ACTIVITY_ID", 845L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 794L)
                .d("AUTHOR", "\"_EM_13463_XYZ_\"")
                .d("CAPTURE_DATE", "\"2098-07-22 08:38:30\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_14219_XYZ_\"")
                .d("NAME", "\"CXr0ZaA\"")
                .d("URI", "\"NuKLo3J2IuaWd\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/UserResource_62_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 82, " + 
                    " \"name\": \"_EM_14228_XYZ_\", " + 
                    " \"email_address\": \"giBDY9bIfdSyA\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 8591496358599480872 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users?attrs=mt5OxB6I8mUPw")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/UserResource_62_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
}
