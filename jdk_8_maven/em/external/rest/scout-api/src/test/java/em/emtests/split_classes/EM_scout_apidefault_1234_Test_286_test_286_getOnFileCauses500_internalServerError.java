package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-04T17:09:30.705-04:00[America/New_York]
 * <br>
*  The generated test suite contains 311 tests
 * <br>
*  Covered targets: 2708
 * <br>
*  Used time: 1h 3m 13s
 * <br>
*  Needed budget for current results: 97%
 * <br>
*  
*/

public class EM_scout_apidefault_1234_Test_286_test_286_getOnFileCauses500_internalServerError {
    

    
    private static final SutHandler controller = new em.external.se.devscout.scoutapi.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/scout-api-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList("ACTIVITY","ACTIVITY_DERIVED","ACTIVITY_PROPERTIES","ACTIVITY_PROPERTIES_MEDIA_FILE","ACTIVITY_PROPERTIES_TAG","ACTIVITY_RATING","ACTIVITY_RELATION","MEDIA_FILE","MEDIA_FILE_KEYWORDS","SYSTEM_MESSAGE","TAG","TAG_DERIVED","USERS","USER_IDENTITY","activity","activity_properties","activity_properties_media_file","activity_properties_tag","activity_rating","activity_relation","media_file","system_message","tag","user_identity","users"));
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * 1 - (200) POST:/api/v1/media_files
    * 2 - (200) PUT:/api/v1/media_files/{id}
    * 3 - (500) GET:/api/v1/media_files/{id}/file
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_286_getOnFileCauses500_internalServerError() throws Exception {
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_9479_XYZ_\", " + 
                    " \"uri\": \"\", " + 
                    " \"name\": \"nPLDhe\", " + 
                    " \"capture_date\": \"1984-13-04T10:33:19.902Z\", " + 
                    " \"author\": \"as_AJXjQCrWTJkj\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("_EM_9479_XYZ_"))
                .body("'uri'", containsString(""))
                .body("'name'", containsString("nPLDhe"))
                .body("'capture_date'", containsString("1985-01-04T10:33:19.902Z"))
                .body("'author'", containsString("as_AJXjQCrWTJkj"));
        String 
        location_media_files__2 = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"_EM_9480_XYZ_\", " + 
                    " \"author\": \"_EM_9482_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_media_files__2, baseUrlOfSut + "/api/v1/media_files/11"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("_EM_9480_XYZ_"))
                .body("'capture_date'", containsString("1985-01-04T10:33:19.902Z"))
                .body("'author'", containsString("as_AJXjQCrWTJkj"));
        String location_id__47 = res_1.extract().header("location");
        assertTrue(isValidURIorEmpty(location_id__47));
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_id__47, baseUrlOfSut + "/api/v1/media_files/11/file"))
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
}
