package em.emtests.single_class;

/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-04T17:09:30.705-04:00[America/New_York]
 * <br>
*  The generated test suite contains 311 tests
 * <br>
*  Covered targets: 2708
 * <br>
*  Used time: 1h 3m 13s
 * <br>
*  Needed budget for current results: 97%
 * <br>
*  
*/
public class EM_scout_apidefault_1234_Test {

    
    private static final SutHandler controller = new em.external.se.devscout.scoutapi.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/scout-api-sut.jar");
    private static String baseUrlOfSut;
    
    
    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList("ACTIVITY","ACTIVITY_DERIVED","ACTIVITY_PROPERTIES","ACTIVITY_PROPERTIES_MEDIA_FILE","ACTIVITY_PROPERTIES_TAG","ACTIVITY_RATING","ACTIVITY_RELATION","MEDIA_FILE","MEDIA_FILE_KEYWORDS","SYSTEM_MESSAGE","TAG","TAG_DERIVED","USERS","USER_IDENTITY","activity","activity_properties","activity_properties_media_file","activity_properties_tag","activity_rating","activity_relation","media_file","system_message","tag","user_identity","users"));
        controller.resetStateOfSUT();
    }
    
    
    
    
    /**
    * Calls:
    * (200) GET:/api/swagger.json
    */
    @Test @Timeout(60)
    public void test_0_getOnSwagger_jsonReturnsObject() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/api/swagger.json")
                .then()
                .statusCode(200);
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_1_getOnV1ActivitiesWithQueryParamsFeaturedAndMy_favourites() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "name=_EM_70_XYZ_&" + 
                    "text=_EM_71_XYZ_&" + 
                    "featured=true&" + 
                    "age_2=m_w&" + 
                    "participants=_EM_73_XYZ_&" + 
                    "id=_EM_75_XYZ_&" + 
                    "my_favourites=true&" + 
                    "ratings_count_min=386&" + 
                    "ratings_average_min=0.9251268162273878&" + 
                    "favourites=201")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_2_getOnV1ActivitiesWithQueryParamsNegativeRatings_count_min() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=_EM_5359_XYZ_&" + 
                    "text=y6g8gyxxnAZ7GpXO&" + 
                    "categories=EFRwHZQVmx&" + 
                    "age_1=_EM_5361_XYZ_&" + 
                    "age_2=0YJEQhwZ&" + 
                    "participants=yy&" + 
                    "my_favourites=false&" + 
                    "ratings_count_min=-8301772800488542151&" + 
                    "ratings_average_min=0.3156274677852873")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v2/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_3_getOnV2ActivitiesWithQueryParamsFeaturedAndMy_favourites() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/ActivityResourceV2_77_all.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=dYZ&" + 
                    "featured=true&" + 
                    "ages=_EM_7323_XYZ_&" + 
                    "durations=_kA&" + 
                    "my_favourites=true&" + 
                    "ratings_count_min=76&" + 
                    "ratings_average_min=0.6883892968186883&" + 
                    "random=675&" + 
                    "favourites=687")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v2/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_4_getOnV2ActivitiesWithQueryParamsEmptyDurationsUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 704L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/ActivityResourceV2_77_all.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=TUWRZJ&" + 
                    "featured=false&" + 
                    "categories=R7e4R8DoVHo28i&" + 
                    "ages=k&" + 
                    "durations=&" + 
                    "id=nBg78A&" + 
                    "my_favourites=false&" + 
                    "ratings_average_min=0.7739577581334295&" + 
                    "random=977&" + 
                    "favourites=828&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v2/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_5_getOnV2ActivitiesWithQueryParamsMy_favouritesNegativeRatings_count_min() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/ActivityResourceV2_77_all.
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1146_XYZ_")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=Ntd&" + 
                    "ages=lQ0FKRCp54ffx&" + 
                    "id=Ihu53Vz&" + 
                    "my_favourites=true&" + 
                    "ratings_count_min=-8132151938771129026&" + 
                    "random=503152663&" + 
                    "EMextraParam123=_EM_1145_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/ActivityResourceV2_77_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_6_getOnV1ActivitiesWithQueryParamsMy_favourites() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "text=_EM_6744_XYZ_&" + 
                    "featured=false&" + 
                    "categories=DHP&" + 
                    "participants=iZhJQoD&" + 
                    "time_2=PWNDx&" + 
                    "my_favourites=true&" + 
                    "ratings_count_min=724&" + 
                    "ratings_average_min=0.30381728283452203&" + 
                    "random=993&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_7_getOnV1ActivitiesWithQueryParamsMy_favouritesNegativeFavouritesUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 1460L)
                .d("AUTHORIZATION_LEVEL", "219")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"map3c\"")
            .and().insertInto("MEDIA_FILE", 1461L)
                .d("AUTHOR", "\"QV1_@\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"R1wqwJHcEez\"")
                .d("NAME", "NULL")
                .d("URI", "\"PEjSnFl5iLLjo\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "name=aHKFLOcp&" + 
                    "featured=false&" + 
                    "age_1=eLnf&" + 
                    "age_2=HFWgv8hqI6QOjEl&" + 
                    "time_1=6VyXDDk3&" + 
                    "time_2=_EM_18623_XYZ_&" + 
                    "my_favourites=true&" + 
                    "random=446&" + 
                    "favourites=-1738875960")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/v1/ActivityResourceV1_75_all
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("API currently does not support filtering on your own favourites."));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_8_postOnActivitiesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 524L)
                .d("AUTHOR", "\"yScO65e5J2uF_dQr\"")
                .d("CAPTURE_DATE", "\"2000-06-24 09:29:11\"")
                .d("COPY_RIGHT", "\"0bNTrXIarP\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_10661_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 526L)
                .d("URI", "\"_EM_10654_XYZ_\"")
            .and().insertInto("TAG", 525L)
                .d("GRP", "\"STXU0oIS\"")
                .d("NAME", "\"p9IW555jxM2DD\"")
                .r("MEDIA_FILE_ID", 524L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"8EDBUUU]nU3JU\", " + 
                    " \"description_introduction\": \"LalhzR1f\", " + 
                    " \"description_prepare\": \"_EM_11562_XYZ_\", " + 
                    " \"description_main\": \"nKMid\", " + 
                    " \"description_safety\": \"8EDBUUU]nU3JU\", " + 
                    " \"description_notes\": \"8EDBUUU]nU3JU\", " + 
                    " \"age_min\": -1073740750, " + 
                    " \"participants_min\": 262842, " + 
                    " \"participants_max\": 247, " + 
                    " \"time_min\": -1073740750, " + 
                    " \"time_max\": -2130706225, " + 
                    " \"source\": \"JwkM4VDAEtmFok\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 896, " + 
                    " \"mime_type\": \"hsMKdZ\", " + 
                    " \"uri\": \"_EM_7458_XYZ_\", " + 
                    " \"copy_right\": \"N0LiX\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 581, " + 
                    " \"ratings_count\": 337, " + 
                    " \"ratings_sum\": 1114229441, " + 
                    " \"favourites_count\": -4193964, " + 
                    " \"related\": [ " + 
                    " -31875, " + 
                    " 8768998325132518497 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/media_files
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_9_postOnMedia_filesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 848L)
                .d("AUTHOR", "\"F4ENhh\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_14248_XYZ_\"")
                .d("NAME", "\"5jdUWUXUU\"")
                .d("URI", "\"u\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_135_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 548, " + 
                    " \"mime_type\": \"1Wzhv\", " + 
                    " \"uri\": \"data:text/plain;base64,QU01YkI\u003d\", " + 
                    " \"name\": \"Nv9\", " + 
                    " \"capture_date\": \"1988-11-21T21:49:30.048Z\", " + 
                    " \"copy_right\": \"xWaGHb_kiL9NP\", " + 
                    " \"author\": \"as_AJXjQCrWTJkj\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_10_postOnActivitiesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1782L)
                .d("URI", "\"5XdT1qdgQe\"")
            .and().insertInto("TAG", 1781L)
                .d("GRP", "\"L\"")
                .d("NAME", "\"uQtSjhlsThuez\"")
            .and().insertInto("ACTIVITY", 1779L)
            .and().insertInto("ACTIVITY", 1778L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1777L)
                .r("ACTIVITY_ID", 1779L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 1776L)
                .r("ACTIVITY_PROPERTIES_ID", 1777L)
                .r("TAG_ID", 1781L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_163_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_published\": \"2079-09-27T05:03:14.683Z\", " + 
                    " \"description_prepare\": \"gO2KFZ5Iotzw6yC\", " + 
                    " \"description_main\": \"DqiJ_\", " + 
                    " \"description_safety\": \"DqiJ_\", " + 
                    " \"description_notes\": \"DqiJ_\", " + 
                    " \"age_min\": -65524, " + 
                    " \"age_max\": -65524, " + 
                    " \"time_min\": -65524, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"6_rIF5z4m\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 241, " + 
                    " \"group\": \"gi\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 906, " + 
                    " \"mime_type\": \"_EM_10696_XYZ_\", " + 
                    " \"capture_date\": \"2088-03-28T15:60:39.759Z\", " + 
                    " \"copy_right\": \"J9Yd4K\", " + 
                    " \"author\": \"_EM_10697_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": -1387514955 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 10, " + 
                    " \"group\": \"f4vOvGC\", " + 
                    " \"name\": \"_EM_10699_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": -8328605988489096563, " + 
                    " \"uri\": \"_EM_10701_XYZ_\", " + 
                    " \"name\": \"_EM_10702_XYZ_\", " + 
                    " \"capture_date\": \"2010-03-26T16:42:11.311Z\", " + 
                    " \"copy_right\": \"zlCwnwEpFD236\", " + 
                    " \"author\": \"_EM_19653_XYZ_\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 3556234913097302046, " + 
                    " \"group\": \"x2Vc6oD7waczGsF\", " + 
                    " \"name\": \"_EM_10703_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 257, " + 
                    " \"activities_count\": -1752898530 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 815, " + 
                    " \"name\": \"biw1XzjW9tnh\", " + 
                    " \"email_address\": \"_EM_10713_XYZ_\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": -1460899011676627364, " + 
                    " \"favourites_count\": 879 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_163_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v2/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_11_postOnActivitiesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1173L)
                .d("URI", "\"o\"")
            .and().insertInto("TAG", 1172L)
                .d("GRP", "\"_EM_17304_XYZ_\"")
                .d("NAME", "\"lT9RR8Z0VJ72gHP\"")
                .r("MEDIA_FILE_ID", 1173L)
            .and().insertInto("USERS", 2161L)
                .d("AUTHORIZATION_LEVEL", "476")
                .d("DATE_CREATED", "\"2077-05-16 14:53:13\"")
                .d("EMAIL_ADDRESS", "\"QVS077ApLSCm\"")
                .d("NAME", "\"D5g7f438b1xfMjrz\"")
            .and().insertInto("MEDIA_FILE", 3138L)
                .d("URI", "\"YEuFxYYj9Ycs\"")
            .and().insertInto("USERS", 3137L)
                .d("AUTHORIZATION_LEVEL", "812")
                .d("NAME", "\"KJ\"")
            .and().insertInto("ACTIVITY", 3136L)
            .and().insertInto("ACTIVITY", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3134L)
                .r("ACTIVITY_ID", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3133L)
                .r("ACTIVITY_PROPERTIES_ID", 3134L)
                .r("MEDIA_FILE_ID", 1173L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 3142L)
                .d("AUTHORIZATION_LEVEL", "120")
                .d("NAME", "\"oNodbq\"")
            .and().insertInto("ACTIVITY", 3141L)
            .and().insertInto("ACTIVITY", 3140L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3139L)
                .d("AGE_MAX", "-842")
                .d("AGE_MIN", "-406")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1993-03-26 07:19:10\"")
                .d("DESCRIPTION_INTRODUCTION", "\"mLvuis994N0\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"cJhds73\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"b4JeC23\"")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "216")
                .d("SOURCE", "\"WWEnenh6\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 3136L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 3144L)
            .and().insertInto("ACTIVITY_DERIVED", 3143L)
                .r("ACTIVITY_ID", 3144L)
                .d("FAVOURITES_COUNT", "592")
                .d("RATINGS_AVG", "0.566931956273282")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "454")
            .and().insertInto("MEDIA_FILE", 3626L)
                .d("URI", "\"T2of_O8gvzIHQD\"")
            .and().insertInto("TAG", 3625L)
                .d("GRP", "\"\"")
                .d("NAME", "\"cU\"")
            .and().insertInto("TAG_DERIVED", 3624L)
                .r("TAG_ID", 3625L)
                .d("ACTIVITIES_COUNT", "59")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 819, " + 
                    " \"name\": \"E62tTm\", " + 
                    " \"description_main\": \"3OTlvY1l7GG1d4k3\", " + 
                    " \"description_safety\": \"m02HlYzv4BDyG\", " + 
                    " \"description_notes\": \"X\", " + 
                    " \"age_max\": -2147482740, " + 
                    " \"participants_min\": 919, " + 
                    " \"time_min\": 605871523, " + 
                    " \"time_max\": 975, " + 
                    " \"featured\": true, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"uri\": \"63MnFVnM1r5ORh\", " + 
                    " \"name\": \"HCzq7\", " + 
                    " \"copy_right\": \"xMvpvUh\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/users
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_12_postOnV1UsersWithQueryParamCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 796L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"rGFWQ5llXsmrO\"")
            .and().insertInto("USER_IDENTITY", 795L)
                .d("DATE_CREATED", "\"2060-06-17 11:27:56\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"_EM_14229_XYZ_\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 846L)
                .d("AUTHORIZATION_LEVEL", "146")
                .d("NAME", "\"3cbowpj5U_\"")
            .and().insertInto("ACTIVITY", 845L)
            .and().insertInto("ACTIVITY", 844L)
            .and().insertInto("ACTIVITY_PROPERTIES", 843L)
                .d("AGE_MAX", "-855")
                .d("AGE_MIN", "-66214")
                .d("DATE_CREATED", "\"2010-03-16 11:29:00\"")
                .d("DATE_PUBLISHED", "\"1932-02-09 17:39:19\"")
                .d("DATE_UPDATED", "\"2093-09-01 11:10:14\"")
                .d("DESCRIPTION_INTRODUCTION", "\"t_FJHcTr9m5D\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"xUycgjBZ_e\"")
                .d("DESCRIPTION_NOTES", "\"_EM_14218_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"lv\"")
                .d("DESCRIPTION_SAFETY", "\"\"")
                .d("FEATURED", "true")
                .d("NAME", "\"e4WECZ\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "710")
                .d("SOURCE", "\"fvgkRLGBi4\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "249")
                .r("ACTIVITY_ID", 845L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 794L)
                .d("AUTHOR", "\"_EM_13463_XYZ_\"")
                .d("CAPTURE_DATE", "\"2098-07-22 08:38:30\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_14219_XYZ_\"")
                .d("NAME", "\"CXr0ZaA\"")
                .d("URI", "\"NuKLo3J2IuaWd\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/UserResource_62_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 82, " + 
                    " \"name\": \"_EM_14228_XYZ_\", " + 
                    " \"email_address\": \"giBDY9bIfdSyA\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 8591496358599480872 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users?attrs=mt5OxB6I8mUPw")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/UserResource_62_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_13_postOnActivitiesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 2156L)
                .d("URI", "\"ekkotM\"")
            .and().insertInto("TAG", 2155L)
                .d("GRP", "\"gLlvQARGeAIFAFT\"")
                .d("NAME", "\"GrPLftFZsbVKeWW\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_211_lambda$initMediaFiles$8.
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 784, " + 
                    " \"date_published\": \"1914-05-19T16:14:00.314Z\", " + 
                    " \"description_material\": \"A_\", " + 
                    " \"description_introduction\": \"XWWTb\", " + 
                    " \"description_prepare\": \"FJ_i3z\", " + 
                    " \"age_min\": -2147482654, " + 
                    " \"age_max\": -2147483291, " + 
                    " \"time_min\": 58, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"copy_right\": \"wAgxL\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 752, " + 
                    " \"mime_type\": \"93_f_X53ve8mB\", " + 
                    " \"uri\": \"Fryh_UxGjg4AMeJo\", " + 
                    " \"copy_right\": \"qhUsGz\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_211_lambda$initMediaFiles$8
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/favourites
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_14_postOnFavouritesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 473L)
            .and().insertInto("USERS", 476L)
                .d("AUTHORIZATION_LEVEL", "-451554227")
                .d("NAME", "\"M0i\"")
            .and().insertInto("ACTIVITY", 475L)
            .and().insertInto("ACTIVITY_RATING", 474L)
                .r("ACTIVITY_ID", 473L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "390")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/v1/FavouritesResourceV1_58_lambda$put$3.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/v1/FavouritesResourceV1_58_lambda$put$3
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_15_postOnV1ActivitiesWithQueryParamsEmptyRatings_count_minUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3249L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2002-04-02 09:11:07\"")
                .d("COPY_RIGHT", "\"i1fAIACAo\"")
                .d("MIME_TYPE", "\"ziM1TtXW1LOj\"")
                .d("NAME", "NULL")
                .d("URI", "\"i\"")
            .and().insertInto("MEDIA_FILE", 3251L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 3250L)
                .d("GRP", "\"H3jn1wM\"")
                .d("NAME", "\"AkeJXvcP9pjm8VG4\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("ACTIVITY", 3254L)
            .and().insertInto("MEDIA_FILE", 822L)
                .d("AUTHOR", "\"nR\"")
                .d("CAPTURE_DATE", "\"2100-01-11 15:17:12\"")
                .d("COPY_RIGHT", "\"_EM_13628_XYZ_\"")
                .d("MIME_TYPE", "\"seJq2hBPtv\"")
                .d("NAME", "\"3nM1tQgGCzd\"")
                .d("URI", "\"NuKLo3J2IuaWd\"")
            .and().insertInto("USERS", 823L)
                .d("AUTHORIZATION_LEVEL", "609")
                .d("DATE_CREATED", "\"1927-05-10 14:35:01\"")
                .d("EMAIL_ADDRESS", "\"L9FZL5_qd3jiJ\"")
                .d("NAME", "\"wCGd29n\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_59_find.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 699, " + 
                    " \"name\": \"wCGd29n\", " + 
                    " \"date_published\": \"1967-11-01T21:26:40.759Z\", " + 
                    " \"description_material\": \"ECkMjL30Qexv\", " + 
                    " \"description_safety\": \"ECkMjL30Qexv\", " + 
                    " \"time_min\": -2147482955, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 884, " + 
                    " \"group\": \"_ItPUP6jOrM\", " + 
                    " \"name\": \"INTEGRATION TEST ADMINISTRATOR\" " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"hrhNGVUr\", " + 
                    " \"name\": \"\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 275, " + 
                    " \"mime_type\": \"jE5\", " + 
                    " \"uri\": \"\", " + 
                    " \"name\": \"_EM_13634_XYZ_\", " + 
                    " \"copy_right\": \"_EM_13635_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 301 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "ratings_count_min=&" + 
                    "random=4QpgZnWy&" + 
                    "time_1=EwPSMPlnsGoT&" + 
                    "favourites=&" + 
                    "ratings_average_min=ZLNA&" + 
                    "age_2=ZxUjlC1VygoW&" + 
                    "age_1=v3Q_2r5kGK9FNi&" + 
                    "name=LM8HcT2&" + 
                    "categories=sufATGufp&" + 
                    "id=ib4cHeY&" + 
                    "time_2=e8t3E9rLzqrBJQdY&" + 
                    "participants=1Dia")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_16_postOnV1ActivitiesWithQueryParamsEmptyCategoriesUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1679L)
                .d("AUTHOR", "\"CRG_fKQFJF\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"1HXTsGS6c_\"")
                .d("NAME", "\"k0G\"")
                .d("URI", "\"eTkb\"")
            .and().insertInto("ACTIVITY", 1680L)
            .and().insertInto("USERS", 1683L)
                .d("AUTHORIZATION_LEVEL", "364")
                .d("NAME", "\"J\"")
            .and().insertInto("ACTIVITY", 1682L)
            .and().insertInto("ACTIVITY_RATING", 1681L)
                .r("ACTIVITY_ID", 1682L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "148")
            .and().insertInto("ACTIVITY", 1370L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/Activity_171_addAndPublish.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "age_2=EzfQtI&" + 
                    "ratings_average_min=kgzenyt_0&" + 
                    "age_1=3PIoPSuSzkUOrObE&" + 
                    "text=TJ8XvtazdUKOuJ&" + 
                    "categories=&" + 
                    "id=lYmZ&" + 
                    "attrs=NY8KEPxdP")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_17_postOnV1ActivitiesWithQueryParamsEmptyFavourites() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/Activity_171_addAndPublish.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "ratings_count_min=gBqtseuPsqU&" + 
                    "random=_EM_18208_XYZ_&" + 
                    "time_1=Pn9jNqwe8XN8ik1&" + 
                    "favourites=&" + 
                    "ratings_average_min=aIv&" + 
                    "age_2=_EM_18209_XYZ_&" + 
                    "id=DVQ626KGqHpVfnyn")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/categories
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_18_postOnCategoriesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 487L)
                .d("AUTHOR", "\"Y3CQX\"")
                .d("CAPTURE_DATE", "\"2024-06-14 09:02:09\"")
                .d("COPY_RIGHT", "\"TLUYFZ\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"EP3\"")
                .d("URI", "\"_EM_20350_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 493L)
                .d("URI", "\"yY5iUR4H7\"")
            .and().insertInto("USERS", 492L)
                .d("AUTHORIZATION_LEVEL", "18")
                .d("NAME", "\"DUL7B\"")
            .and().insertInto("ACTIVITY", 491L)
            .and().insertInto("ACTIVITY", 490L)
            .and().insertInto("ACTIVITY_PROPERTIES", 489L)
                .r("ACTIVITY_ID", 491L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 488L)
                .r("ACTIVITY_PROPERTIES_ID", 489L)
                .r("MEDIA_FILE_ID", 493L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 1410L)
                .d("URI", "\"zSKWzbQ77BULwD\"")
            .and().insertInto("TAG", 1409L)
                .d("GRP", "\"u\"")
                .d("NAME", "\"kj\"")
            .and().insertInto("TAG_DERIVED", 1408L)
                .r("TAG_ID", 1409L)
                .d("ACTIVITIES_COUNT", "386")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_64_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_20349_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"qiBMJTfL\", " + 
                    " \"name\": \"RXu3v\" " + 
                    " }, " + 
                    " \"activities_count\": 1384501133 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v2/tags
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_19_postOnTagsCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1044L)
            .and().insertInto("USERS", 1116L)
                .d("AUTHORIZATION_LEVEL", "973")
                .d("NAME", "\"wSL3JsU\"")
            .and().insertInto("ACTIVITY", 1115L)
            .and().insertInto("ACTIVITY", 1114L)
            .and().insertInto("ACTIVITY_RELATION", 1113L)
                .r("ACTIVITY_1_ID", 1115L)
                .r("ACTIVITY_2_ID", 1114L)
                .d("OWNER_ID", "3")
            .and().insertInto("MEDIA_FILE", 3289L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"ERu9lfd\"")
                .d("NAME", "\"Tts3dCOo4h\"")
                .d("URI", "\"dyO4Fkv0w\"")
            .and().insertInto("MEDIA_FILE", 3306L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 3305L)
                .d("GRP", "\"ysKHu\"")
                .d("NAME", "\"r76cNn4tBT\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 3309L)
                .d("URI", "\"HLdzV6qyu\"")
            .and().insertInto("TAG", 3308L)
                .d("GRP", "\"4vkOkJ2\"")
                .d("NAME", "\"jrboI99F1coqMNF\"")
            .and().insertInto("TAG_DERIVED", 3307L)
                .r("TAG_ID", 3308L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("USERS", 3422L)
                .d("AUTHORIZATION_LEVEL", "524")
                .d("NAME", "\"PaeLe_\"")
            .and().insertInto("ACTIVITY", 3421L)
            .and().insertInto("ACTIVITY", 3420L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3419L)
                .d("AGE_MAX", "86")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"1951-08-09 10:15:02\"")
                .d("DATE_PUBLISHED", "\"2080-10-17 02:52:31\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "687")
                .d("SOURCE", "\"dMPmUItVqg79BFR\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "858")
                .r("ACTIVITY_ID", 3420L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/TagResource_61_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 63, " + 
                    " \"name\": \"Xshmwn3\", " + 
                    " \"activities_count\": 453 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/TagResource_61_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_20_postOnActivitiesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 524L)
                .d("AUTHOR", "\"yScO65e5J2uF_dQr\"")
                .d("CAPTURE_DATE", "\"2000-06-24 09:29:11\"")
                .d("COPY_RIGHT", "\"0bNTrXIarP\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_10661_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 526L)
                .d("URI", "\"_EM_10654_XYZ_\"")
            .and().insertInto("TAG", 525L)
                .d("GRP", "\"STXU0oIS\"")
                .d("NAME", "\"p9IW555jxM2DD\"")
                .r("MEDIA_FILE_ID", 524L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_59_find.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"9n\", " + 
                    " \"date_published\": \"2085-05-30T24:58:41.808Z\", " + 
                    " \"date_updated\": \"1916-06-06T14:12:24.037Z\", " + 
                    " \"description_introduction\": \"LalhzR1f\", " + 
                    " \"description_prepare\": \"_EM_11562_XYZ_\", " + 
                    " \"age_max\": -2130706225, " + 
                    " \"participants_min\": 262842, " + 
                    " \"participants_max\": 437, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 950, " + 
                    " \"group\": \"_EM_7462_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 486, " + 
                    " \"mime_type\": \"KTXehPtMDiU4b9Bj\", " + 
                    " \"uri\": \"UiB86qT\", " + 
                    " \"capture_date\": \"2098-07-05T-1:27:12.009Z\", " + 
                    " \"author\": \"BTqohmdbHi9kX\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"3orhaVIXjEpSI0YX\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 543, " + 
                    " \"mime_type\": \"\", " + 
                    " \"uri\": \"2wkJneTw_Pnf\", " + 
                    " \"name\": \"INTEGRATION TEST MODERATOR\", " + 
                    " \"copy_right\": \"_EM_10653_XYZ_\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"activities_count\": 838 " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 47563312, " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": -466778133 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_21_postOnActivitiesCauses500_internalServerErrorUsingSql() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 260, " + 
                    " \"date_published\": \"2009-02-22T24:03:36.463Z\", " + 
                    " \"description_prepare\": \"Avtca_x6\", " + 
                    " \"description_main\": \"M6b5oRzA\", " + 
                    " \"age_min\": -2147483120, " + 
                    " \"participants_min\": 659, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"6XED4caXA7kWW\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 970, " + 
                    " \"mime_type\": \"tVZAS\", " + 
                    " \"copy_right\": \"ibT\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 72, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 516, " + 
                    " \"favourites_count\": 774, " + 
                    " \"ratings_average\": 0.8928136797946065, " + 
                    " \"related\": [ " + 
                    " 349, " + 
                    " 30, " + 
                    " 445, " + 
                    " 554, " + 
                    " -1738798689282338499 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityPropertiesMediaFile_72_hashCode
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_22_postOnActivitiesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_59_find.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_published\": \"2085-05-30T24:58:41.808Z\", " + 
                    " \"description_introduction\": \"LalhzR0f\", " + 
                    " \"description_prepare\": \"9ZtwJPmoJ1UB6\", " + 
                    " \"participants_min\": 698, " + 
                    " \"participants_max\": 437, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 950, " + 
                    " \"group\": \"_EM_7462_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 486, " + 
                    " \"mime_type\": \"KTXehPtMDiU4b9Bj\", " + 
                    " \"uri\": \"UiB86qT\", " + 
                    " \"capture_date\": \"2098-07-05T-1:27:12.009Z\", " + 
                    " \"author\": \"BTqohmdbHi9kX\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 34, " + 
                    " \"name\": \"_EM_7464_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 543, " + 
                    " \"mime_type\": \"\", " + 
                    " \"uri\": \"2wkJneTw_Pnf\", " + 
                    " \"name\": \"INTEGRATION TEST MODERATOR\", " + 
                    " \"copy_right\": \"_EM_7465_XYZ_\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"activities_count\": 838 " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 47563312, " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": -466778133 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/system_messages
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_23_postOnV1System_messagesWithQueryParamCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/SystemMessageResource_78_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 679, " + 
                    " \"valid_to\": \"1923-01-29T13:-1:43.641Z\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/SystemMessageResource_78_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_24_postOnV1ActivitiesWithQueryParamCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/v1/ActivityResourceV1_113_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_created\": \"1980-13-16T25:44:38.421Z\", " + 
                    " \"date_updated\": \"1990-10-24T05:39:52.957Z\", " + 
                    " \"description_prepare\": \"_EM_4080_XYZ_\", " + 
                    " \"description_main\": \"_EM_4081_XYZ_\", " + 
                    " \"description_safety\": \"_EM_4082_XYZ_\", " + 
                    " \"description_notes\": \"_EM_4083_XYZ_\", " + 
                    " \"age_min\": -251, " + 
                    " \"participants_max\": 477, " + 
                    " \"time_max\": 165, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 142, " + 
                    " \"name\": \"INTEGRATION TEST ADMINISTRATOR\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"39bfLZ\", " + 
                    " \"uri\": \"y8NfG570gVNvjYfo\", " + 
                    " \"name\": \"_EM_4084_XYZ_\", " + 
                    " \"author\": \"Oow_macGCGCPq\" " + 
                    " }, " + 
                    " \"activities_count\": 370 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 397, " + 
                    " \"group\": \"3sVb5AkCaIK\", " + 
                    " \"name\": \"LlKJaPz\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 610, " + 
                    " \"group\": \"_EM_4089_XYZ_\", " + 
                    " \"name\": \"_EM_4090_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 783 " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 1142866415, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 116, " + 
                    " \"related\": [ " + 
                    " 76, " + 
                    " -508731943752098477, " + 
                    " 140 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/v1/ActivityResourceV1_113_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v2/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_25_postOnActivitiesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/Activity_171_addAndPublish.
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/media_files
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_26_postOnMedia_filesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 910L)
                .d("KEY", "\"_5dhMmJwTvqn\"")
                .d("VALID_FROM", "\"2074-01-07 14:19:01\"")
                .d("VALID_TO", "\"1915-10-26 19:51:27\"")
                .d("VALUE", "\"Loh839\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_109_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 738, " + 
                    " \"name\": \"_EM_17282_XYZ_\", " + 
                    " \"copy_right\": \"_EM_17283_XYZ_\", " + 
                    " \"author\": \"yfpcgGVahBuJYbJA\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/system_messages
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_27_postOnV1System_messagesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/SystemMessageDao_33_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/SystemMessageDao_33_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v2/tags
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_28_postOnTagsCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_64_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_2212_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"activities_count\": 309 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/users
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_29_postOnUsersCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/users
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_30_postOnV1UsersCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 487L)
                .d("AUTHOR", "\"Y3CQX\"")
                .d("CAPTURE_DATE", "\"2026-07-22 09:04:05\"")
                .d("COPY_RIGHT", "\"KyN3Vqe\"")
                .d("MIME_TYPE", "\"U\"")
                .d("NAME", "\"EP3\"")
                .d("URI", "\"66bLTs\"")
            .and().insertInto("MEDIA_FILE", 493L)
                .d("URI", "\"yY5izR5I7\"")
            .and().insertInto("USERS", 492L)
                .d("AUTHORIZATION_LEVEL", "8210")
                .d("NAME", "\"DUL7BM\"")
            .and().insertInto("ACTIVITY", 491L)
            .and().insertInto("ACTIVITY", 490L)
            .and().insertInto("ACTIVITY_PROPERTIES", 489L)
                .r("ACTIVITY_ID", 490L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 488L)
                .r("ACTIVITY_PROPERTIES_ID", 489L)
                .r("MEDIA_FILE_ID", 493L)
                .d("FEATURED", "true")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/UserDao_40_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"email_address\": \"KUm0RkQ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/UserDao_40_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_31_postOnActivitiesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 3578L)
            .and().insertInto("ACTIVITY", 3577L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3576L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"2088-01-03 17:16:21\"")
                .d("DATE_PUBLISHED", "\"2027-08-08 02:02:13\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"WYrpuY\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"lfFrAoiTLLhw18uc\"")
                .d("DESCRIPTION_NOTES", "\"NLpZE62\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"fYuivL\"")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "140")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "778")
                .r("ACTIVITY_ID", 3577L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 3581L)
            .and().insertInto("ACTIVITY_DERIVED", 3580L)
                .r("ACTIVITY_ID", 3581L)
                .d("FAVOURITES_COUNT", "NULL")
                .d("RATINGS_AVG", "0.5381990858540058")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "316")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_64_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"age_max\": -788, " + 
                    " \"participants_min\": 588, " + 
                    " \"participants_max\": 536, " + 
                    " \"time_min\": 465, " + 
                    " \"time_max\": -240706282, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"V8\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"aJhDKQhHh\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 139, " + 
                    " \"mime_type\": \"\", " + 
                    " \"uri\": \"MbziVl7u9Gw879UD\", " + 
                    " \"name\": \"7xfj55tFHFmBX\", " + 
                    " \"author\": \"v6\" " + 
                    " }, " + 
                    " \"activities_count\": 777 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 5581322859549300954, " + 
                    " \"name\": \"v\", " + 
                    " \"media_file\": { " + 
                    " \"id\": -1017075164, " + 
                    " \"name\": \"mC0\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -5078866, " + 
                    " \"group\": \"Fqinsifj\" " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"NRUuGFWsfv2Gwa\", " + 
                    " \"name\": \"BDQv\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/favourites
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_32_postOnFavouritesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/v1/FavouritesResourceV1_66_put.
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=_EM_1222_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/v1/FavouritesResourceV1_66_put
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/categories
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_33_postOnCategoriesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 705L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/v1/CategoryResource_60_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 416, " + 
                    " \"group\": \"_VHy\", " + 
                    " \"activities_count\": 1297637601 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/v1/CategoryResource_60_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/media_files
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_34_postOnMedia_filesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 848L)
                .d("AUTHOR", "\"F4ENhh\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_14248_XYZ_\"")
                .d("NAME", "\"5jdUWUXUU\"")
                .d("URI", "\"u\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_137_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 548, " + 
                    " \"mime_type\": \"1Wzhv7\", " + 
                    " \"uri\": \"_EM_14245_XYZ_\", " + 
                    " \"name\": \"Nv9\", " + 
                    " \"capture_date\": \"1988-11-21T21:49:30.048Z\", " + 
                    " \"copy_right\": \"xWaGHb_kiL9NP\", " + 
                    " \"author\": \"as_AJXjQCrWTJkj\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_137_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_35_postOnV1ActivitiesWithQueryParamsCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7.
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 908, " + 
                    " \"date_published\": \"2043-01-00T16:28:40.343Z\", " + 
                    " \"date_created\": \"1940-00-03T03:42:59.958Z\", " + 
                    " \"date_updated\": \"1940-00-03T03:42:59.166Z\", " + 
                    " \"description_material\": \"_VR9\", " + 
                    " \"description_prepare\": \"SaaQ3M\", " + 
                    " \"description_main\": \"_VR9\", " + 
                    " \"description_notes\": \"_VR9\", " + 
                    " \"age_max\": -545, " + 
                    " \"participants_max\": 624, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"8DQzIdW1ZP\", " + 
                    " \"name\": \"c\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 479742402, " + 
                    " \"ratings_sum\": 684, " + 
                    " \"favourites_count\": 526, " + 
                    " \"ratings_average\": 0.0037197775145164647, " + 
                    " \"related\": [ " + 
                    " 721, " + 
                    " 187, " + 
                    " 635, " + 
                    " -1373225254 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "ratings_count_min=_EM_22383_XYZ_&" + 
                    "time_1=4_I1rM4rx&" + 
                    "favourites=ij471rE3O&" + 
                    "name=K4WZs&" + 
                    "categories=LvADWJxt")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v2/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_36_postOnActivitiesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 2478L)
                .d("URI", "\"_EM_22595_XYZ_\"")
            .and().insertInto("TAG", 2477L)
                .d("GRP", "\"NekVov3Ga6H\"")
                .d("NAME", "\"_EM_22596_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/ActivityResourceV2_114_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 550, " + 
                    " \"name\": \"oEj42o1IQqeRkND\", " + 
                    " \"date_created\": \"2019-00-04T05:00:42.462Z\", " + 
                    " \"description_main\": \"_EM_22586_XYZ_\", " + 
                    " \"description_notes\": \"PKk_MQe\", " + 
                    " \"age_min\": -628, " + 
                    " \"participants_min\": 298, " + 
                    " \"participants_max\": 736, " + 
                    " \"time_min\": 547, " + 
                    " \"time_max\": 884, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"R5PkBYfMLrHLTB\", " + 
                    " \"tags\": [], " + 
                    " \"activity\": { " + 
                    " \"id\": 891, " + 
                    " \"ratings_count\": 602399318220083083, " + 
                    " \"ratings_average\": 0.7603744123894738 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/ActivityResourceV2_114_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v2/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_37_postOnActivitiesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_64_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_introduction\": \"OocEF3AArgdeu\", " + 
                    " \"description_notes\": \"CR2\", " + 
                    " \"age_max\": -100, " + 
                    " \"participants_min\": 897, " + 
                    " \"time_min\": 442, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 562, " + 
                    " \"group\": \"3egbutIKnkPJgrz\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 723, " + 
                    " \"capture_date\": \"1989-11-27T04:37:43.222Z\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 299, " + 
                    " \"name\": \"rN\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"_EM_9839_XYZ_\", " + 
                    " \"capture_date\": \"2097-03-23T10:32:01.916Z\", " + 
                    " \"copy_right\": \"_EM_9841_XYZ_\", " + 
                    " \"author\": \"kpmVW1bN\" " + 
                    " }, " + 
                    " \"activities_count\": 701 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_64_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_38_postOnActivitiesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/MediaFileDao_56_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_21164_XYZ_\", " + 
                    " \"description_main\": \"OzVeRYoRCiW\", " + 
                    " \"age_min\": -2147482698, " + 
                    " \"participants_min\": 731, " + 
                    " \"time_min\": 408, " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"yHNlc0Tx7\", " + 
                    " \"capture_date\": \"1971-09-20T21:16:55.985Z\", " + 
                    " \"author\": \"i_wYSF\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"Z\", " + 
                    " \"name\": \"s\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"_EM_21181_XYZ_\", " + 
                    " \"uri\": \"ks9Pj\", " + 
                    " \"name\": \"G6HrPGskDoPZIsA\", " + 
                    " \"copy_right\": \"xWaGHb_kiL9NP\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 440, " + 
                    " \"mime_type\": \"mtJbVtxWB\", " + 
                    " \"uri\": \"bEXlqdQRuGsgro\", " + 
                    " \"capture_date\": \"2095-13-03T10:37:52.970Z\", " + 
                    " \"author\": \"_EM_21183_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": 70823578 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v2/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_39_postOnActivitiesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_211_lambda$initMediaFiles$8.
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 533, " + 
                    " \"date_updated\": \"2087-03-14T14:23:44.550Z\", " + 
                    " \"description_introduction\": \"LlxxpEolSL4mG\", " + 
                    " \"description_safety\": \"rVyIbUdnuYg\", " + 
                    " \"age_max\": -2147482977, " + 
                    " \"participants_min\": 216, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"QDdOtODt4nSMG\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 738, " + 
                    " \"capture_date\": \"1994-04-09T08:19:04.204Z\", " + 
                    " \"copy_right\": \"jx_6URYO\", " + 
                    " \"author\": \"_EM_12197_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"_EM_12198_XYZ_\", " + 
                    " \"author\": \"\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 565, " + 
                    " \"name\": \"etPMuqMWm1z2U\", " + 
                    " \"authorization_level\": 188 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_211_lambda$initMediaFiles$8
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_40_postOnV1ActivitiesWithQueryParamsCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 2478L)
                .d("URI", "\"_EM_22595_XYZ_\"")
            .and().insertInto("TAG", 2477L)
                .d("GRP", "\"NekVov3Ga6H\"")
                .d("NAME", "\"_EM_22596_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/Activity_171_addAndPublish.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "ratings_average_min=_EM_22610_XYZ_&" + 
                    "age_2=VS4Kn&" + 
                    "categories=9VMJdKOCv41RDY&" + 
                    "participants=_EM_22611_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/Activity_171_addAndPublish
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/media_files
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_41_postOnMedia_filesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 848L)
                .d("AUTHOR", "\"F4ENhh\"")
                .d("CAPTURE_DATE", "\"2027-09-06 07:50:58\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_14248_XYZ_\"")
                .d("NAME", "\"5jdUWUXUU\"")
                .d("URI", "\"u\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_135_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 548, " + 
                    " \"mime_type\": \"1Wzhv\", " + 
                    " \"uri\": \"data:text/plain,QU01YkI\u003d\", " + 
                    " \"name\": \"Nv9\", " + 
                    " \"capture_date\": \"1988-11-21T21:49:30.048Z\", " + 
                    " \"copy_right\": \"xWbGHb_kiL9NP\", " + 
                    " \"author\": \"as_AJXjQCrWTJkj\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_135_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0))
                .body("'message'", containsString("HTTP 500 Internal Server Error"));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/api/v1/media_files
    * 2 - (500) POST:/api/v1/media_files
    * 3 - (500) POST:/api/v1/media_files
    * Found 2 potential faults of type-code 100
    */
    @Test @Timeout(60)
    public void test_42_postOnMedia_filesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1538L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2091-06-17 17:15:02\"")
                .d("COPY_RIGHT", "\"lC\"")
                .d("MIME_TYPE", "\"\"")
                .d("NAME", "\"nEj8uQaS66S\"")
                .d("URI", "\"rBKZOW1bXYj\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"KHBtWKLRz\", " + 
                    " \"uri\": \"PfCeRmhzQr9c3jo\", " + 
                    " \"name\": \"FTssO6uMdW_\", " + 
                    " \"copy_right\": \"19WH1drTM\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("KHBtWKLRz"))
                .body("'uri'", containsString("PfCeRmhzQr9c3jo"))
                .body("'name'", containsString("FTssO6uMdW_"))
                .body("'copy_right'", containsString("19WH1drTM"));
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_109_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/MediaFileDao_56_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"KHBtWKLRz\", " + 
                    " \"uri\": \"PfCeRmhzQr9c3jo\", " + 
                    " \"name\": \"FTssO6uMdW_\", " + 
                    " \"capture_date\": \"1965-12-04T01:32:31.902Z\", " + 
                    " \"author\": \"lQ\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/MediaFileDao_56_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v2/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_43_postOnActivitiesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1039L)
            .and().insertInto("MEDIA_FILE", 1299L)
                .d("URI", "\"nuDuQF\"")
            .and().insertInto("TAG", 1298L)
                .d("GRP", "\"\"")
                .d("NAME", "\"u83KFVVAqW\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 1656L)
                .d("URI", "\"eS\"")
            .and().insertInto("TAG", 1655L)
                .d("GRP", "\"c0S3qFCo\"")
                .d("NAME", "\"jha0qxvA\"")
            .and().insertInto("TAG_DERIVED", 1654L)
                .r("TAG_ID", 1655L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_59_find.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 680, " + 
                    " \"description_material\": \"hWfYecOZ\", " + 
                    " \"description_safety\": \"opT\", " + 
                    " \"description_notes\": \"cJmIvAxCE\", " + 
                    " \"age_max\": -735, " + 
                    " \"participants_max\": 559, " + 
                    " \"time_min\": 117, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 268, " + 
                    " \"group\": \"DhwHWCXnpqBhY\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"dX\", " + 
                    " \"activities_count\": 778 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"qrNOiQZjTe1R0\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 799, " + 
                    " \"ratings_count\": 811 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/categories
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_44_postOnCategoriesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/v1/CategoryResource_60_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 629 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/v1/CategoryResource_60_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v2/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_45_postOnV2ActivitiesWithQueryParamCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1044L)
            .and().insertInto("ACTIVITY", 1115L)
            .and().insertInto("ACTIVITY", 1114L)
            .and().insertInto("ACTIVITY_RELATION", 1113L)
                .r("ACTIVITY_1_ID", 1115L)
                .r("ACTIVITY_2_ID", 1114L)
                .d("OWNER_ID", "3")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/MediaFileDao_38_find.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 968, " + 
                    " \"description_material\": \"3veKQQuNcegvThls\", " + 
                    " \"description_prepare\": \"iMe\", " + 
                    " \"description_main\": \"cj9R\", " + 
                    " \"age_min\": -2147482980, " + 
                    " \"participants_min\": 166, " + 
                    " \"time_min\": 313, " + 
                    " \"time_max\": 482, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"AJCaBNT\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 705, " + 
                    " \"uri\": \"w\", " + 
                    " \"name\": \"fOGXFG7x\", " + 
                    " \"copy_right\": \"dYY_VpRZmnnMIrJR\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"T3pUWD\", " + 
                    " \"name\": \"Zev\", " + 
                    " \"copy_right\": \"iXzst9f3j2ClHG\", " + 
                    " \"author\": \"5XVL\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"ma\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/MediaFileDao_38_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v2/activities
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_46_postOnActivitiesCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7.
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_updated\": \"1986-08-11T22:35:43.605Z\", " + 
                    " \"description_prepare\": \"S\", " + 
                    " \"description_main\": \"fTeKUkmo\", " + 
                    " \"description_notes\": \"_EM_7227_XYZ_\", " + 
                    " \"age_min\": -254, " + 
                    " \"participants_max\": 456, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"_EM_7228_XYZ_\", " + 
                    " \"name\": \"BdAa5S\", " + 
                    " \"activities_count\": 344 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_197_lambda$initTags$7
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/activities
    */
    @Test @Timeout(60)
    public void test_47_getOnActivitiesReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=_EM_2167_XYZ_&" + 
                    "text=_EM_2168_XYZ_&" + 
                    "id=&" + 
                    "ratings_count_min=12&" + 
                    "random=1699773637&" + 
                    "favourites=711&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_48_getOnActivitiesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1173L)
                .d("URI", "\"_EM_17303_XYZ_\"")
            .and().insertInto("TAG", 1172L)
                .d("GRP", "\"_EM_17304_XYZ_\"")
                .d("NAME", "\"lT9RR8Z0VJ72gHP\"")
                .r("MEDIA_FILE_ID", 1173L)
            .and().insertInto("USERS", 2161L)
                .d("AUTHORIZATION_LEVEL", "476")
                .d("DATE_CREATED", "\"2077-05-16 14:53:13\"")
                .d("EMAIL_ADDRESS", "\"QVS077ApLSCm\"")
                .d("NAME", "\"D5g7f438b1xfMjrz\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "name=E62tTm&" + 
                    "text=c&" + 
                    "featured=true&" + 
                    "ratings_count_min=398&" + 
                    "ratings_average_min=0.8691402243608594&" + 
                    "random=322")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/favourites
    */
    @Test @Timeout(60)
    public void test_49_getOnFavouritesReturns1ElementUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 461L)
            .and().insertInto("USERS", 464L)
                .d("AUTHORIZATION_LEVEL", "263112")
                .d("NAME", "\"_EM_9997_XYZ_\"")
            .and().insertInto("ACTIVITY", 463L)
            .and().insertInto("ACTIVITY_RATING", 462L)
                .r("ACTIVITY_ID", 461L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0]", numberMatches(1.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/favourites
    */
    @Test @Timeout(60)
    public void test_50_getOnFavouritesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2648L)
            .and().insertInto("ACTIVITY", 3478L)
            .and().insertInto("ACTIVITY_RATING", 3477L)
                .r("ACTIVITY_ID", 2648L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "989")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files
    */
    @Test @Timeout(60)
    public void test_51_getOnMedia_filesReturns1ElementUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1335L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"NlWsI9\"")
                .d("NAME", "\"\"")
                .d("URI", "\"Qv9uXWS4\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?" + 
                    "uri=Qv9uXWS4&" + 
                    "attrs=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0].'mime_type'", containsString("NlWsI9"))
                .body("[0].'uri'", containsString("Qv9uXWS4"))
                .body("[0].'name'", containsString(""))
                .body("[0].'capture_date'", nullValue())
                .body("[0].'copy_right'", nullValue())
                .body("[0].'author'", nullValue());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files
    */
    @Test @Timeout(60)
    public void test_52_getOnMedia_filesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 848L)
                .d("AUTHOR", "\"F4ENhh\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_14248_XYZ_\"")
                .d("NAME", "\"5jdUWUXUU\"")
                .d("URI", "\"u\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?uri=_EM_14245_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/favourites
    */
    @Test @Timeout(60)
    public void test_53_getOnFavouritesReturns1ElementUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1679L)
                .d("AUTHOR", "\"CRG_fKQFJF\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"1HXTsGS6c_\"")
                .d("NAME", "\"k0G\"")
                .d("URI", "\"eTkb\"")
            .and().insertInto("ACTIVITY", 1680L)
            .and().insertInto("USERS", 1683L)
                .d("AUTHORIZATION_LEVEL", "364")
                .d("NAME", "\"J\"")
            .and().insertInto("ACTIVITY", 1682L)
            .and().insertInto("ACTIVITY_RATING", 1681L)
                .r("ACTIVITY_ID", 1682L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "148")
            .and().insertInto("USERS", 1743L)
                .d("AUTHORIZATION_LEVEL", "504")
                .d("NAME", "\"XDl4GpFRzL43Sg5\"")
            .and().insertInto("ACTIVITY", 1742L)
            .and().insertInto("ACTIVITY", 1741L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1740L)
                .d("AGE_MAX", "-722")
                .d("AGE_MIN", "-2147482900")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"nASZ\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"Q5R7Q\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"3h_PkbySBg0O\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"u\"")
                .d("PARTICIPANTS_MAX", "572")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"4eUJAcN8m6\"")
                .d("TIME_MAX", "547")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 1682L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 1750L)
                .d("URI", "\"LNowTJEHY\"")
            .and().insertInto("TAG", 1749L)
                .d("GRP", "\"CMxWoQUL\"")
                .d("NAME", "\"CiP1vXZJEhgyfpF\"")
            .and().insertInto("USERS", 1748L)
                .d("AUTHORIZATION_LEVEL", "43")
                .d("NAME", "\"fFwhra\"")
            .and().insertInto("ACTIVITY", 1747L)
            .and().insertInto("ACTIVITY", 1746L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1745L)
                .r("ACTIVITY_ID", 1682L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 1744L)
                .r("ACTIVITY_PROPERTIES_ID", 1745L)
                .r("TAG_ID", 1749L)
            .and().insertInto("MEDIA_FILE", 1756L)
                .d("URI", "\"yOGYoeN45cft0vI\"")
            .and().insertInto("USERS", 1755L)
                .d("AUTHORIZATION_LEVEL", "956")
                .d("NAME", "\"W8KHPnrCFgt0s6eE\"")
            .and().insertInto("ACTIVITY", 1754L)
            .and().insertInto("ACTIVITY", 1753L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1752L)
                .r("ACTIVITY_ID", 1753L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 1751L)
                .r("ACTIVITY_PROPERTIES_ID", 1740L)
                .r("MEDIA_FILE_ID", 1750L)
                .d("FEATURED", "false")
            .and().insertInto("ACTIVITY", 1370L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0]", numberMatches(2.0));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/api/v2/tags
    * 2 - (200) PUT:/api/v2/tags/{id}
    * 3 - (200) GET:/api/v2/tags/{id}
    * 4 - (400) POST:/api/v1/media_files
    * 5 - (200) GET:/api/v1/media_files
    * 6 - (400) POST:/api/v2/activities
    * 7 - (400) POST:/api/v2/activities
    * 8 - (403) POST:/api/v1/users
    * 9 - (200) GET:/api/v1/activities/{id}
    * 10 - (204) POST:/api/v1/favourites
    * 11 - (200) GET:/api/v1/favourites
    */
    @Test @Timeout(60)
    public void test_54_getOnFavouritesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1679L)
                .d("AUTHOR", "\"CRG_fKQFJF\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"1HXTsGS6c_\"")
                .d("NAME", "\"k0G\"")
                .d("URI", "\"eTkb\"")
            .and().insertInto("ACTIVITY", 1680L)
            .and().insertInto("ACTIVITY", 1682L)
            .and().insertInto("ACTIVITY_RATING", 1681L)
                .r("ACTIVITY_ID", 1682L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "148")
            .and().insertInto("ACTIVITY", 1742L)
            .and().insertInto("ACTIVITY", 1741L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1740L)
                .d("AGE_MAX", "-722")
                .d("AGE_MIN", "-2147482900")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"nASZ\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"Q5R7Q\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"3h_PkbySBg0O\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"u\"")
                .d("PARTICIPANTS_MAX", "572")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"4eUJAcN8m6\"")
                .d("TIME_MAX", "547")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 1682L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 1750L)
                .d("URI", "\"LNowTJEHY\"")
            .and().insertInto("TAG", 1749L)
                .d("GRP", "\"CMxWoQUL\"")
                .d("NAME", "\"CiP1vXZJEhgyfpF\"")
            .and().insertInto("ACTIVITY", 1747L)
            .and().insertInto("ACTIVITY", 1746L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1745L)
                .r("ACTIVITY_ID", 1682L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 1744L)
                .r("ACTIVITY_PROPERTIES_ID", 1745L)
                .r("TAG_ID", 1749L)
            .and().insertInto("MEDIA_FILE", 1756L)
                .d("URI", "\"yOGYoeN45cft0vI\"")
            .and().insertInto("USERS", 1755L)
                .d("AUTHORIZATION_LEVEL", "956")
                .d("NAME", "\"W8KHPnrCFgt0s6eE\"")
            .and().insertInto("ACTIVITY", 1754L)
            .and().insertInto("ACTIVITY", 1753L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1752L)
                .r("ACTIVITY_ID", 1753L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 1751L)
                .r("ACTIVITY_PROPERTIES_ID", 1740L)
                .r("MEDIA_FILE_ID", 1750L)
                .d("FEATURED", "false")
            .and().insertInto("ACTIVITY", 1370L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"1q9LyEK1oV4Av\", " + 
                    " \"name\": \"9kro9rAu3O\", " + 
                    " \"activities_count\": 7749083004410544532 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("1q9LyEK1oV4Av"))
                .body("'name'", containsString("9kro9rAu3O"))
                .body("'activities_count'", numberMatches(7.7490830044105441E18));
        String 
        location_tags__1276 = "/api/v2/tags" + "/" + res_0.extract().body().path("id").toString();
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"6wLmc6V5\", " + 
                    " \"name\": \"SEBfZAKSe9bvgirF\" " + 
                    " } ")
                .put(resolveLocation(location_tags__1276, baseUrlOfSut + "/api/v2/tags/623?EMextraParam123=42"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("6wLmc6V5"))
                .body("'name'", containsString("SEBfZAKSe9bvgirF"))
                .body("'activities_count'", numberMatches(0.0));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/tags/623")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 877, " + 
                    " \"mime_type\": \"_EM_18350_XYZ_\", " + 
                    " \"uri\": \"DOyy8rvVBWN\", " + 
                    " \"capture_date\": \"1918-03-25T03:57:29.537+00:09\", " + 
                    " \"copy_right\": \"kpt\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?uri=DOyy8rvVBWN")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_published\": \"1946-11-02T14:02:59Z\", " + 
                    " \"date_created\": \"2086-05-26T02:21:11.862Z\", " + 
                    " \"description_material\": \"_EM_19398_XYZ_\", " + 
                    " \"description_introduction\": \"p\", " + 
                    " \"description_safety\": \"_EM_19398_XYZ_\", " + 
                    " \"age_min\": -2147482931, " + 
                    " \"age_max\": -2147482931, " + 
                    " \"participants_max\": 3, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"PooIN30DM2Dnj\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 1973715816192688054, " + 
                    " \"group\": \"Sj15jO]vqhkeoi\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 423, " + 
                    " \"uri\": \"_EM_18353_XYZ_\", " + 
                    " \"capture_date\": \"1932-09-12T03:28:02.890-02:11\", " + 
                    " \"copy_right\": \"hzDqb62KttulNH\", " + 
                    " \"author\": \"v2\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"uri\": \"_EM_18354_XYZ_\", " + 
                    " \"name\": \"WC\", " + 
                    " \"capture_date\": \"2076-00-13T10:54:37.687-07:00\", " + 
                    " \"author\": \"vlT7Xempnyx\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"SlNzNHUoRSDZ1\", " + 
                    " \"date_published\": \"1946-11-02T14:59:02.278Z\", " + 
                    " \"date_created\": \"2086-05-26T02:11:21.082+07:42\", " + 
                    " \"description_material\": \"_EM_19398_XYZ_\", " + 
                    " \"description_prepare\": \"Wn\", " + 
                    " \"description_main\": \"Mlz2c3ckqDp9i\", " + 
                    " \"description_safety\": \"_EM_18356_XYZ_\", " + 
                    " \"description_notes\": \"_EM_18357_XYZ_\", " + 
                    " \"time_min\": 509, " + 
                    " \"time_max\": 186, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 1973715816192688054, " + 
                    " \"group\": \"_EM_18358_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 423, " + 
                    " \"uri\": \"Qv9uXWS4\", " + 
                    " \"capture_date\": \"1932-09-12T03:28:02.890-02:11\", " + 
                    " \"copy_right\": \"ggc\", " + 
                    " \"author\": \"v2\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"_EM_18360_XYZ_\", " + 
                    " \"email_address\": \"_EM_18361_XYZ_\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 872, " + 
                    " \"date_created\": \"1902-05-27T24:49:34Z\", " + 
                    " \"type\": \"GOOGLE\" " + 
                    " } " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities/2")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(2))
                .body("'properties_revisions'[0].'name'", containsString("u"))
                .body("'properties_revisions'[0].'date_published'", nullValue())
                .body("'properties_revisions'[0].'date_created'", nullValue())
                .body("'properties_revisions'[0].'date_updated'", nullValue())
                .body("'properties_revisions'[0].'description_material'", containsString("Q5R7Q"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("nASZ"))
                .body("'properties_revisions'[0].'description_prepare'", nullValue())
                .body("'properties_revisions'[0].'description_main'", nullValue())
                .body("'properties_revisions'[0].'description_safety'", containsString("3h_PkbySBg0O"))
                .body("'properties_revisions'[0].'description_notes'", nullValue())
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.1474829E9))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-722.0))
                .body("'properties_revisions'[0].'participants_min'", nullValue())
                .body("'properties_revisions'[0].'participants_max'", numberMatches(572.0))
                .body("'properties_revisions'[0].'time_min'", nullValue())
                .body("'properties_revisions'[0].'time_max'", numberMatches(547.0))
                .body("'properties_revisions'[0].'featured'", nullValue())
                .body("'properties_revisions'[0].'source'", containsString("4eUJAcN8m6"))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(1))
                .body("'properties_revisions'[0].'media_files'[0].'mime_type'", nullValue())
                .body("'properties_revisions'[0].'media_files'[0].'uri'", containsString("LNowTJEHY"))
                .body("'properties_revisions'[0].'media_files'[0].'name'", nullValue())
                .body("'properties_revisions'[0].'media_files'[0].'capture_date'", nullValue())
                .body("'properties_revisions'[0].'media_files'[0].'copy_right'", nullValue())
                .body("'properties_revisions'[0].'media_files'[0].'author'", nullValue())
                .body("'properties_revisions'[0].'author'", nullValue())
                .body("'properties_revisions'[1].'name'", nullValue())
                .body("'properties_revisions'[1].'date_published'", nullValue())
                .body("'properties_revisions'[1].'date_created'", nullValue())
                .body("'properties_revisions'[1].'date_updated'", nullValue())
                .body("'properties_revisions'[1].'description_material'", nullValue())
                .body("'properties_revisions'[1].'description_introduction'", nullValue())
                .body("'properties_revisions'[1].'description_prepare'", nullValue())
                .body("'properties_revisions'[1].'description_main'", nullValue())
                .body("'properties_revisions'[1].'description_safety'", nullValue())
                .body("'properties_revisions'[1].'description_notes'", nullValue())
                .body("'properties_revisions'[1].'age_min'", nullValue())
                .body("'properties_revisions'[1].'age_max'", nullValue())
                .body("'properties_revisions'[1].'participants_min'", nullValue())
                .body("'properties_revisions'[1].'participants_max'", nullValue())
                .body("'properties_revisions'[1].'time_min'", nullValue())
                .body("'properties_revisions'[1].'time_max'", nullValue())
                .body("'properties_revisions'[1].'featured'", nullValue())
                .body("'properties_revisions'[1].'source'", nullValue())
                .body("'properties_revisions'[1].'tags'.size()", equalTo(1))
                .body("'properties_revisions'[1].'tags'[0].'group'", containsString("CMxWoQUL"))
                .body("'properties_revisions'[1].'tags'[0].'name'", containsString("CiP1vXZJEhgyfpF"))
                .body("'properties_revisions'[1].'tags'[0].'media_file'", nullValue())
                .body("'properties_revisions'[1].'tags'[0].'activities_count'", numberMatches(0.0))
                .body("'properties_revisions'[1].'media_files'.size()", equalTo(0))
                .body("'properties_revisions'[1].'author'", nullValue())
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'properties'", nullValue())
                .body("'related'.size()", equalTo(0));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 625, " + 
                    " 647, " + 
                    " 745 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_55_getOnActivitiesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1173L)
                .d("URI", "\"_EM_17303_XYZ_\"")
            .and().insertInto("TAG", 1172L)
                .d("GRP", "\"_EM_17304_XYZ_\"")
                .d("NAME", "\"lT9RR8Z0VJ72gHP\"")
                .r("MEDIA_FILE_ID", 1173L)
            .and().insertInto("USERS", 2161L)
                .d("AUTHORIZATION_LEVEL", "476")
                .d("DATE_CREATED", "\"2077-05-16 14:53:13\"")
                .d("EMAIL_ADDRESS", "\"QVS077ApLSCm\"")
                .d("NAME", "\"D5g7f438b1xfMjrz\"")
            .and().insertInto("MEDIA_FILE", 3138L)
                .d("URI", "\"YEuFxYYj9Ycs\"")
            .and().insertInto("USERS", 3137L)
                .d("AUTHORIZATION_LEVEL", "812")
                .d("NAME", "\"KI\"")
            .and().insertInto("ACTIVITY", 3136L)
            .and().insertInto("ACTIVITY", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3134L)
                .r("ACTIVITY_ID", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3133L)
                .r("ACTIVITY_PROPERTIES_ID", 3134L)
                .r("MEDIA_FILE_ID", 1173L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 3142L)
                .d("AUTHORIZATION_LEVEL", "120")
                .d("NAME", "\"oNodbq\"")
            .and().insertInto("ACTIVITY", 3141L)
            .and().insertInto("ACTIVITY", 3140L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3139L)
                .d("AGE_MAX", "-842")
                .d("AGE_MIN", "-406")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1993-03-26 07:19:10\"")
                .d("DESCRIPTION_INTRODUCTION", "\"mLvuis994N0\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"cJhds73\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"b4JeC23\"")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "216")
                .d("SOURCE", "\"WWEnenh6\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 3136L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 3144L)
            .and().insertInto("ACTIVITY_DERIVED", 3143L)
                .r("ACTIVITY_ID", 3144L)
                .d("FAVOURITES_COUNT", "592")
                .d("RATINGS_AVG", "0.566931956273282")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "454")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=JlxUA98y&" + 
                    "name=E62tTm&" + 
                    "featured=true&" + 
                    "ratings_count_min=398&" + 
                    "ratings_average_min=0.87&" + 
                    "random=322")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_56_getOnV2ActivitiesWithQueryParamsFeaturedNegativeFavouritesUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1173L)
                .d("URI", "\"o\"")
            .and().insertInto("TAG", 1172L)
                .d("GRP", "\"_EM_17304_XYZ_\"")
                .d("NAME", "\"lT9RR8Z0VJ72gHP\"")
                .r("MEDIA_FILE_ID", 1173L)
            .and().insertInto("USERS", 2161L)
                .d("AUTHORIZATION_LEVEL", "476")
                .d("DATE_CREATED", "\"2077-05-16 14:53:13\"")
                .d("EMAIL_ADDRESS", "\"QVS077ApLSCm\"")
                .d("NAME", "\"D5g7f438b1xfMjrz\"")
            .and().insertInto("MEDIA_FILE", 3138L)
                .d("URI", "\"YEuFxYYj9Ycs\"")
            .and().insertInto("USERS", 3137L)
                .d("AUTHORIZATION_LEVEL", "812")
                .d("NAME", "\"KJ\"")
            .and().insertInto("ACTIVITY", 3136L)
            .and().insertInto("ACTIVITY", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3134L)
                .r("ACTIVITY_ID", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3133L)
                .r("ACTIVITY_PROPERTIES_ID", 3134L)
                .r("MEDIA_FILE_ID", 1173L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 3142L)
                .d("AUTHORIZATION_LEVEL", "120")
                .d("NAME", "\"oNodbq\"")
            .and().insertInto("ACTIVITY", 3141L)
            .and().insertInto("ACTIVITY", 3140L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3139L)
                .d("AGE_MAX", "-842")
                .d("AGE_MIN", "-406")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1993-03-26 07:19:10\"")
                .d("DESCRIPTION_INTRODUCTION", "\"mLvuis994N0\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"cJhds73\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"b4JeC23\"")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "216")
                .d("SOURCE", "\"WWEnenh6\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 3136L)
                .r("AUTHOR_ID", 3142L)
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 3144L)
            .and().insertInto("ACTIVITY_DERIVED", 3143L)
                .r("ACTIVITY_ID", 3144L)
                .d("FAVOURITES_COUNT", "592")
                .d("RATINGS_AVG", "0.566931956273282")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "454")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=JlxUA98y&" + 
                    "featured=true&" + 
                    "ratings_count_min=398&" + 
                    "ratings_average_min=0.87&" + 
                    "favourites=-888758865")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_57_getOnV2ActivitiesWithQueryParamsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1173L)
                .d("URI", "\"_EM_17303_XYZ_\"")
            .and().insertInto("TAG", 1172L)
                .d("GRP", "\"_EM_17304_XYZ_\"")
                .d("NAME", "\"lT9RR8Z0VJ72gHP\"")
                .r("MEDIA_FILE_ID", 1173L)
            .and().insertInto("USERS", 2161L)
                .d("AUTHORIZATION_LEVEL", "476")
                .d("DATE_CREATED", "\"2077-05-16 14:53:13\"")
                .d("EMAIL_ADDRESS", "\"QVS077ApLSCm\"")
                .d("NAME", "\"D5g7f438b1xfMjrz\"")
            .and().insertInto("MEDIA_FILE", 3138L)
                .d("URI", "\"YEuFxYYj9Ycs\"")
            .and().insertInto("USERS", 3137L)
                .d("AUTHORIZATION_LEVEL", "812")
                .d("NAME", "\"KI\"")
            .and().insertInto("ACTIVITY", 3136L)
            .and().insertInto("ACTIVITY", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3134L)
                .r("ACTIVITY_ID", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3133L)
                .r("ACTIVITY_PROPERTIES_ID", 3134L)
                .r("MEDIA_FILE_ID", 1173L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 3142L)
                .d("AUTHORIZATION_LEVEL", "120")
                .d("NAME", "\"oNodbq\"")
            .and().insertInto("ACTIVITY", 3141L)
            .and().insertInto("ACTIVITY", 3140L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3139L)
                .d("AGE_MAX", "-842")
                .d("AGE_MIN", "-406")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1993-03-26 07:19:10\"")
                .d("DESCRIPTION_INTRODUCTION", "\"mLvuis994N0\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"cJhds73\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"b4JeC23\"")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "216")
                .d("SOURCE", "\"WWEnenh6\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 3136L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 3144L)
            .and().insertInto("ACTIVITY_DERIVED", 3143L)
                .r("ACTIVITY_ID", 3144L)
                .d("FAVOURITES_COUNT", "592")
                .d("RATINGS_AVG", "0.566931956273282")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "454")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=JlxUA98y&" + 
                    "name=E62tTm&" + 
                    "text=c&" + 
                    "ratings_count_min=398&" + 
                    "ratings_average_min=0.8691402243608594&" + 
                    "random=322")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_58_getOnV2ActivitiesWithQueryParamsFeaturedNegativeRatings_average_min() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1173L)
                .d("URI", "\"o\"")
            .and().insertInto("TAG", 1172L)
                .d("GRP", "\"_EM_17304_XYZ_\"")
                .d("NAME", "\"lT9RR8Z0VJ72gHP\"")
                .r("MEDIA_FILE_ID", 1173L)
            .and().insertInto("USERS", 2161L)
                .d("AUTHORIZATION_LEVEL", "476")
                .d("DATE_CREATED", "\"2077-05-16 14:53:13\"")
                .d("EMAIL_ADDRESS", "\"QVS077ApLSCm\"")
                .d("NAME", "\"D5g7f438b1xfMjrz\"")
            .and().insertInto("MEDIA_FILE", 3138L)
                .d("URI", "\"YEuFxYYj9Ycs\"")
            .and().insertInto("USERS", 3137L)
                .d("AUTHORIZATION_LEVEL", "812")
                .d("NAME", "\"KJ\"")
            .and().insertInto("ACTIVITY", 3136L)
            .and().insertInto("ACTIVITY", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3134L)
                .r("ACTIVITY_ID", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3133L)
                .r("ACTIVITY_PROPERTIES_ID", 3134L)
                .r("MEDIA_FILE_ID", 1173L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 3142L)
                .d("AUTHORIZATION_LEVEL", "120")
                .d("NAME", "\"oNodbq\"")
            .and().insertInto("ACTIVITY", 3141L)
            .and().insertInto("ACTIVITY", 3140L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3139L)
                .d("AGE_MAX", "-842")
                .d("AGE_MIN", "-406")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1993-03-26 07:19:10\"")
                .d("DESCRIPTION_INTRODUCTION", "\"mLvuis994N0\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"cJhds73\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"b4JeC23\"")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "216")
                .d("SOURCE", "\"WWEnenh6\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 3136L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 3144L)
            .and().insertInto("ACTIVITY_DERIVED", 3143L)
                .r("ACTIVITY_ID", 3144L)
                .d("FAVOURITES_COUNT", "592")
                .d("RATINGS_AVG", "0.566931956273282")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "454")
            .and().insertInto("MEDIA_FILE", 3626L)
                .d("URI", "\"T2of_O8gvzIHQD\"")
            .and().insertInto("TAG", 3625L)
                .d("GRP", "\"\"")
                .d("NAME", "\"cU\"")
            .and().insertInto("TAG_DERIVED", 3624L)
                .r("TAG_ID", 3625L)
                .d("ACTIVITIES_COUNT", "59")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=JlxUA98y&" + 
                    "name=E62tTm&" + 
                    "featured=true&" + 
                    "ratings_average_min=-45.14444475277723&" + 
                    "favourites=-888758865")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags
    */
    @Test @Timeout(60)
    public void test_59_getOnTagsReturns2ElementsUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1173L)
                .d("URI", "\"o\"")
            .and().insertInto("TAG", 1172L)
                .d("GRP", "\"_EM_17304_XYZ_\"")
                .d("NAME", "\"lT9RR8Z0VJ72gHP\"")
                .r("MEDIA_FILE_ID", 1173L)
            .and().insertInto("USERS", 2161L)
                .d("AUTHORIZATION_LEVEL", "476")
                .d("DATE_CREATED", "\"2077-05-16 14:53:13\"")
                .d("EMAIL_ADDRESS", "\"QVS077ApLSCm\"")
                .d("NAME", "\"D5g7f438b1xfMjrz\"")
            .and().insertInto("MEDIA_FILE", 3138L)
                .d("URI", "\"YEuFxYYj9Ycs\"")
            .and().insertInto("USERS", 3137L)
                .d("AUTHORIZATION_LEVEL", "812")
                .d("NAME", "\"KJ\"")
            .and().insertInto("ACTIVITY", 3136L)
            .and().insertInto("ACTIVITY", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3134L)
                .r("ACTIVITY_ID", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3133L)
                .r("ACTIVITY_PROPERTIES_ID", 3134L)
                .r("MEDIA_FILE_ID", 1173L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 3142L)
                .d("AUTHORIZATION_LEVEL", "120")
                .d("NAME", "\"oNodbq\"")
            .and().insertInto("ACTIVITY", 3141L)
            .and().insertInto("ACTIVITY", 3140L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3139L)
                .d("AGE_MAX", "-842")
                .d("AGE_MIN", "-406")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1993-03-26 07:19:10\"")
                .d("DESCRIPTION_INTRODUCTION", "\"mLvuis994N0\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"cJhds73\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"b4JeC23\"")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "216")
                .d("SOURCE", "\"WWEnenh6\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 3136L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 3144L)
            .and().insertInto("ACTIVITY_DERIVED", 3143L)
                .r("ACTIVITY_ID", 3144L)
                .d("FAVOURITES_COUNT", "592")
                .d("RATINGS_AVG", "0.566931956273282")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "454")
            .and().insertInto("MEDIA_FILE", 3626L)
                .d("URI", "\"T2of_O8gvzIHQD\"")
            .and().insertInto("TAG", 3625L)
                .d("GRP", "\"\"")
                .d("NAME", "\"cU\"")
            .and().insertInto("TAG_DERIVED", 3624L)
                .r("TAG_ID", 3625L)
                .d("ACTIVITIES_COUNT", "59")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'group'", containsString("_EM_17304_XYZ_"))
                .body("[0].'name'", containsString("lT9RR8Z0VJ72gHP"))
                .body("[0].'media_file'.'mime_type'", nullValue())
                .body("[0].'media_file'.'uri'", containsString("o"))
                .body("[0].'media_file'.'name'", nullValue())
                .body("[0].'media_file'.'capture_date'", nullValue())
                .body("[0].'media_file'.'copy_right'", nullValue())
                .body("[0].'media_file'.'author'", nullValue())
                .body("[0].'activities_count'", numberMatches(0.0))
                .body("[1].'group'", containsString(""))
                .body("[1].'name'", containsString("cU"))
                .body("[1].'media_file'", nullValue())
                .body("[1].'activities_count'", numberMatches(59.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users
    */
    @Test @Timeout(60)
    public void test_60_getOnUsersReturns1Element() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users?" + 
                    "name=INTEGRATION+TEST+MODERATOR&" + 
                    "attrs=0TCj4hnm7o")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("'[0]'.isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users
    */
    @Test @Timeout(60)
    public void test_61_getOnUsersReturns3Elements() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1155_XYZ_")
                .get(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("[0].'name'", containsString("INTEGRATION TEST USER"))
                .body("[0].'email_address'", nullValue())
                .body("[0].'authorization_level'", numberMatches(0.0))
                .body("[0].'identities'.size()", equalTo(1))
                .body("[0].'identities'[0].'date_created'", numberMatches(9.811764E11))
                .body("[0].'identities'[0].'type'", containsString("API"))
                .body("[0].'identities'[0].'value'", containsString("user"))
                .body("[1].'name'", containsString("INTEGRATION TEST MODERATOR"))
                .body("[1].'email_address'", nullValue())
                .body("[1].'authorization_level'", numberMatches(10.0))
                .body("[1].'identities'.size()", equalTo(1))
                .body("[1].'identities'[0].'date_created'", numberMatches(9.811764E11))
                .body("[1].'identities'[0].'type'", containsString("API"))
                .body("[1].'identities'[0].'value'", containsString("moderator"))
                .body("[2].'name'", containsString("INTEGRATION TEST ADMINISTRATOR"))
                .body("[2].'email_address'", nullValue())
                .body("[2].'authorization_level'", numberMatches(20.0))
                .body("[2].'identities'.size()", equalTo(1))
                .body("[2].'identities'[0].'date_created'", numberMatches(9.811764E11))
                .body("[2].'identities'[0].'type'", containsString("API"))
                .body("[2].'identities'[0].'value'", containsString("administrator"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users
    */
    @Test @Timeout(60)
    public void test_62_getOnUsersReturns3ElementsUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 2156L)
                .d("URI", "\"ekkotM\"")
            .and().insertInto("TAG", 2155L)
                .d("GRP", "\"gLlvQARGeAIFAFT\"")
                .d("NAME", "\"GrPLftFZsbVKeWW\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users?" + 
                    "attrs=QulmqOc4&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("'[0]'.isEmpty()", is(true))
                .body("'[1]'.isEmpty()", is(true))
                .body("'[2]'.isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users
    */
    @Test @Timeout(60)
    public void test_63_getOnUsersReturns3Elements() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(3))
                .body("[0].'name'", containsString("INTEGRATION TEST USER"))
                .body("[0].'email_address'", nullValue())
                .body("[0].'authorization_level'", numberMatches(0.0))
                .body("[0].'identities'.size()", equalTo(1))
                .body("[0].'identities'[0].'date_created'", numberMatches(9.811764E11))
                .body("[0].'identities'[0].'type'", containsString("API"))
                .body("[0].'identities'[0].'value'", containsString("user"))
                .body("[1].'name'", containsString("INTEGRATION TEST MODERATOR"))
                .body("[1].'email_address'", nullValue())
                .body("[1].'authorization_level'", numberMatches(10.0))
                .body("[1].'identities'.size()", equalTo(1))
                .body("[1].'identities'[0].'date_created'", numberMatches(9.811764E11))
                .body("[1].'identities'[0].'type'", containsString("API"))
                .body("[1].'identities'[0].'value'", containsString("moderator"))
                .body("[2].'name'", containsString("INTEGRATION TEST ADMINISTRATOR"))
                .body("[2].'email_address'", nullValue())
                .body("[2].'authorization_level'", numberMatches(20.0))
                .body("[2].'identities'.size()", equalTo(1))
                .body("[2].'identities'[0].'date_created'", numberMatches(9.811764E11))
                .body("[2].'identities'[0].'type'", containsString("API"))
                .body("[2].'identities'[0].'value'", containsString("administrator"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files
    */
    @Test @Timeout(60)
    public void test_64_getOnMedia_filesReturns2ElementsUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 629L)
                .d("AUTHORIZATION_LEVEL", "964")
                .d("DATE_CREATED", "\"1968-08-17 14:05:51\"")
                .d("EMAIL_ADDRESS", "\"PQC6vQRMP\"")
                .d("NAME", "\"Jcmk3\"")
            .and().insertInto("MEDIA_FILE", 631L)
                .d("URI", "\"DgBLhyC4yNyGInSq\"")
            .and().insertInto("TAG", 630L)
                .d("GRP", "\"tehlQkFORo\"")
                .d("NAME", "\"VHr5Q\"")
                .r("MEDIA_FILE_ID", 631L)
            .and().insertInto("MEDIA_FILE", 634L)
                .d("URI", "\"_EM_11505_XYZ_\"")
            .and().insertInto("TAG", 633L)
                .d("GRP", "\"\"")
                .d("NAME", "\"fnn\"")
            .and().insertInto("TAG_DERIVED", 632L)
                .r("TAG_ID", 630L)
                .d("ACTIVITIES_COUNT", "57")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?attrs=eNSPVLKn1sx5GC_w")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("'[0]'.isEmpty()", is(true))
                .body("'[1]'.isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files
    */
    @Test @Timeout(60)
    public void test_65_getOnV1Media_filesWithQueryParamsEmptyUriReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/media_files?" + 
                    "uri=&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_66_getOnV1System_messagesWithQueryParamsReturns1ElementUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 824L)
                .d("KEY", "\"s\"")
                .d("VALID_FROM", "\"1967-07-08 23:30:56\"")
                .d("VALID_TO", "\"2098-06-03 01:14:24\"")
                .d("VALUE", "\"eWD/ZLrs\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=s&" + 
                    "valid=now&" + 
                    "attrs=PDzfW1N4FtaaKN1L")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("'[0]'.isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_67_getOnSystem_messagesReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_4985_XYZ_")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "valid=now_and_future&" + 
                    "attrs=_EM_4983_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_68_getOnSystem_messagesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 910L)
                .d("KEY", "\"_5djMmJwTvqn\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"Loh83\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=BhUtn2zkiji&" + 
                    "valid=now&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_69_getOnV1System_messagesWithQueryParamReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?valid=now_and_future")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_70_getOnSystem_messagesReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=n3V2DbmyeHM&" + 
                    "valid=now&" + 
                    "attrs=_EM_1149_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories
    */
    @Test @Timeout(60)
    public void test_71_getOnCategoriesReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "min_activities_count=430&" + 
                    "attrs=_EM_2173_XYZ_&" + 
                    "EMextraParam123=_EM_2174_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags
    */
    @Test @Timeout(60)
    public void test_72_getOnV2TagsWithQueryParamsNegativeMin_activities_countReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "name=GGJlBzN8R&" + 
                    "min_activities_count=-3870728860389336472&" + 
                    "attrs=_EM_9273_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags
    */
    @Test @Timeout(60)
    public void test_73_getOnTagsReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1152_XYZ_")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "min_activities_count=3674397942676395050&" + 
                    "attrs=Vwe_bI&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags
    */
    @Test @Timeout(60)
    public void test_74_getOnTagsReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "name=_EM_66_XYZ_&" + 
                    "min_activities_count=898")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories
    */
    @Test @Timeout(60)
    public void test_75_getOnCategoriesReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "group=_EM_77_XYZ_&" + 
                    "name=_EM_78_XYZ_&" + 
                    "attrs=_EM_79_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories
    */
    @Test @Timeout(60)
    public void test_76_getOnCategoriesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 487L)
                .d("AUTHOR", "\"Y3CQX\"")
                .d("CAPTURE_DATE", "\"2024-06-14 09:02:09\"")
                .d("COPY_RIGHT", "\"TLUYFZ\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"EP3\"")
                .d("URI", "\"_EM_20350_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 493L)
                .d("URI", "\"yY5iUR4H7\"")
            .and().insertInto("USERS", 492L)
                .d("AUTHORIZATION_LEVEL", "18")
                .d("NAME", "\"DUL7B\"")
            .and().insertInto("ACTIVITY", 491L)
            .and().insertInto("ACTIVITY", 490L)
            .and().insertInto("ACTIVITY_PROPERTIES", 489L)
                .r("ACTIVITY_ID", 491L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 488L)
                .r("ACTIVITY_PROPERTIES_ID", 489L)
                .r("MEDIA_FILE_ID", 493L)
                .d("FEATURED", "true")
            .and().insertInto("MEDIA_FILE", 1410L)
                .d("URI", "\"zSKWzbQ77BULwD\"")
            .and().insertInto("TAG", 1409L)
                .d("GRP", "\"u\"")
                .d("NAME", "\"kj\"")
            .and().insertInto("TAG_DERIVED", 1408L)
                .r("TAG_ID", 1409L)
                .d("ACTIVITIES_COUNT", "386")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "group=gBvoH4Tz_Wr1&" + 
                    "name=_EM_20349_XYZ_&" + 
                    "min_activities_count=1384501133")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories
    */
    @Test @Timeout(60)
    public void test_77_getOnCategoriesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 629L)
                .d("AUTHORIZATION_LEVEL", "964")
                .d("DATE_CREATED", "\"1968-08-17 14:05:51\"")
                .d("EMAIL_ADDRESS", "\"PQC6vQRMP\"")
                .d("NAME", "\"Jcmk3\"")
            .and().insertInto("MEDIA_FILE", 631L)
                .d("URI", "\"DgBLhyC4yNyGInSq\"")
            .and().insertInto("TAG", 630L)
                .d("GRP", "\"tehlQkFORo\"")
                .d("NAME", "\"VHr5Q\"")
                .r("MEDIA_FILE_ID", 631L)
            .and().insertInto("MEDIA_FILE", 634L)
                .d("URI", "\"_EM_11505_XYZ_\"")
            .and().insertInto("TAG", 633L)
                .d("GRP", "\"\"")
                .d("NAME", "\"fnn\"")
            .and().insertInto("TAG_DERIVED", 632L)
                .r("TAG_ID", 630L)
                .d("ACTIVITIES_COUNT", "57")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "group=_EM_11504_XYZ_&" + 
                    "min_activities_count=766&" + 
                    "attrs=FZxOuD6B3C3e12hP")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories
    */
    @Test @Timeout(60)
    public void test_78_getOnCategoriesReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "name=_EM_11304_XYZ_&" + 
                    "min_activities_count=735&" + 
                    "attrs=3ofO5dvdYrUZiS")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/favourites
    */
    @Test @Timeout(60)
    public void test_79_getOnFavouritesReturnsEmptyList() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1163_XYZ_")
                .get(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=_EM_1162_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags
    */
    @Test @Timeout(60)
    public void test_80_getOnTagsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1044L)
            .and().insertInto("USERS", 1116L)
                .d("AUTHORIZATION_LEVEL", "973")
                .d("NAME", "\"wSL3JsU\"")
            .and().insertInto("ACTIVITY", 1115L)
            .and().insertInto("ACTIVITY", 1114L)
            .and().insertInto("ACTIVITY_RELATION", 1113L)
                .r("ACTIVITY_1_ID", 1115L)
                .r("ACTIVITY_2_ID", 1114L)
                .d("OWNER_ID", "3")
            .and().insertInto("MEDIA_FILE", 3289L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"ERu9lfd\"")
                .d("NAME", "\"Tts3dCOo4h\"")
                .d("URI", "\"dyO4Fkv0w\"")
            .and().insertInto("MEDIA_FILE", 3306L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 3305L)
                .d("GRP", "\"ysKHu\"")
                .d("NAME", "\"r76cNn4tBT\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 3309L)
                .d("URI", "\"HLdzV6qyu\"")
            .and().insertInto("TAG", 3308L)
                .d("GRP", "\"4vkOkJ2\"")
                .d("NAME", "\"jrboI99F1coqMNF\"")
            .and().insertInto("TAG_DERIVED", 3307L)
                .r("TAG_ID", 3308L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("USERS", 3422L)
                .d("AUTHORIZATION_LEVEL", "524")
                .d("NAME", "\"PaeLe_\"")
            .and().insertInto("ACTIVITY", 3421L)
            .and().insertInto("ACTIVITY", 3420L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3419L)
                .d("AGE_MAX", "86")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"1951-08-09 10:15:02\"")
                .d("DATE_PUBLISHED", "\"2080-10-17 02:52:31\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "687")
                .d("SOURCE", "\"dMPmUItVqg79BFR\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "858")
                .r("ACTIVITY_ID", 3420L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=bTYejzfi7&" + 
                    "min_activities_count=453&" + 
                    "attrs=wKiXeOclI&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users
    */
    @Test @Timeout(60)
    public void test_81_getOnUsersReturns4ElementsUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2648L)
            .and().insertInto("USERS", 3479L)
                .d("AUTHORIZATION_LEVEL", "858")
                .d("NAME", "\"ek03CMh723rD\"")
            .and().insertInto("ACTIVITY", 3478L)
            .and().insertInto("ACTIVITY_RATING", 3477L)
                .r("ACTIVITY_ID", 2648L)
                .d("USER_ID", "3")
                .d("FAVOURITE", "false")
                .d("RATING", "989")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(4))
                .body("[0].'name'", containsString("INTEGRATION TEST MODERATOR"))
                .body("[0].'email_address'", nullValue())
                .body("[0].'authorization_level'", numberMatches(10.0))
                .body("[0].'identities'.size()", equalTo(1))
                .body("[0].'identities'[0].'date_created'", numberMatches(9.811764E11))
                .body("[0].'identities'[0].'type'", containsString("API"))
                .body("[0].'identities'[0].'value'", containsString("moderator"))
                .body("[1].'name'", containsString("ek03CMh723rD"))
                .body("[1].'email_address'", nullValue())
                .body("[1].'authorization_level'", numberMatches(858.0))
                .body("[1].'identities'.size()", equalTo(0))
                .body("[2].'name'", containsString("INTEGRATION TEST ADMINISTRATOR"))
                .body("[2].'email_address'", nullValue())
                .body("[2].'authorization_level'", numberMatches(20.0))
                .body("[2].'identities'.size()", equalTo(1))
                .body("[2].'identities'[0].'date_created'", numberMatches(9.811764E11))
                .body("[2].'identities'[0].'type'", containsString("API"))
                .body("[2].'identities'[0].'value'", containsString("administrator"))
                ; // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_82_getOnV1System_messagesWithQueryParamReturns1ElementUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 824L)
                .d("KEY", "\"s\"")
                .d("VALID_FROM", "\"1967-07-06 20:30:56\"")
                .d("VALID_TO", "\"2098-06-03 01:14:24\"")
                .d("VALUE", "\"eWD0ZLrs\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?attrs=PDzfW1N4FtaaKN1L")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("'[0]'.isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags
    */
    @Test @Timeout(60)
    public void test_83_getOnTagsReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags?" + 
                    "group=_EM_3217_XYZ_&" + 
                    "name=INTEGRATION+TEST+ADMINISTRATOR&" + 
                    "min_activities_count=622&" + 
                    "attrs=uVf1_0&" + 
                    "EMextraParam123=_EM_3218_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories
    */
    @Test @Timeout(60)
    public void test_84_getOnV1CategoriesWithQueryParamsNegativeMin_activities_count() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories?" + 
                    "name=INTEGRATION+TEST+MODERATOR&" + 
                    "min_activities_count=-2891928166245500395&" + 
                    "attrs=_EM_7276_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files
    */
    @Test @Timeout(60)
    public void test_85_getOnV1Media_filesWithQueryParamsReturnsEmptyList() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?" + 
                    "uri=_EM_3214_XYZ_&" + 
                    "attrs=EnoYu8&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files
    */
    @Test @Timeout(60)
    public void test_86_getOnV1Media_filesWithQueryParamsReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 16L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1969-12-01 14:37:04\"")
                .d("COPY_RIGHT", "\"_EM_8803_XYZ_\"")
                .d("MIME_TYPE", "\"\"")
                .d("NAME", "\"_EM_8804_XYZ_\"")
                .d("URI", "\"E4tSFB\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?" + 
                    "uri=_EM_8801_XYZ_&" + 
                    "attrs=4q")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users
    */
    @Test @Timeout(60)
    public void test_87_getOnUsersReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 796L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"rGFWQ5llXsmrO\"")
            .and().insertInto("USER_IDENTITY", 795L)
                .d("DATE_CREATED", "\"2060-06-17 11:27:56\"")
                .d("TYPE", "\"GOOGLE\"")
                .d("VALUE", "\"_EM_14229_XYZ_\"")
                .d("USER_ID", "NULL")
            .and().insertInto("USERS", 846L)
                .d("AUTHORIZATION_LEVEL", "146")
                .d("NAME", "\"3cbowpj5U_\"")
            .and().insertInto("ACTIVITY", 845L)
            .and().insertInto("ACTIVITY", 844L)
            .and().insertInto("ACTIVITY_PROPERTIES", 843L)
                .d("AGE_MAX", "-855")
                .d("AGE_MIN", "-66214")
                .d("DATE_CREATED", "\"2010-03-16 11:29:00\"")
                .d("DATE_PUBLISHED", "\"1932-02-09 17:39:19\"")
                .d("DATE_UPDATED", "\"2093-09-01 11:10:14\"")
                .d("DESCRIPTION_INTRODUCTION", "\"t_FJHcTr9m5D\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"xUycgjBZ_e\"")
                .d("DESCRIPTION_NOTES", "\"_EM_14218_XYZ_\"")
                .d("DESCRIPTION_PREPARE", "\"lv\"")
                .d("DESCRIPTION_SAFETY", "\"\"")
                .d("FEATURED", "true")
                .d("NAME", "\"e4WECZ\"")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "710")
                .d("SOURCE", "\"fvgkRLGBi4\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "249")
                .r("ACTIVITY_ID", 845L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 794L)
                .d("AUTHOR", "\"_EM_13463_XYZ_\"")
                .d("CAPTURE_DATE", "\"2098-07-22 08:38:30\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_14219_XYZ_\"")
                .d("NAME", "\"CXr0ZaA\"")
                .d("URI", "\"NuKLo3J2IuaWd\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users?name=_EM_14228_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files
    */
    @Test @Timeout(60)
    public void test_88_getOnMedia_filesReturnsEmptyListUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1679L)
                .d("AUTHOR", "\"CRG_fKQFJF\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"1HXTsGCS6c_\"")
                .d("NAME", "\"k0G\"")
                .d("URI", "\"eTkb\"")
            .and().insertInto("ACTIVITY", 1680L)
            .and().insertInto("USERS", 1683L)
                .d("AUTHORIZATION_LEVEL", "364")
                .d("NAME", "\"K\"")
            .and().insertInto("ACTIVITY", 1682L)
            .and().insertInto("ACTIVITY_RATING", 1681L)
                .r("ACTIVITY_ID", 1680L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "-16236")
            .and().insertInto("ACTIVITY", 1370L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files?uri=_EM_19408_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/media_files
    */
    @Test @Timeout(60)
    public void test_89_postOnMedia_filesReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_9479_XYZ_\", " + 
                    " \"uri\": \"\", " + 
                    " \"name\": \"nPLDhe\", " + 
                    " \"capture_date\": \"1984-13-04T10:33:19.902Z\", " + 
                    " \"author\": \"as_AJXjQCrWTJkj\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("_EM_9479_XYZ_"))
                .body("'uri'", containsString(""))
                .body("'name'", containsString("nPLDhe"))
                .body("'capture_date'", containsString("1985-01-04T10:33:19.902Z"))
                .body("'author'", containsString("as_AJXjQCrWTJkj"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_90_postOnActivitiesReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_updated\": \"1986-08-11T22:35:43.605Z\", " + 
                    " \"description_prepare\": \"S\", " + 
                    " \"description_main\": \"fTeKUkmo\", " + 
                    " \"description_notes\": \"_EM_7227_XYZ_\", " + 
                    " \"age_min\": -254, " + 
                    " \"participants_max\": 456, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"_EM_7228_XYZ_\", " + 
                    " \"name\": \"BdAa5S\", " + 
                    " \"activities_count\": 344 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2025-09-04T17:08:07.395Z"))
                .body("'properties_revisions'[0].'date_updated'", containsString("1986-08-11T22:35:43.605Z"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("S"))
                .body("'properties_revisions'[0].'description_main'", containsString("fTeKUkmo"))
                .body("'properties_revisions'[0].'description_notes'", containsString("_EM_7227_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-254.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(456.0))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(1))
                .body("'properties_revisions'[0].'tags'[0].'group'", containsString("_EM_7228_XYZ_"))
                .body("'properties_revisions'[0].'tags'[0].'name'", containsString("BdAa5S"))
                .body("'properties_revisions'[0].'tags'[0].'activities_count'", numberMatches(344.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'properties'.'date_created'", containsString("2025-09-04T17:08:07.395Z"))
                .body("'properties'.'date_updated'", containsString("1986-08-11T22:35:43.605Z"))
                .body("'properties'.'description_prepare'", containsString("S"))
                .body("'properties'.'description_main'", containsString("fTeKUkmo"))
                .body("'properties'.'description_notes'", containsString("_EM_7227_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(-254.0))
                .body("'properties'.'participants_max'", numberMatches(456.0))
                .body("'properties'.'tags'.size()", equalTo(1))
                .body("'properties'.'tags'[0].'group'", containsString("_EM_7228_XYZ_"))
                .body("'properties'.'tags'[0].'name'", containsString("BdAa5S"))
                .body("'properties'.'tags'[0].'activities_count'", numberMatches(344.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/activities
    */
    @Test @Timeout(60)
    public void test_91_postOnActivitiesReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_21164_XYZ_\", " + 
                    " \"description_main\": \"OzVeRYoRCiW\", " + 
                    " \"participants_min\": 731, " + 
                    " \"time_min\": 408, " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": 70823578 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("_EM_21164_XYZ_"))
                .body("'properties_revisions'[0].'date_created'", containsString("2025-09-04T17:09:25.503Z"))
                .body("'properties_revisions'[0].'description_main'", containsString("OzVeRYoRCiW"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(731.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(408.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'properties'.'name'", containsString("_EM_21164_XYZ_"))
                .body("'properties'.'date_created'", containsString("2025-09-04T17:09:25.503Z"))
                .body("'properties'.'description_main'", containsString("OzVeRYoRCiW"))
                .body("'properties'.'participants_min'", numberMatches(731.0))
                .body("'properties'.'time_min'", numberMatches(408.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/categories
    */
    @Test @Timeout(60)
    public void test_92_postOnCategoriesReturns200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 85L)
                .d("AUTHOR", "\"aFj9dIfA5\"")
                .d("CAPTURE_DATE", "\"1971-04-12 23:17:50\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"nNTVUtsDJA36YYnd\"")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_5645_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 376L)
                .d("URI", "\"um\"")
            .and().insertInto("USERS", 375L)
                .d("AUTHORIZATION_LEVEL", "344")
                .d("NAME", "\"xDlg1WRYj\"")
            .and().insertInto("ACTIVITY", 374L)
            .and().insertInto("ACTIVITY", 373L)
            .and().insertInto("ACTIVITY_PROPERTIES", 372L)
                .r("ACTIVITY_ID", 373L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 371L)
                .r("ACTIVITY_PROPERTIES_ID", 372L)
                .r("MEDIA_FILE_ID", 85L)
                .d("FEATURED", "false")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"Urts4ipgduH6GP\", " + 
                    " \"name\": \"ggjvh6uOmFI\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"5R2qmyn\", " + 
                    " \"uri\": \"0jVwj_juS5\", " + 
                    " \"name\": \"a4TLya\", " + 
                    " \"author\": \"9YPereVHdzUX\" " + 
                    " }, " + 
                    " \"activities_count\": 338958018 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories?min_activities_count=vu1")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("Urts4ipgduH6GP"))
                .body("'name'", containsString("ggjvh6uOmFI"))
                .body("'media_file'.'mime_type'", containsString("5R2qmyn"))
                .body("'media_file'.'uri'", containsString("0jVwj_juS5"))
                .body("'media_file'.'name'", containsString("a4TLya"))
                .body("'media_file'.'author'", containsString("9YPereVHdzUX"))
                .body("'activities_count'", numberMatches(3.38958018E8));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/media_files
    */
    @Test @Timeout(60)
    public void test_93_postOnMedia_filesReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"\", " + 
                    " \"uri\": \"_EM_11908_XYZ_\", " + 
                    " \"name\": \"x24_almlbx\", " + 
                    " \"copy_right\": \"64CB2M2_wNPqB\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString(""))
                .body("'uri'", containsString("_EM_11908_XYZ_"))
                .body("'name'", containsString("x24_almlbx"))
                .body("'copy_right'", containsString("64CB2M2_wNPqB"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v2/tags
    */
    @Test @Timeout(60)
    public void test_94_postOnTagsReturns200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 225L)
                .d("AUTHORIZATION_LEVEL", "177")
                .d("NAME", "\"SV\"")
            .and().insertInto("ACTIVITY", 224L)
            .and().insertInto("ACTIVITY", 223L)
            .and().insertInto("ACTIVITY_RELATION", 222L)
                .r("ACTIVITY_1_ID", 223L)
                .r("ACTIVITY_2_ID", 224L)
                .d("OWNER_ID", "2")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"tkJU\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"V\", " + 
                    " \"copy_right\": \"\" " + 
                    " }, " + 
                    " \"activities_count\": 326 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString(""))
                .body("'name'", containsString("tkJU"))
                .body("'media_file'.'uri'", containsString("V"))
                .body("'media_file'.'copy_right'", containsString(""))
                .body("'activities_count'", numberMatches(326.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_95_postOnSystem_messagesReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"_EM_4041_XYZ_\", " + 
                    " \"value\": \"j8BmjoGD\", " + 
                    " \"valid_from\": \"2003-02-17T23:01:03.799Z\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'key'", containsString("_EM_4041_XYZ_"))
                .body("'value'", containsString("j8BmjoGD"))
                .body("'valid_from'", containsString("2003-02-17T23:01:03.799Z"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_96_postOnActivitiesReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_updated\": \"1986-08-11T22:35:43.605Z\", " + 
                    " \"description_prepare\": \"S\", " + 
                    " \"description_main\": \"fTeKUkmo\", " + 
                    " \"description_notes\": \"_EM_7227_XYZ_\", " + 
                    " \"age_min\": -254, " + 
                    " \"participants_max\": 456, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"_EM_7228_XYZ_\", " + 
                    " \"name\": \"BdAa5S\", " + 
                    " \"activities_count\": 344 " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("2025-09-04T17:09:22.49Z"))
                .body("'properties_revisions'[0].'date_updated'", containsString("1986-08-11T22:35:43.605Z"))
                .body("'properties_revisions'[0].'description_prepare'", containsString("S"))
                .body("'properties_revisions'[0].'description_main'", containsString("fTeKUkmo"))
                .body("'properties_revisions'[0].'description_notes'", containsString("_EM_7227_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-254.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(456.0))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(1))
                .body("'properties_revisions'[0].'tags'[0].'group'", containsString("_EM_7228_XYZ_"))
                .body("'properties_revisions'[0].'tags'[0].'name'", containsString("BdAa5S"))
                .body("'properties_revisions'[0].'tags'[0].'activities_count'", numberMatches(344.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'properties'.'date_created'", containsString("2025-09-04T17:09:22.49Z"))
                .body("'properties'.'date_updated'", containsString("1986-08-11T22:35:43.605Z"))
                .body("'properties'.'description_prepare'", containsString("S"))
                .body("'properties'.'description_main'", containsString("fTeKUkmo"))
                .body("'properties'.'description_notes'", containsString("_EM_7227_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(-254.0))
                .body("'properties'.'participants_max'", numberMatches(456.0))
                .body("'properties'.'tags'.size()", equalTo(1))
                .body("'properties'.'tags'[0].'group'", containsString("_EM_7228_XYZ_"))
                .body("'properties'.'tags'[0].'name'", containsString("BdAa5S"))
                .body("'properties'.'tags'[0].'activities_count'", numberMatches(344.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v2/tags
    */
    @Test @Timeout(60)
    public void test_97_postOnTagsReturns200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1679L)
                .d("AUTHOR", "\"CRG_fKQFJF\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"1HXTsGS6c_\"")
                .d("NAME", "\"k0G\"")
                .d("URI", "\"eTkb\"")
            .and().insertInto("ACTIVITY", 1680L)
            .and().insertInto("ACTIVITY", 1682L)
            .and().insertInto("ACTIVITY_RATING", 1681L)
                .r("ACTIVITY_ID", 1682L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "148")
            .and().insertInto("ACTIVITY", 1742L)
            .and().insertInto("ACTIVITY", 1741L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1740L)
                .d("AGE_MAX", "-722")
                .d("AGE_MIN", "-2147482900")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"nASZ\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"Q5R7Q\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"3h_PkbySBg0O\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"u\"")
                .d("PARTICIPANTS_MAX", "572")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"4eUJAcN8m6\"")
                .d("TIME_MAX", "547")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 1682L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 1750L)
                .d("URI", "\"LNowTJEHY\"")
            .and().insertInto("TAG", 1749L)
                .d("GRP", "\"CMxWoQUL\"")
                .d("NAME", "\"CiP1vXZJEhgyfpF\"")
            .and().insertInto("ACTIVITY", 1747L)
            .and().insertInto("ACTIVITY", 1746L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1745L)
                .r("ACTIVITY_ID", 1682L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 1744L)
                .r("ACTIVITY_PROPERTIES_ID", 1745L)
                .r("TAG_ID", 1749L)
            .and().insertInto("MEDIA_FILE", 1756L)
                .d("URI", "\"yOGYoeN45cft0vI\"")
            .and().insertInto("USERS", 1755L)
                .d("AUTHORIZATION_LEVEL", "956")
                .d("NAME", "\"W8KHPnrCFgt0s6eE\"")
            .and().insertInto("ACTIVITY", 1754L)
            .and().insertInto("ACTIVITY", 1753L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1752L)
                .r("ACTIVITY_ID", 1753L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 1751L)
                .r("ACTIVITY_PROPERTIES_ID", 1740L)
                .r("MEDIA_FILE_ID", 1750L)
                .d("FEATURED", "false")
            .and().insertInto("ACTIVITY", 1370L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"1q9LyEK1oV4Av\", " + 
                    " \"name\": \"9kro9rAu3O\", " + 
                    " \"activities_count\": 7749083004410544532 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("1q9LyEK1oV4Av"))
                .body("'name'", containsString("9kro9rAu3O"))
                .body("'activities_count'", numberMatches(7.7490830044105441E18));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/activities
    */
    @Test @Timeout(60)
    public void test_98_postOnActivitiesReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_21164_XYZ_\", " + 
                    " \"description_main\": \"OzVeRYoRCiW\", " + 
                    " \"participants_min\": 731, " + 
                    " \"time_min\": 408, " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": 70823578 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("_EM_21164_XYZ_"))
                .body("'properties_revisions'[0].'date_created'", containsString("2025-09-04T17:09:25.773Z"))
                .body("'properties_revisions'[0].'description_main'", containsString("OzVeRYoRCiW"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(731.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(408.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'properties'.'name'", containsString("_EM_21164_XYZ_"))
                .body("'properties'.'date_created'", containsString("2025-09-04T17:09:25.773Z"))
                .body("'properties'.'description_main'", containsString("OzVeRYoRCiW"))
                .body("'properties'.'participants_min'", numberMatches(731.0))
                .body("'properties'.'time_min'", numberMatches(408.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/categories
    */
    @Test @Timeout(60)
    public void test_99_postOnCategoriesReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"Gal1z7iOkTPY7wE0\", " + 
                    " \"name\": \"9k\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"ytWLImm\", " + 
                    " \"uri\": \"_EM_3119_XYZ_\", " + 
                    " \"name\": \"_EM_3120_XYZ_\" " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("Gal1z7iOkTPY7wE0"))
                .body("'name'", containsString("9k"))
                .body("'media_file'.'mime_type'", containsString("ytWLImm"))
                .body("'media_file'.'uri'", containsString("_EM_3119_XYZ_"))
                .body("'media_file'.'name'", containsString("_EM_3120_XYZ_"))
                .body("'activities_count'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_100_postOnSystem_messagesReturns200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 487L)
                .d("AUTHOR", "\"Y3CQX\"")
                .d("CAPTURE_DATE", "\"2026-07-22 09:04:05\"")
                .d("COPY_RIGHT", "\"KyN3Vqe\"")
                .d("MIME_TYPE", "\"U\"")
                .d("NAME", "\"EP3\"")
                .d("URI", "\"66bLTs\"")
            .and().insertInto("MEDIA_FILE", 493L)
                .d("URI", "\"yY5izR5I7\"")
            .and().insertInto("USERS", 492L)
                .d("AUTHORIZATION_LEVEL", "8210")
                .d("NAME", "\"DUL7BM\"")
            .and().insertInto("ACTIVITY", 491L)
            .and().insertInto("ACTIVITY", 490L)
            .and().insertInto("ACTIVITY_PROPERTIES", 489L)
                .r("ACTIVITY_ID", 490L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 488L)
                .r("ACTIVITY_PROPERTIES_ID", 489L)
                .r("MEDIA_FILE_ID", 493L)
                .d("FEATURED", "true")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"WiqhsOgrVbbHD\", " + 
                    " \"value\": \"bfcKk\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'key'", containsString("WiqhsOgrVbbHD"))
                .body("'value'", containsString("bfcKk"));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v1/activities
    */
    @Test @Timeout(60)
    public void test_101_postOnActivitiesReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_21164_XYZ_\", " + 
                    " \"description_main\": \"OzVeRYoRCiW\", " + 
                    " \"participants_min\": 731, " + 
                    " \"time_min\": 408, " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": 70823578 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("_EM_21164_XYZ_"))
                .body("'properties_revisions'[0].'date_created'", containsString("2025-09-04T17:08:29.315Z"))
                .body("'properties_revisions'[0].'description_main'", containsString("OzVeRYoRCiW"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(731.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(408.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'properties'.'name'", containsString("_EM_21164_XYZ_"))
                .body("'properties'.'date_created'", containsString("2025-09-04T17:08:29.315Z"))
                .body("'properties'.'description_main'", containsString("OzVeRYoRCiW"))
                .body("'properties'.'participants_min'", numberMatches(731.0))
                .body("'properties'.'time_min'", numberMatches(408.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_102_postOnActivitiesReturns200() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_created\": \"1984-09-14T02:07:43.569Z\", " + 
                    " \"description_material\": \"_tF5IUpL0zdh\", " + 
                    " \"description_introduction\": \"_EM_3237_XYZ_\", " + 
                    " \"age_min\": -6, " + 
                    " \"age_max\": -490, " + 
                    " \"participants_max\": 812, " + 
                    " \"source\": \"_EM_3239_XYZ_\", " + 
                    " \"activity\": { " + 
                    " \"id\": 906, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 191, " + 
                    " \"ratings_average\": 0.04414747538048769 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities?EMextraParam123=_EM_3245_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'date_created'", containsString("1984-09-14T02:07:43.569Z"))
                .body("'properties_revisions'[0].'description_material'", containsString("_tF5IUpL0zdh"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("_EM_3237_XYZ_"))
                .body("'properties_revisions'[0].'age_min'", numberMatches(-6.0))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-490.0))
                .body("'properties_revisions'[0].'participants_max'", numberMatches(812.0))
                .body("'properties_revisions'[0].'source'", containsString("_EM_3239_XYZ_"))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'properties'.'date_created'", containsString("1984-09-14T02:07:43.569Z"))
                .body("'properties'.'description_material'", containsString("_tF5IUpL0zdh"))
                .body("'properties'.'description_introduction'", containsString("_EM_3237_XYZ_"))
                .body("'properties'.'age_min'", numberMatches(-6.0))
                .body("'properties'.'age_max'", numberMatches(-490.0))
                .body("'properties'.'participants_max'", numberMatches(812.0))
                .body("'properties'.'source'", containsString("_EM_3239_XYZ_"));
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v1/favourites
    */
    @Test @Timeout(60)
    public void test_103_postOnFavouritesReturns204UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 461L)
            .and().insertInto("ACTIVITY", 463L)
            .and().insertInto("ACTIVITY_RATING", 462L)
                .r("ACTIVITY_ID", 461L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 7081701530389142824, " + 
                    " 4569476429803394431, " + 
                    " -33553485 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v1/favourites
    */
    @Test @Timeout(60)
    public void test_104_postOnFavouritesReturns204UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1679L)
                .d("AUTHOR", "\"CRG_fKQFJF\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"1HXTsGS6c_\"")
                .d("NAME", "\"k0G\"")
                .d("URI", "\"eTkb\"")
            .and().insertInto("ACTIVITY", 1680L)
            .and().insertInto("USERS", 1683L)
                .d("AUTHORIZATION_LEVEL", "364")
                .d("NAME", "\"J\"")
            .and().insertInto("ACTIVITY", 1682L)
            .and().insertInto("ACTIVITY_RATING", 1681L)
                .r("ACTIVITY_ID", 1682L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "148")
            .and().insertInto("USERS", 1743L)
                .d("AUTHORIZATION_LEVEL", "504")
                .d("NAME", "\"XDl4GpFRzL43Sg5\"")
            .and().insertInto("ACTIVITY", 1742L)
            .and().insertInto("ACTIVITY", 1741L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1740L)
                .d("AGE_MAX", "-722")
                .d("AGE_MIN", "-2147482900")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"nASZ\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"Q5R7Q\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"3h_PkbySBg0O\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"u\"")
                .d("PARTICIPANTS_MAX", "572")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"4eUJAcN8m6\"")
                .d("TIME_MAX", "547")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 1682L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 1750L)
                .d("URI", "\"LNowTJEHY\"")
            .and().insertInto("TAG", 1749L)
                .d("GRP", "\"CMxWoQUL\"")
                .d("NAME", "\"CiP1vXZJEhgyfpF\"")
            .and().insertInto("USERS", 1748L)
                .d("AUTHORIZATION_LEVEL", "43")
                .d("NAME", "\"fFwhra\"")
            .and().insertInto("ACTIVITY", 1747L)
            .and().insertInto("ACTIVITY", 1746L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1745L)
                .r("ACTIVITY_ID", 1682L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 1744L)
                .r("ACTIVITY_PROPERTIES_ID", 1745L)
                .r("TAG_ID", 1749L)
            .and().insertInto("MEDIA_FILE", 1756L)
                .d("URI", "\"yOGYoeN45cft0vI\"")
            .and().insertInto("USERS", 1755L)
                .d("AUTHORIZATION_LEVEL", "956")
                .d("NAME", "\"W8KHPnrCFgt0s6eE\"")
            .and().insertInto("ACTIVITY", 1754L)
            .and().insertInto("ACTIVITY", 1753L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1752L)
                .r("ACTIVITY_ID", 1753L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 1751L)
                .r("ACTIVITY_PROPERTIES_ID", 1740L)
                .r("MEDIA_FILE_ID", 1750L)
                .d("FEATURED", "false")
            .and().insertInto("ACTIVITY", 1370L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 625, " + 
                    " 647, " + 
                    " 745 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v1/favourites
    */
    @Test @Timeout(60)
    public void test_105_postOnV1FavouritesWithQueryParamReturns204() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_8769_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 472 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=42")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v1/favourites
    */
    @Test @Timeout(60)
    public void test_106_postOnV1FavouritesReturns204() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " -295465425, " + 
                    " 757, " + 
                    " 36, " + 
                    " 201 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) POST:/api/v1/favourites
    */
    @Test @Timeout(60)
    public void test_107_postOnFavouritesReturns204UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 461L)
            .and().insertInto("ACTIVITY", 463L)
            .and().insertInto("ACTIVITY_RATING", 462L)
                .r("ACTIVITY_ID", 461L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "false")
                .d("RATING", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 7081701530389142824, " + 
                    " 4569476429803394431, " + 
                    " 947 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v1/activities
    */
    @Test @Timeout(60)
    public void test_108_getOnV1ActivitiesWithQueryParamsNegativeRatings_average_minReturns400() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3249L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2002-04-02 09:11:07\"")
                .d("COPY_RIGHT", "\"i1fAIACAo\"")
                .d("MIME_TYPE", "\"ziM1TtXW1LOj\"")
                .d("NAME", "NULL")
                .d("URI", "\"i\"")
            .and().insertInto("MEDIA_FILE", 3251L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 3250L)
                .d("GRP", "\"H3jn1wM\"")
                .d("NAME", "\"AkeJXvcP9pjm8VG4\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("ACTIVITY", 3254L)
            .and().insertInto("MEDIA_FILE", 822L)
                .d("AUTHOR", "\"nR\"")
                .d("CAPTURE_DATE", "\"2100-01-11 15:17:12\"")
                .d("COPY_RIGHT", "\"_EM_13628_XYZ_\"")
                .d("MIME_TYPE", "\"seJq2hBPtv\"")
                .d("NAME", "\"3nM1tQgGCzd\"")
                .d("URI", "\"NuKLo3J2IuaWd\"")
            .and().insertInto("USERS", 823L)
                .d("AUTHORIZATION_LEVEL", "609")
                .d("DATE_CREATED", "\"1927-05-10 14:35:01\"")
                .d("EMAIL_ADDRESS", "\"L9FZL5_qd3jiJ\"")
                .d("NAME", "\"wCGd29n\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "name=wCGd29n&" + 
                    "categories=ztsHfNMXQr&" + 
                    "age_1=S7uAXF&" + 
                    "age_2=_EM_13638_XYZ_&" + 
                    "participants=_EM_13639_XYZ_&" + 
                    "time_1=fPii6jFuUcDqoS&" + 
                    "time_2=g7Zpj3p1aZ&" + 
                    "id=699&" + 
                    "ratings_count_min=640&" + 
                    "ratings_average_min=-2.147482955E9&" + 
                    "random=459&" + 
                    "favourites=53")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v1/activities
    */
    @Test @Timeout(60)
    public void test_109_getOnV1ActivitiesWithQueryParamsReturns400() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "attrs=_EM_8433_XYZ_&" + 
                    "text=_EM_8434_XYZ_&" + 
                    "categories=1&" + 
                    "age_2=_EM_8436_XYZ_&" + 
                    "participants=_EM_8437_XYZ_&" + 
                    "time_1=_EM_8438_XYZ_&" + 
                    "time_2=_EM_8439_XYZ_&" + 
                    "favourites=703")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v1/activities
    */
    @Test @Timeout(60)
    public void test_110_getOnV1ActivitiesWithQueryParamsFeaturedReturns400() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_8875_XYZ_")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "name=nPLDhe&" + 
                    "text=_EM_8872_XYZ_&" + 
                    "featured=true&" + 
                    "time_2=g6&" + 
                    "id=SBKN2&" + 
                    "ratings_average_min=0.144181976996269&" + 
                    "random=658&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_111_getOnActivitiesReturns400() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "featured=false&" + 
                    "categories=d&" + 
                    "ages=v9&" + 
                    "durations=u5KHxigxg7Z&" + 
                    "ratings_count_min=667&" + 
                    "ratings_average_min=0.29942340379340027&" + 
                    "favourites=313")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_112_getOnActivitiesReturns400() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=_EM_6581_XYZ_&" + 
                    "ages=2&" + 
                    "participants=_EM_6585_XYZ_&" + 
                    "durations=7amuZH&" + 
                    "ratings_count_min=516&" + 
                    "favourites=340&" + 
                    "EMextraParam123=_EM_6587_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_113_getOnActivitiesReturns400() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "featured=false&" + 
                    "id=QJ48&" + 
                    "ratings_count_min=769&" + 
                    "ratings_average_min=0.7584581207431355&" + 
                    "EMextraParam123=_EM_8612_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_114_getOnSystem_messagesReturns400() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages?" + 
                    "key=&" + 
                    "valid=EVOMASTER&" + 
                    "attrs=_EM_5176_XYZ_&" + 
                    "EMextraParam123=_EM_5177_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("query param valid must be one of [now, now_and_future]"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v1/activities
    */
    @Test @Timeout(60)
    public void test_115_getOnV1ActivitiesWithQueryParamsNegativeRandomEmptyNameReturns400() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "name=&" + 
                    "text=uMJMR5D8o&" + 
                    "categories=pXnEPA0qeTPhkK2&" + 
                    "age_2=HM&" + 
                    "time_1=_EM_7787_XYZ_&" + 
                    "ratings_count_min=290&" + 
                    "ratings_average_min=0.5176520652759972&" + 
                    "random=-287321730&" + 
                    "favourites=443&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
    }
    
    
    /**
    * Calls:
    * (400) GET:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_116_getOnV2ActivitiesWithQueryParamsNegativeRandomReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 576L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities?" + 
                    "attrs=tBwYJjIni6sqcZPu&" + 
                    "name=rWf&" + 
                    "ages=Z&" + 
                    "participants=64R4dvPRgpnGBMf&" + 
                    "durations=tH950GzbL&" + 
                    "ratings_count_min=296&" + 
                    "ratings_average_min=0.11918090028297157&" + 
                    "random=-130378")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/media_files
    */
    @Test @Timeout(60)
    public void test_117_postOnMedia_filesReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1679L)
                .d("AUTHOR", "\"CRG_fKQFJF\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"1HXTsGS6c_\"")
                .d("NAME", "\"k0G\"")
                .d("URI", "\"eTkb\"")
            .and().insertInto("ACTIVITY", 1680L)
            .and().insertInto("USERS", 1683L)
                .d("AUTHORIZATION_LEVEL", "364")
                .d("NAME", "\"J\"")
            .and().insertInto("ACTIVITY", 1682L)
            .and().insertInto("ACTIVITY_RATING", 1681L)
                .r("ACTIVITY_ID", 1682L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "148")
            .and().insertInto("USERS", 1743L)
                .d("AUTHORIZATION_LEVEL", "504")
                .d("NAME", "\"XDl4GpFRzL43Sg5\"")
            .and().insertInto("ACTIVITY", 1742L)
            .and().insertInto("ACTIVITY", 1741L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1740L)
                .d("AGE_MAX", "-722")
                .d("AGE_MIN", "-2147482900")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"nASZ\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"Q5R7Q\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"3h_PkbySBg0O\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"u\"")
                .d("PARTICIPANTS_MAX", "572")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"4eUJAcN8m6\"")
                .d("TIME_MAX", "547")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 1682L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 1750L)
                .d("URI", "\"LNowTJEHY\"")
            .and().insertInto("TAG", 1749L)
                .d("GRP", "\"CMxWoQUL\"")
                .d("NAME", "\"CiP1vXZJEhgyfpF\"")
            .and().insertInto("USERS", 1748L)
                .d("AUTHORIZATION_LEVEL", "43")
                .d("NAME", "\"fFwhra\"")
            .and().insertInto("ACTIVITY", 1747L)
            .and().insertInto("ACTIVITY", 1746L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1745L)
                .r("ACTIVITY_ID", 1682L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 1744L)
                .r("ACTIVITY_PROPERTIES_ID", 1745L)
                .r("TAG_ID", 1749L)
            .and().insertInto("MEDIA_FILE", 1756L)
                .d("URI", "\"yOGYoeN45cft0vI\"")
            .and().insertInto("USERS", 1755L)
                .d("AUTHORIZATION_LEVEL", "956")
                .d("NAME", "\"W8KHPnrCFgt0s6eE\"")
            .and().insertInto("ACTIVITY", 1754L)
            .and().insertInto("ACTIVITY", 1753L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1752L)
                .r("ACTIVITY_ID", 1753L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 1751L)
                .r("ACTIVITY_PROPERTIES_ID", 1740L)
                .r("MEDIA_FILE_ID", 1750L)
                .d("FEATURED", "false")
            .and().insertInto("ACTIVITY", 1370L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 877, " + 
                    " \"mime_type\": \"_EM_18350_XYZ_\", " + 
                    " \"uri\": \"DOyy8rvVBWN\", " + 
                    " \"capture_date\": \"1918-03-25T03:57:29.537+00:09\", " + 
                    " \"copy_right\": \"kpt\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_118_postOnV2ActivitiesReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3233L)
                .d("URI", "\"cxP_t51VhKVK\"")
            .and().insertInto("TAG", 3232L)
                .d("GRP", "\"8s7gYSq5UR\"")
                .d("NAME", "\"hMUNBIvF\"")
            .and().insertInto("USERS", 3231L)
                .d("AUTHORIZATION_LEVEL", "847")
                .d("NAME", "\"4M2av3ElbTFMT\"")
            .and().insertInto("ACTIVITY", 3230L)
            .and().insertInto("ACTIVITY", 3229L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3228L)
                .r("ACTIVITY_ID", 3230L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 3227L)
                .r("ACTIVITY_PROPERTIES_ID", 3228L)
                .r("TAG_ID", 3232L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 51, " + 
                    " \"description_introduction\": \"5ox2Qe\", " + 
                    " \"description_prepare\": \"S\", " + 
                    " \"age_min\": -1342177332, " + 
                    " \"age_max\": -2147483185, " + 
                    " \"participants_min\": 424121634, " + 
                    " \"participants_max\": 424121634, " + 
                    " \"time_min\": -1342177332, " + 
                    " \"time_max\": 0, " + 
                    " \"featured\": true, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 940, " + 
                    " \"group\": \"_EM_7228_XYZ_\", " + 
                    " \"name\": \"BdAa5S\", " + 
                    " \"activities_count\": 344 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"copy_right\": \"_vTiwj\", " + 
                    " \"author\": \"as_AJXjQCrWTJkj\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 416, " + 
                    " \"mime_type\": \"Ag2cslXkqKjWJi5\", " + 
                    " \"uri\": \"_EM_7222_XYZ_\", " + 
                    " \"author\": \"zxR\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 45, " + 
                    " \"mime_type\": \"Ug\", " + 
                    " \"capture_date\": \"2075-02-28T04:23:33+00:56\", " + 
                    " \"author\": \"bmmX5\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -256075915415210587, " + 
                    " \"mime_type\": \"jE6\", " + 
                    " \"uri\": \"M3K\", " + 
                    " \"name\": \"Xpi6UNd\", " + 
                    " \"copy_right\": \"nFkM6HrMH\" " + 
                    " }, " + 
                    " { " + 
                    " \"capture_date\": \"2002-03-05T12:13:37Z\", " + 
                    " \"copy_right\": \"fPLbClmLDMP9s8Vf\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"wSaGRrfnzyomMb\", " + 
                    " \"email_address\": \"_EM_7224_XYZ_\", " + 
                    " \"authorization_level\": 155, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": -1607225203, " + 
                    " \"date_created\": \"1972-01-29T02:18:21.017+12:04\", " + 
                    " \"value\": \"_EM_7225_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/activities
    */
    @Test @Timeout(60)
    public void test_119_postOnActivitiesReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"\", " + 
                    " \"description_introduction\": \"A8D5\", " + 
                    " \"description_prepare\": \"_EM_14192_XYZ_\", " + 
                    " \"description_safety\": \"i5pGWDCgvWc4rVS\", " + 
                    " \"description_notes\": \"m2Kr\", " + 
                    " \"age_min\": -2147483246, " + 
                    " \"time_min\": -1823579296, " + 
                    " \"time_max\": 73, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"_EM_14193_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 558, " + 
                    " \"activities_count\": 907 " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"I\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 639, " + 
                    " \"uri\": \"GFmX5HG\", " + 
                    " \"name\": \"WcrgdVqWWFjoUIeb\", " + 
                    " \"copy_right\": \"bLU5DYVFAyqEJz\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"mime_type\": \"_EM_14201_XYZ_\", " + 
                    " \"capture_date\": \"1926-01-01T10:17:55+06:16\", " + 
                    " \"copy_right\": \"rLIx\", " + 
                    " \"author\": \"_EM_14203_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"9wQr7MKLjSqzd\", " + 
                    " \"capture_date\": \"1964-11-05T04:16:24-03:21\", " + 
                    " \"copy_right\": \"_EM_14204_XYZ_\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"id\": 84, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 958, " + 
                    " \"ratings_sum\": 807, " + 
                    " \"favourites_count\": 924, " + 
                    " \"ratings_average\": 0.30751796672500686, " + 
                    " \"related\": [ " + 
                    " 663, " + 
                    " 6164433888661056212, " + 
                    " -2003565848, " + 
                    " -1456784663, " + 
                    " 388 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "ratings_count_min=_EM_14207_XYZ_&" + 
                    "random=_EM_14208_XYZ_&" + 
                    "ratings_average_min=_EM_14210_XYZ_&" + 
                    "age_2=_EM_14211_XYZ_&" + 
                    "age_1=Ujc&" + 
                    "categories=1&" + 
                    "id=_EM_14212_XYZ_&" + 
                    "participants=_EM_14213_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/media_files
    */
    @Test @Timeout(60)
    public void test_120_postOnMedia_filesReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1173L)
                .d("URI", "\"o\"")
            .and().insertInto("TAG", 1172L)
                .d("GRP", "\"_EM_17304_XYZ_\"")
                .d("NAME", "\"lT9RR8Z0VJ72gHP\"")
                .r("MEDIA_FILE_ID", 1173L)
            .and().insertInto("USERS", 2161L)
                .d("AUTHORIZATION_LEVEL", "476")
                .d("DATE_CREATED", "\"2077-05-16 14:53:13\"")
                .d("EMAIL_ADDRESS", "\"QVS077ApLSCm\"")
                .d("NAME", "\"D5g7f438b1xfMjrz\"")
            .and().insertInto("MEDIA_FILE", 3138L)
                .d("URI", "\"YEuFxYYj9Ycs\"")
            .and().insertInto("USERS", 3137L)
                .d("AUTHORIZATION_LEVEL", "812")
                .d("NAME", "\"KJ\"")
            .and().insertInto("ACTIVITY", 3136L)
            .and().insertInto("ACTIVITY", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3134L)
                .r("ACTIVITY_ID", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3133L)
                .r("ACTIVITY_PROPERTIES_ID", 3134L)
                .r("MEDIA_FILE_ID", 1173L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 3142L)
                .d("AUTHORIZATION_LEVEL", "120")
                .d("NAME", "\"oNodbq\"")
            .and().insertInto("ACTIVITY", 3141L)
            .and().insertInto("ACTIVITY", 3140L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3139L)
                .d("AGE_MAX", "-842")
                .d("AGE_MIN", "-406")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1993-03-26 07:19:10\"")
                .d("DESCRIPTION_INTRODUCTION", "\"mLvuis994N0\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"cJhds73\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"b4JeC23\"")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "216")
                .d("SOURCE", "\"WWEnenh6\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 3136L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 3144L)
            .and().insertInto("ACTIVITY_DERIVED", 3143L)
                .r("ACTIVITY_ID", 3144L)
                .d("FAVOURITES_COUNT", "592")
                .d("RATINGS_AVG", "0.566931956273282")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "454")
            .and().insertInto("MEDIA_FILE", 3626L)
                .d("URI", "\"T2of_O8gvzIHQD\"")
            .and().insertInto("TAG", 3625L)
                .d("GRP", "\"\"")
                .d("NAME", "\"cU\"")
            .and().insertInto("TAG_DERIVED", 3624L)
                .r("TAG_ID", 3625L)
                .d("ACTIVITIES_COUNT", "59")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"ygGe3\", " + 
                    " \"uri\": \"2uW9ObSQb`\", " + 
                    " \"capture_date\": \"2096-13-19T03:51:36-16:43\", " + 
                    " \"copy_right\": \"\", " + 
                    " \"author\": \"ihKMf3\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_121_postOnSystem_messagesReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 603, " + 
                    " \"key\": \"D6mjnFh\", " + 
                    " \"value\": \"cRsj6yL9DyE0j\", " + 
                    " \"valid_to\": \"2060-08-29T15:22:01Z\", " + 
                    " \"valid_from\": \"1954-06-14T25:10:09Z\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/users
    */
    @Test @Timeout(60)
    public void test_122_postOnUsersReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 762, " + 
                    " \"name\": \"1CcBA\", " + 
                    " \"email_address\": \"yhuNK\", " + 
                    " \"authorization_level\": 395, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"date_created\": \"1908-01-28T06:37:43.658Z\", " + 
                    " \"type\": \"EVOMASTER\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 795, " + 
                    " \"value\": \"_EM_9730_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v2/tags
    */
    @Test @Timeout(60)
    public void test_123_postOnTagsReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 362, " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"_EM_6153_XYZ_\", " + 
                    " \"name\": \"nPLDhe\", " + 
                    " \"capture_date\": \"2055-13-27T15:44:36Z\", " + 
                    " \"copy_right\": \"L\" " + 
                    " }, " + 
                    " \"activities_count\": -2949585990151124709 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/categories
    */
    @Test @Timeout(60)
    public void test_124_postOnCategoriesReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"JhOUm\", " + 
                    " \"name\": \"Ga\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"1fZ4\", " + 
                    " \"uri\": \"KYf3Aof\", " + 
                    " \"name\": \"xtMQGDJyUG\", " + 
                    " \"capture_date\": \"2069-13-22T07:45:02Z\", " + 
                    " \"author\": \"rXQ_7ulN\" " + 
                    " }, " + 
                    " \"activities_count\": 404 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/activities
    */
    @Test @Timeout(60)
    public void test_125_postOnV1ActivitiesReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1335L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"NlWsI9\"")
                .d("NAME", "\"\"")
                .d("URI", "\"Qv9uXWS4\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_published\": \"1962-13-17T24:-1:29-18:38\", " + 
                    " \"date_created\": \"1954-13-30T02:51:32.886-15:23\", " + 
                    " \"description_prepare\": \"fv1eTbi0\", " + 
                    " \"description_main\": \"_EM_18064_XYZ_\", " + 
                    " \"description_safety\": \"_EM_18065_XYZ_\", " + 
                    " \"age_min\": 0, " + 
                    " \"age_max\": -2147483462, " + 
                    " \"participants_min\": 127, " + 
                    " \"time_min\": -845615377, " + 
                    " \"time_max\": 308, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"2pBN8eSeio\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/activities
    */
    @Test @Timeout(60)
    public void test_126_postOnV1ActivitiesWithQueryParamsEmptyCategoriesReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1679L)
                .d("AUTHOR", "\"CRG_fKQFJF\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"1HXTsGCS6c_\"")
                .d("NAME", "\"k0G\"")
                .d("URI", "\"eTkb\"")
            .and().insertInto("ACTIVITY", 1680L)
            .and().insertInto("USERS", 1683L)
                .d("AUTHORIZATION_LEVEL", "364")
                .d("NAME", "\"K\"")
            .and().insertInto("ACTIVITY", 1682L)
            .and().insertInto("ACTIVITY_RATING", 1681L)
                .r("ACTIVITY_ID", 1680L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "-16236")
            .and().insertInto("ACTIVITY", 1370L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 0, " + 
                    " \"name\": \"SlNzNHUoRSDZ1\", " + 
                    " \"date_created\": \"2086-05-26T02:11:21Z\", " + 
                    " \"date_updated\": \"2086-05-26T02:11:21-12:53\", " + 
                    " \"description_introduction\": \"p\", " + 
                    " \"description_prepare\": \"8EJNm1CNHeeP\", " + 
                    " \"description_safety\": \"_EM_19398_XYZ_\", " + 
                    " \"age_max\": -2147482931, " + 
                    " \"time_max\": -2147482931, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"PooIN30DM2Dnj\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 1973715816192688054, " + 
                    " \"group\": \"_EM_19410_XYZ_\", " + 
                    " \"name\": \"k_hBFP6R\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 423, " + 
                    " \"uri\": \"UDkb5LWKb5GzwnBg\", " + 
                    " \"capture_date\": \"1932-09-12T03:28:02.890-02:11\", " + 
                    " \"copy_right\": \"jx_6URYO\", " + 
                    " \"author\": \"_EM_18362_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 800620894 " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"name\": \"CfPcMwLhNxW_l\", " + 
                    " \"email_address\": \"E6ek\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 872, " + 
                    " \"date_created\": \"1902-05-27T24:49:34Z\", " + 
                    " \"type\": \"GOOGLE\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_sum\": 257, " + 
                    " \"favourites_count\": 483, " + 
                    " \"ratings_average\": 0.49245959868475037, " + 
                    " \"related\": [ " + 
                    " 647, " + 
                    " 383, " + 
                    " -257520077 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "age_2=_EM_19411_XYZ_&" + 
                    "ratings_average_min=kgzenyt_0&" + 
                    "age_1=3PIoPSuSzkUOrObE&" + 
                    "categories=&" + 
                    "id=lWmZ&" + 
                    "attrs=NY8KEPxdP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) POST:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_127_postOnSystem_messagesReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2003L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"value\": \"S9C4X3\", " + 
                    " \"valid_to\": \"1959-09-00T02:47:07.548-09:20\", " + 
                    " \"valid_from\": \"2038-06-08T02:35:43+01:04\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (401) GET:/api/v1/users
    */
    @Test @Timeout(60)
    public void test_128_getOnUsersReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_69_XYZ_")
                .get(baseUrlOfSut + "/api/v1/users?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) GET:/api/v1/favourites
    */
    @Test @Timeout(60)
    public void test_129_getOnFavouritesReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_80_XYZ_")
                .get(baseUrlOfSut + "/api/v1/favourites")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/media_files
    */
    @Test @Timeout(60)
    public void test_130_postOnMedia_filesReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=_EM_119_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/categories
    */
    @Test @Timeout(60)
    public void test_131_postOnCategoriesReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v2/activities
    */
    @Test @Timeout(60)
    public void test_132_postOnV2ActivitiesReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_115_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"date_published\": \"1964-00-05T11:44:47.975+07:14\", " + 
                    " \"date_created\": \"1990-02-23T22:12:31-01:15\", " + 
                    " \"description_material\": \"1YrwGZruu0Xjx\", " + 
                    " \"description_prepare\": \"_EM_85_XYZ_\", " + 
                    " \"description_safety\": \"_EM_87_XYZ_\", " + 
                    " \"participants_min\": 31, " + 
                    " \"participants_max\": 375, " + 
                    " \"time_min\": 715, " + 
                    " \"time_max\": 110, " + 
                    " \"featured\": false, " + 
                    " \"author\": { " + 
                    " \"authorization_level\": 579, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"date_created\": \"2006-04-17T04:46:08.015+16:08\", " + 
                    " \"type\": \"EVOMASTER\", " + 
                    " \"value\": \"_EM_112_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 103, " + 
                    " \"value\": \"_EM_113_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"id\": 290, " + 
                    " \"ratings_count\": 811704154, " + 
                    " \"favourites_count\": 709 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_133_postOnSystem_messagesReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_120_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"valid_to\": \"2073-08-23T16:09:06Z\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v2/tags
    */
    @Test @Timeout(60)
    public void test_134_postOnTagsReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"_EM_121_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"_EM_122_XYZ_\", " + 
                    " \"uri\": \"_EM_123_XYZ_\", " + 
                    " \"author\": \"\" " + 
                    " }, " + 
                    " \"activities_count\": 898 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/users
    */
    @Test @Timeout(60)
    public void test_135_postOnUsersReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/activities
    */
    @Test @Timeout(60)
    public void test_136_postOnV1ActivitiesWithQueryParamReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/activities?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/favourites
    */
    @Test @Timeout(60)
    public void test_137_postOnFavouritesReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_154_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": [ " + 
                    " 579, " + 
                    " -1008771430 " + 
                    " ] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/favourites?EMextraParam123=_EM_153_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v1/users
    */
    @Test @Timeout(60)
    public void test_138_postOnUsersReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 6525708399205048075, " + 
                    " \"name\": \"yFkKBF6Dd\", " + 
                    " \"email_address\": \"5tVkEDVl9Ae\", " + 
                    " \"authorization_level\": 641185184 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("Cannot set authorization level to higher than your own."));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v1/users
    */
    @Test @Timeout(60)
    public void test_139_postOnUsersReturns403UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1173L)
                .d("URI", "\"o\"")
            .and().insertInto("TAG", 1172L)
                .d("GRP", "\"_EM_17304_XYZ_\"")
                .d("NAME", "\"lT9RR8Z0VJ72gHP\"")
                .r("MEDIA_FILE_ID", 1173L)
            .and().insertInto("USERS", 2161L)
                .d("AUTHORIZATION_LEVEL", "476")
                .d("DATE_CREATED", "\"2077-05-16 14:53:13\"")
                .d("EMAIL_ADDRESS", "\"QVS077ApLSCm\"")
                .d("NAME", "\"D5g7f438b1xfMjrz\"")
            .and().insertInto("MEDIA_FILE", 3138L)
                .d("URI", "\"YEuFxYYj9Ycs\"")
            .and().insertInto("USERS", 3137L)
                .d("AUTHORIZATION_LEVEL", "812")
                .d("NAME", "\"KJ\"")
            .and().insertInto("ACTIVITY", 3136L)
            .and().insertInto("ACTIVITY", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3134L)
                .r("ACTIVITY_ID", 3135L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 3133L)
                .r("ACTIVITY_PROPERTIES_ID", 3134L)
                .r("MEDIA_FILE_ID", 1173L)
                .d("FEATURED", "true")
            .and().insertInto("USERS", 3142L)
                .d("AUTHORIZATION_LEVEL", "120")
                .d("NAME", "\"oNodbq\"")
            .and().insertInto("ACTIVITY", 3141L)
            .and().insertInto("ACTIVITY", 3140L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3139L)
                .d("AGE_MAX", "-842")
                .d("AGE_MIN", "-406")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "\"1993-03-26 07:19:10\"")
                .d("DESCRIPTION_INTRODUCTION", "\"mLvuis994N0\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "\"cJhds73\"")
                .d("DESCRIPTION_PREPARE", "\"\"")
                .d("DESCRIPTION_SAFETY", "\"b4JeC23\"")
                .d("FEATURED", "true")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "216")
                .d("SOURCE", "\"WWEnenh6\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 3136L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("ACTIVITY", 3144L)
            .and().insertInto("ACTIVITY_DERIVED", 3143L)
                .r("ACTIVITY_ID", 3144L)
                .d("FAVOURITES_COUNT", "592")
                .d("RATINGS_AVG", "0.566931956273282")
                .d("RATINGS_COUNT", "NULL")
                .d("RATINGS_SUM", "454")
            .and().insertInto("MEDIA_FILE", 3626L)
                .d("URI", "\"T2of_O8gvzIHQD\"")
            .and().insertInto("TAG", 3625L)
                .d("GRP", "\"\"")
                .d("NAME", "\"cU\"")
            .and().insertInto("TAG_DERIVED", 3624L)
                .r("TAG_ID", 3625L)
                .d("ACTIVITIES_COUNT", "59")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 5546829605881056904, " + 
                    " \"name\": \"o\", " + 
                    " \"email_address\": \"aT07Eb\", " + 
                    " \"authorization_level\": 967 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_140_postOnV1System_messagesReturns403UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 142L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 426, " + 
                    " \"key\": \"kBBI\", " + 
                    " \"value\": \"NwHbjRx\", " + 
                    " \"valid_to\": \"2038-05-07T24:33:00.004Z\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v1/media_files
    */
    @Test @Timeout(60)
    public void test_141_postOnMedia_filesReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 387, " + 
                    " \"mime_type\": \"_EM_1183_XYZ_\", " + 
                    " \"name\": \"_EM_1184_XYZ_\", " + 
                    " \"author\": \"SK\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v1/categories
    */
    @Test @Timeout(60)
    public void test_142_postOnCategoriesReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"9ydLTl\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 651, " + 
                    " \"capture_date\": \"2049-07-22T24:11:01.944Z\" " + 
                    " }, " + 
                    " \"activities_count\": 754 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v1/users
    */
    @Test @Timeout(60)
    public void test_143_postOnUsersReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 195, " + 
                    " \"name\": \"0Bi\", " + 
                    " \"email_address\": \"_EM_20299_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_144_postOnSystem_messagesReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/v1/system_messages")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v2/tags
    */
    @Test @Timeout(60)
    public void test_145_postOnTagsReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_1187_XYZ_\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags?EMextraParam123=_EM_1190_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v1/users
    */
    @Test @Timeout(60)
    public void test_146_postOnUsersReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 84 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) POST:/api/v1/system_messages
    */
    @Test @Timeout(60)
    public void test_147_postOnV1System_messagesWithQueryParamReturns403UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1044L)
            .and().insertInto("USERS", 2433L)
                .d("AUTHORIZATION_LEVEL", "884")
                .d("NAME", "\"pnGV08n\"")
            .and().insertInto("ACTIVITY", 2432L)
            .and().insertInto("ACTIVITY", 2431L)
            .and().insertInto("ACTIVITY_RELATION", 2430L)
                .r("ACTIVITY_1_ID", 1044L)
                .r("ACTIVITY_2_ID", 2432L)
                .d("OWNER_ID", "1")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"07eX4\", " + 
                    " \"value\": \"Sbk7\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/system_messages?attrs=Mc")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/api/v1/categories
    * 2 - (500) PUT:/api/v1/categories/{id}
    * 3 - (500) DELETE:/api/v1/categories/{id}
    * 4 - (500) DELETE:/api/v1/activities/{id}/rating
    * 5 - (200) POST:/api/v1/media_files
    * 6 - (500) PUT:/api/v1/media_files/{id}
    * 7 - (200) GET:/api/v1/media_files/{id}
    * 8 - (200) GET:/api/v1/system/roles
    * Found 4 potential faults of type-code 100
    */
    @Test @Timeout(60)
    public void test_148_getOnRolesCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2648L)
            .and().insertInto("MEDIA_FILE", 2655L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2027-11-04 23:30:07\"")
                .d("COPY_RIGHT", "\"flsDByhdgpy\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"\"")
            .and().insertInto("MEDIA_FILE", 2661L)
                .d("URI", "\"_EM_23131_XYZ_\"")
            .and().insertInto("TAG", 2660L)
                .d("GRP", "\"_EM_23132_XYZ_\"")
                .d("NAME", "\"z84tDc4RblkVjRP\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"hbc7r3\", " + 
                    " \"name\": \"nzViBqfo4\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("hbc7r3"))
                .body("'name'", containsString("nzViBqfo4"))
                .body("'activities_count'", numberMatches(0.0));
        String 
        location_categories__200 = "/api/v1/categories" + "/" + res_0.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/v1/CategoryResource_83_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" {} ")
                .put(resolveLocation(location_categories__200, baseUrlOfSut + "/api/v1/categories/1138"))
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/v1/CategoryResource_83_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_72_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/categories/1138")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityRating$Key_90_<init>.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/29/rating")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        ValidatableResponse res_4 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"WF8Eu\", " + 
                    " \"author\": \"OR5LIq\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("WF8Eu"))
                .body("'author'", containsString("OR5LIq"));
        String 
        location_media_files__69 = "/api/v1/media_files" + "/" + res_4.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/MediaFile_134_setUri.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"\" " + 
                    " } ")
                .put(resolveLocation(location_media_files__69, baseUrlOfSut + "/api/v1/media_files/486"))
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/MediaFile_134_setUri
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/486?attrs=ZxnWriQrsXadUP")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/roles")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/api/v2/activities
    * 2 - (200) POST:/api/v1/media_files
    * 3 - (200) PUT:/api/v1/media_files/{id}
    * 4 - (200) GET:/api/v1/media_files/{id}
    * 5 - (500) POST:/api/v1/activities
    * 6 - (400) GET:/api/v1/activities
    * 7 - (200) GET:/api/v1/users
    * 8 - (200) GET:/api/v2/activities/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_149_getOnActivCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3249L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2002-04-02 09:11:07\"")
                .d("COPY_RIGHT", "\"i1fAIACAo\"")
                .d("MIME_TYPE", "\"ziM1TtXW1LOj\"")
                .d("NAME", "NULL")
                .d("URI", "\"i\"")
            .and().insertInto("MEDIA_FILE", 3251L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 3250L)
                .d("GRP", "\"H3jn1wM\"")
                .d("NAME", "\"AkeJXvcP9pjm8VG4\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("ACTIVITY", 3254L)
            .and().insertInto("MEDIA_FILE", 822L)
                .d("AUTHOR", "\"nR\"")
                .d("CAPTURE_DATE", "\"2100-01-11 15:17:12\"")
                .d("COPY_RIGHT", "\"_EM_13628_XYZ_\"")
                .d("MIME_TYPE", "\"seJq2hBPtv\"")
                .d("NAME", "\"3nM1tQgGCzd\"")
                .d("URI", "\"NuKLo3J2IuaWd\"")
            .and().insertInto("USERS", 823L)
                .d("AUTHORIZATION_LEVEL", "609")
                .d("DATE_CREATED", "\"1927-05-10 14:35:01\"")
                .d("EMAIL_ADDRESS", "\"L9FZL5_qd3jiJ\"")
                .d("NAME", "\"wCGd29n\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 699, " + 
                    " \"name\": \"wCGd29n\", " + 
                    " \"date_published\": \"1967-11-01T21:26:40.417+05:45\", " + 
                    " \"date_created\": \"1957-05-17T15:38:27.059+12:20\", " + 
                    " \"description_introduction\": \"EvDz\", " + 
                    " \"description_prepare\": \"ojgg9ynGTrADcg8\", " + 
                    " \"description_safety\": \"fkmMPT63aP3UAy\", " + 
                    " \"description_notes\": \"9\", " + 
                    " \"age_min\": -2147482955, " + 
                    " \"age_max\": -2147482955, " + 
                    " \"participants_min\": 759, " + 
                    " \"time_min\": 822, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 884, " + 
                    " \"group\": \"_ItPUP6jOrM\", " + 
                    " \"name\": \"xb1XxI\" " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"fLlysvmk6yCF\", " + 
                    " \"name\": \"_EM_13624_XYZ_\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 275, " + 
                    " \"mime_type\": \"_EM_13625_XYZ_\", " + 
                    " \"uri\": \"_EM_13626_XYZ_\", " + 
                    " \"name\": \"INTEGRATION TEST USER\", " + 
                    " \"copy_right\": \"ggc\" " + 
                    " }, " + 
                    " \"activities_count\": 301 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"_EM_13629_XYZ_\", " + 
                    " \"copy_right\": \"jx_6URYO\", " + 
                    " \"author\": \"5\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("_EM_13629_XYZ_"))
                .body("'copy_right'", containsString("jx_6URYO"))
                .body("'author'", containsString("5"));
        String 
        location_media_files__304 = "/api/v1/media_files" + "/" + res_1.extract().body().path("id").toString();
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 699, " + 
                    " \"uri\": \"nLHl0W8g\", " + 
                    " \"author\": \"cGdgzRqqnBP3r9N\" " + 
                    " } ")
                .put(resolveLocation(location_media_files__304, baseUrlOfSut + "/api/v1/media_files/699"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("nLHl0W8g"))
                .body("'copy_right'", containsString("jx_6URYO"))
                .body("'author'", containsString("5"));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/699")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_59_find.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 699, " + 
                    " \"name\": \"wCGd29n\", " + 
                    " \"date_published\": \"1967-11-01T21:26:40.759Z\", " + 
                    " \"description_material\": \"ECkMjL30Qexv\", " + 
                    " \"description_safety\": \"ECkMjL30Qexv\", " + 
                    " \"time_min\": -2147482955, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 884, " + 
                    " \"group\": \"_ItPUP6jOrM\", " + 
                    " \"name\": \"INTEGRATION TEST ADMINISTRATOR\" " + 
                    " }, " + 
                    " { " + 
                    " \"group\": \"hrhNGVUr\", " + 
                    " \"name\": \"\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 275, " + 
                    " \"mime_type\": \"jE5\", " + 
                    " \"uri\": \"\", " + 
                    " \"name\": \"_EM_13634_XYZ_\", " + 
                    " \"copy_right\": \"_EM_13635_XYZ_\" " + 
                    " }, " + 
                    " \"activities_count\": 301 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [] " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities?" + 
                    "ratings_count_min=&" + 
                    "random=4QpgZnWy&" + 
                    "time_1=EwPSMPlnsGoT&" + 
                    "favourites=&" + 
                    "ratings_average_min=ZLNA&" + 
                    "age_2=ZxUjlC1VygoW&" + 
                    "age_1=v3Q_2r5kGK9FNi&" + 
                    "name=LM8HcT2&" + 
                    "categories=sufATGufp&" + 
                    "id=ib4cHeY&" + 
                    "time_2=e8t3E9rLzqrBJQdY&" + 
                    "participants=1Dia")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_59_find
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities?" + 
                    "name=wCGd29n&" + 
                    "categories=ztsHfNMXQr&" + 
                    "age_1=S7uAXF&" + 
                    "age_2=_EM_13638_XYZ_&" + 
                    "participants=_EM_13639_XYZ_&" + 
                    "time_1=fPii6jFuUcDqoS&" + 
                    "time_2=g7Zpj3p1aZ&" + 
                    "id=699&" + 
                    "ratings_count_min=640&" + 
                    "ratings_average_min=-2.147482955E9&" + 
                    "random=459&" + 
                    "favourites=53")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Could not understand the request. Perhaps you sent text instead of integers?"));
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(4))
                .body("[0].'name'", containsString("wCGd29n"))
                .body("[0].'email_address'", containsString("L9FZL5_qd3jiJ"))
                .body("[0].'authorization_level'", numberMatches(609.0))
                .body("[0].'identities'.size()", equalTo(0))
                .body("[1].'name'", containsString("INTEGRATION TEST MODERATOR"))
                .body("[1].'email_address'", nullValue())
                .body("[1].'authorization_level'", numberMatches(10.0))
                .body("[1].'identities'.size()", equalTo(1))
                .body("[1].'identities'[0].'date_created'", numberMatches(9.811764E11))
                .body("[1].'identities'[0].'type'", containsString("API"))
                .body("[1].'identities'[0].'value'", containsString("moderator"))
                .body("[2].'name'", containsString("INTEGRATION TEST USER"))
                .body("[2].'email_address'", nullValue())
                .body("[2].'authorization_level'", numberMatches(0.0))
                .body("[2].'identities'.size()", equalTo(1))
                .body("[2].'identities'[0].'date_created'", numberMatches(9.811764E11))
                .body("[2].'identities'[0].'type'", containsString("API"))
                .body("[2].'identities'[0].'value'", containsString("user"))
                ; // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/777?attrs=F56FqvnGO6WYvrJi")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/v2/activities/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_150_putOnV2ActivWithQueryParamCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 410L)
                .d("KEY", "\"4\"")
                .d("VALID_FROM", "\"2085-11-03 12:30:39\"")
                .d("VALID_TO", "\"1995-06-17 02:21:15\"")
                .d("VALUE", "\"wG\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_167_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"xPTJ6oSg5QNpdgt\", " + 
                    " \"date_published\": \"2087-11-25T-1:57:33.607Z\", " + 
                    " \"date_updated\": \"1993-02-00T24:34:11.031Z\", " + 
                    " \"description_material\": \"j2sQ9J\", " + 
                    " \"description_main\": \"Jlo4_Lttb\", " + 
                    " \"description_safety\": \"Te\", " + 
                    " \"description_notes\": \"b\", " + 
                    " \"age_min\": -2147482671, " + 
                    " \"age_max\": -2147483289, " + 
                    " \"participants_min\": 825, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 690, " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"f6LgzmIrp\", " + 
                    " \"name\": \"OrYsX03\", " + 
                    " \"capture_date\": \"2084-13-27T00:23:18.671Z\", " + 
                    " \"copy_right\": \"3LBvGFfxs\" " + 
                    " } " + 
                    " }, " + 
                    " { " + 
                    " \"media_file\": { " + 
                    " \"id\": 214, " + 
                    " \"mime_type\": \"6SQOuGKKGi\", " + 
                    " \"uri\": \"myw88Nk8Jgq\", " + 
                    " \"name\": \"2OK_ikpOsS\", " + 
                    " \"capture_date\": \"1940-08-12T12:05:56.370Z\" " + 
                    " }, " + 
                    " \"activities_count\": 693 " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 541 " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 172, " + 
                    " \"ratings_average\": 0.8085358459980387 " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/activities/123?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/v1/system_messages/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_151_putOnSystem_messagCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 944L)
                .d("KEY", "\"_EM_15775_XYZ_\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"2ksvVSkYc5\"")
            .and().insertInto("SYSTEM_MESSAGE", 407L)
                .d("KEY", "\"mijqetHSksqkWEdm\"")
                .d("VALID_FROM", "\"2008-09-28 23:15:19\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"useq\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/SystemMessageResource_102_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 913, " + 
                    " \"valid_to\": \"2029-07-07T24:22:54.879Z\", " + 
                    " \"valid_from\": \"2059-03-04T13:12:06.450Z\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/-4193391")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/SystemMessageResource_102_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/v1/media_files/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_152_putOnV1Media_filWithQueryParamCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_295_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"iHiog00J\", " + 
                    " \"uri\": \"F\", " + 
                    " \"capture_date\": \"2007-08-07T12:43:33.813Z\", " + 
                    " \"copy_right\": \"iK8L3DAs7lwW\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/127?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_295_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/v1/categories/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_153_putOnCategoriCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 241L)
                .d("URI", "\"_EM_7471_XYZ_\"")
            .and().insertInto("TAG", 240L)
                .d("GRP", "\"3ptZiB\"")
                .d("NAME", "\"4flH_5W8vevy\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/TagResource_85_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -2416518793200934027, " + 
                    " \"name\": \"INTEGRATION TEST ADMINISTRATOR\", " + 
                    " \"activities_count\": 534 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/-2416518793200934027?EMextraParam123=_EM_7473_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * 1 - (400) PATCH:/api/v2/activities/{id}
    * 2 - (500) PATCH:/api/v2/activities/{id}
    * 3 - (200) POST:/api/v2/tags
    * 4 - (500) PUT:/api/v2/tags/{id}
    * 5 - (500) PUT:/api/v2/tags/{id}
    * Found 3 potential faults of type-code 100
    */
    @Test @Timeout(60)
    public void test_154_putOnTagCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 224L)
            .and().insertInto("ACTIVITY", 223L)
            .and().insertInto("ACTIVITY_RELATION", 222L)
                .r("ACTIVITY_1_ID", 223L)
                .r("ACTIVITY_2_ID", 224L)
                .d("OWNER_ID", "2")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 310, " + 
                    " \"name\": \"idsZ86\", " + 
                    " \"date_created\": \"2063-01-15T10:36:24.118+16:52\", " + 
                    " \"date_updated\": \"1985-12-28T11:02:01.964Z\", " + 
                    " \"description_material\": \"\", " + 
                    " \"description_prepare\": \"Ckrx3SYw2\", " + 
                    " \"age_max\": -2147482833, " + 
                    " \"time_min\": 962, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"CjWy\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"NQ\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"BZ\", " + 
                    " \"name\": \"Te\", " + 
                    " \"capture_date\": \"2013-03-16T20:46:21Z\", " + 
                    " \"copy_right\": \"h3Iqxtf97HK\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 732, " + 
                    " \"name\": \"2T39qqhWhw1GNF\", " + 
                    " \"email_address\": \"ZQmeP\" " + 
                    " } " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v2/activities/310")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_167_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .patch(baseUrlOfSut + "/api/v2/activities/310")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"\", " + 
                    " \"name\": \"tkJU\", " + 
                    " \"media_file\": { " + 
                    " \"uri\": \"V\", " + 
                    " \"copy_right\": \"\" " + 
                    " }, " + 
                    " \"activities_count\": 326 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/tags")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString(""))
                .body("'name'", containsString("tkJU"))
                .body("'media_file'.'uri'", containsString("V"))
                .body("'media_file'.'copy_right'", containsString(""))
                .body("'activities_count'", numberMatches(326.0));
        String 
        location_tags__500 = "/api/v2/tags" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/TagResource_89_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 427, " + 
                    " \"group\": \"KNwapyOnewq\" " + 
                    " } ")
                .put(resolveLocation(location_tags__500, baseUrlOfSut + "/api/v2/tags/427?EMextraParam123=42"))
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/TagResource_89_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/TagResource_85_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v2/tags/427?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/v2/tags/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_155_putOnTagCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/TagResource_85_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -9054505019220107905, " + 
                    " \"group\": \"KuVlLF0OPNyeQ5Sl\", " + 
                    " \"name\": \"nPLDhe\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/-9054505019220107905?EMextraParam123=_EM_7201_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/v2/tags/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_156_putOnTagCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 225L)
                .d("AUTHORIZATION_LEVEL", "177")
                .d("NAME", "\"SV\"")
            .and().insertInto("ACTIVITY", 224L)
            .and().insertInto("ACTIVITY", 223L)
            .and().insertInto("ACTIVITY_RELATION", 222L)
                .r("ACTIVITY_1_ID", 223L)
                .r("ACTIVITY_2_ID", 224L)
                .d("OWNER_ID", "2")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/TagResource_85_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 427, " + 
                    " \"group\": \"KNwapyOnewq\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/427?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/v1/activities/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_157_putOnActivCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 576L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_167_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_B3CE0v\", " + 
                    " \"description_material\": \"1E8jeQR\", " + 
                    " \"description_introduction\": \"KO_tVAC4B\", " + 
                    " \"description_prepare\": \"JNGjGr7mT\", " + 
                    " \"description_notes\": \"MAT7A9zINVxhhyBw\", " + 
                    " \"participants_min\": 680, " + 
                    " \"time_max\": 173, " + 
                    " \"source\": \"UB9WiTTtd7Z\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"name\": \"wG24otsFF5W\", " + 
                    " \"activities_count\": 296 " + 
                    " }, " + 
                    " { " + 
                    " \"name\": \"02xhsbwJqt5KFK\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": -5855815760473603123 " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 403, " + 
                    " \"ratings_sum\": 93, " + 
                    " \"related\": [ " + 
                    " 631, " + 
                    " 2525323386626179613 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/activities/156")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/v1/system_messages/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_158_putOnSystem_messagCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/SystemMessageResource_102_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_3365_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"key\": \"roKg1xvC3q4\", " + 
                    " \"valid_from\": \"1964-01-26T01:04:59.807Z\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/254?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/SystemMessageResource_102_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/v1/users/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_159_putOnUserCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/UserResource_100_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 382, " + 
                    " \"type\": \"GOOGLE\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 1134759500 " + 
                    " }, " + 
                    " { " + 
                    " \"type\": \"API\" " + 
                    " }, " + 
                    " { " + 
                    " \"type\": \"API\", " + 
                    " \"value\": \"_\" " + 
                    " }, " + 
                    " {} " + 
                    " ] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/139")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/UserResource_100_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/v1/categories/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_160_putOnCategoriCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/TagResource_85_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 798, " + 
                    " \"group\": \"Jg6Dg5\", " + 
                    " \"media_file\": { " + 
                    " \"capture_date\": \"2006-04-04T16:38:21.615Z\" " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/798")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/TagResource_85_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/v1/activities/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_161_putOnActivCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 290L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_167_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v1/activities/-48658")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/api/v1/media_files
    * 2 - (500) POST:/api/v1/media_files
    * 3 - (200) POST:/api/v1/media_files
    * 4 - (500) PUT:/api/v1/media_files/{id}
    * Found 2 potential faults of type-code 100
    */
    @Test @Timeout(60)
    public void test_162_putOnMedia_filCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1538L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2091-06-17 17:15:02\"")
                .d("COPY_RIGHT", "\"lC\"")
                .d("MIME_TYPE", "\"\"")
                .d("NAME", "\"nEj8uQaS66S\"")
                .d("URI", "\"rBKZOW1bXYj\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"KHBtWKLRz\", " + 
                    " \"uri\": \"PfCeRmhzQr9c3jo\", " + 
                    " \"name\": \"FTssO6uMdW_\", " + 
                    " \"copy_right\": \"19WH1drTM\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("KHBtWKLRz"))
                .body("'uri'", containsString("PfCeRmhzQr9c3jo"))
                .body("'name'", containsString("FTssO6uMdW_"))
                .body("'copy_right'", containsString("19WH1drTM"));
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_109_create.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .post(baseUrlOfSut + "/api/v1/media_files?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_109_create
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        ValidatableResponse res_2 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"VhAV\", " + 
                    " \"name\": \"HW43fRfOr_Fus\", " + 
                    " \"copy_right\": \"wCM\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("VhAV"))
                .body("'name'", containsString("HW43fRfOr_Fus"))
                .body("'copy_right'", containsString("wCM"));
        String 
        location_media_files__287 = "/api/v1/media_files" + "/" + res_2.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/MediaFile_134_setUri.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"capture_date\": \"2083-10-30T01:30:34.340Z\", " + 
                    " \"copy_right\": \"a9sGabdrS8\", " + 
                    " \"author\": \"6WmJHS_NU\" " + 
                    " } ")
                .put(resolveLocation(location_media_files__287, baseUrlOfSut + "/api/v1/media_files/857"))
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/MediaFile_134_setUri
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/api/v1/activities
    * 2 - (500) PUT:/api/v1/activities/{id}
    * 3 - (400) PUT:/api/v1/activities/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_163_putOnActivCauses500_internalServerError() throws Exception {
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_21164_XYZ_\", " + 
                    " \"description_main\": \"OzVeRYoRCiW\", " + 
                    " \"participants_min\": 731, " + 
                    " \"time_min\": 408, " + 
                    " \"activity\": { " + 
                    " \"favourites_count\": 70823578 " + 
                    " } " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(1))
                .body("'properties_revisions'[0].'name'", containsString("_EM_21164_XYZ_"))
                .body("'properties_revisions'[0].'date_created'", containsString("2025-09-04T17:07:48.605Z"))
                .body("'properties_revisions'[0].'description_main'", containsString("OzVeRYoRCiW"))
                .body("'properties_revisions'[0].'participants_min'", numberMatches(731.0))
                .body("'properties_revisions'[0].'time_min'", numberMatches(408.0))
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'properties'.'name'", containsString("_EM_21164_XYZ_"))
                .body("'properties'.'date_created'", containsString("2025-09-04T17:07:48.605Z"))
                .body("'properties'.'description_main'", containsString("OzVeRYoRCiW"))
                .body("'properties'.'participants_min'", numberMatches(731.0))
                .body("'properties'.'time_min'", numberMatches(408.0));
        String 
        location_activities__2 = "/api/v1/activities" + "/" + res_0.extract().body().path("id").toString();
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .put(resolveLocation(location_activities__2, baseUrlOfSut + "/api/v1/activities/515"))
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityProperties_369_isContentEqual
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"lQdn0cmbB2RW9b\", " + 
                    " \"date_updated\": \"2072-05-03T00:43:23+03:53\", " + 
                    " \"description_material\": \"A\", " + 
                    " \"description_prepare\": \"c7J0hgJZOC5IDtb\", " + 
                    " \"description_main\": \"E8aIQ13E_mp\", " + 
                    " \"description_safety\": \"3h_PkbySBg0O\", " + 
                    " \"description_notes\": \"Pr\", " + 
                    " \"age_min\": -372, " + 
                    " \"participants_min\": 364, " + 
                    " \"time_min\": 1274531158, " + 
                    " \"activity\": { " + 
                    " \"id\": 971, " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_sum\": 669, " + 
                    " \"ratings_average\": 0.05412698928299464, " + 
                    " \"related\": [ " + 
                    " 128, " + 
                    " -225568001 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/activities/515")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/v1/users/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_164_putOnUserCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel.
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v1/users/-1167216850")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/UserResource_126_assertAuthorizationLevel
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PUT:/api/v1/media_files/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_165_putOnV1Media_filCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_295_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"\", " + 
                    " \"copy_right\": \"_EM_9468_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/-4780887225901559885")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_295_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v2/activities/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_166_deleteOnV2ActivCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_219_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/146")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v1/media_files/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_167_deleteOnV1Media_filCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/MediaFileDao_64_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/411")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v1/media_files/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_168_deleteOnV1Media_filWithQueryParamsVerify_unused() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/MediaFileDao_64_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/media_files/199?" + 
                    "verify_unused=true&" + 
                    "EMextraParam123=_EM_2132_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v1/media_files/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_169_deleteOnV1Media_filWithQueryParamCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/MediaFileDao_64_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/media_files/972?verify_unused=false")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v1/system_messages/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_170_deleteOnSystem_messagCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/SystemMessageDao_41_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/system_messages/739?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/SystemMessageDao_41_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v2/tags/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_171_deleteOnV2TagWithQueryParamsCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3184L)
                .d("AUTHOR", "\"Z8\"")
                .d("CAPTURE_DATE", "\"2084-08-11 09:51:11\"")
                .d("COPY_RIGHT", "\"33Rv\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"rVqLhUvFT\"")
                .d("URI", "\"65\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_72_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/tags/172?" + 
                    "ratings_average_min=4s_sCALODT5tV8Bs&" + 
                    "age_2=F0nYjM43UK&" + 
                    "categories=QbN1jdd&" + 
                    "participants=X5fT")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v1/users/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_172_deleteOnUserCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/UserDao_48_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/users/378")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/UserDao_48_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v1/activities/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_173_deleteOnV1ActivWithQueryParamCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_219_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/activities/248?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v1/categories/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_174_deleteOnV1CategoriWithQueryParamCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_72_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/categories/691?EMextraParam123=_EM_2158_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v1/media_files/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_175_deleteOnMedia_filCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 20L)
                .d("AUTHOR", "\"bj6Gw\"")
                .d("CAPTURE_DATE", "\"2005-03-05 01:26:59\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"1Gd_m\"")
                .d("NAME", "\"i01a3LLWixrZUI\"")
                .d("URI", "\"_EM_4669_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/MediaFileDao_64_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/media_files/-16776244?" + 
                    "verify_unused=true&" + 
                    "EMextraParam123=_EM_3170_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/MediaFileDao_64_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v1/categories/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_176_deleteOnV1CategoriCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_72_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/categories/-1436404580")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v1/users/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_177_deleteOnUserCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/UserDao_48_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/-541449129")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/UserDao_48_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v2/tags/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_178_deleteOnV2TagWithQueryParamCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1173L)
                .d("URI", "\"_EM_17303_XYZ_\"")
            .and().insertInto("TAG", 1172L)
                .d("GRP", "\"_EM_17304_XYZ_\"")
                .d("NAME", "\"lT9RR8Z0VJ72gHP\"")
                .r("MEDIA_FILE_ID", 1173L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_72_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/tags/-1204582719?ratings_average_min=gW95mGM")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v1/activities/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_179_deleteOnActivCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("SYSTEM_MESSAGE", 337L)
                .d("KEY", "\"NVdp\"")
                .d("VALID_FROM", "NULL")
                .d("VALID_TO", "\"1970-04-26 14:45:51\"")
                .d("VALUE", "\"UhVitJHJy7lJas6\"")
            .and().insertInto("MEDIA_FILE", 357L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"1926-01-20 10:03:29\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"_EM_11185_XYZ_\"")
                .d("NAME", "NULL")
                .d("URI", "\"4t0yseiZl\"")
            .and().insertInto("MEDIA_FILE", 363L)
                .d("URI", "\"xPBlVHaP5OLOwPXS\"")
            .and().insertInto("ACTIVITY", 361L)
            .and().insertInto("ACTIVITY", 360L)
            .and().insertInto("ACTIVITY_PROPERTIES", 359L)
                .r("ACTIVITY_ID", 360L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 358L)
                .r("ACTIVITY_PROPERTIES_ID", 359L)
                .r("MEDIA_FILE_ID", 363L)
                .d("FEATURED", "false")
            .and().insertInto("ACTIVITY", 584L)
            .and().insertInto("ACTIVITY", 583L)
            .and().insertInto("ACTIVITY_RELATION", 582L)
                .r("ACTIVITY_1_ID", 360L)
                .r("ACTIVITY_2_ID", 584L)
                .d("OWNER_ID", "1")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_219_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/-1048313")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_219_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v2/tags/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_180_deleteOnV2TagCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 2478L)
                .d("URI", "\"_EM_22595_XYZ_\"")
            .and().insertInto("TAG", 2477L)
                .d("GRP", "\"NekVov3Ga6H\"")
                .d("NAME", "\"_EM_22596_XYZ_\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/TagDao_72_delete.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/tags/543")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/TagDao_72_delete
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PATCH:/api/v2/activities/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_181_patchOnV2ActivCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_167_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .patch(baseUrlOfSut + "/api/v2/activities/650")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PATCH:/api/v1/activities/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_182_patchOnV1ActivCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_167_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"description_material\": \"_EM_5010_XYZ_\", " + 
                    " \"description_main\": \"_EM_5012_XYZ_\", " + 
                    " \"description_safety\": \"8KWwSNmgFXbTCJM\", " + 
                    " \"age_max\": -2147483635, " + 
                    " \"participants_min\": 55, " + 
                    " \"time_min\": 834, " + 
                    " \"featured\": true, " + 
                    " \"source\": \"mFmYZ8rdV11U\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 845, " + 
                    " \"mime_type\": \"m6T\", " + 
                    " \"uri\": \"bEn9fd2w\", " + 
                    " \"name\": \"O8_1UKMRyPe_tx\", " + 
                    " \"copy_right\": \"ypx8QiqzX1nHd\", " + 
                    " \"author\": \"_C4\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"email_address\": \"\" " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"ratings_sum\": 291, " + 
                    " \"ratings_average\": 0.46379122507426696, " + 
                    " \"related\": [ " + 
                    " 382, " + 
                    " 410 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v1/activities/200")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PATCH:/api/v2/activities/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_183_patchOnV2ActivWithQueryParamCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1044L)
            .and().insertInto("USERS", 1116L)
                .d("AUTHORIZATION_LEVEL", "973")
                .d("NAME", "\"wSL3JsU\"")
            .and().insertInto("ACTIVITY", 1115L)
            .and().insertInto("ACTIVITY", 1114L)
            .and().insertInto("ACTIVITY_RELATION", 1113L)
                .r("ACTIVITY_1_ID", 1115L)
                .r("ACTIVITY_2_ID", 1114L)
                .d("OWNER_ID", "3")
            .and().insertInto("MEDIA_FILE", 3289L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"ERu9lfd\"")
                .d("NAME", "\"Tts3dCOo4h\"")
                .d("URI", "\"dyO4Fkv0w\"")
            .and().insertInto("MEDIA_FILE", 3306L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 3305L)
                .d("GRP", "\"ysKHu\"")
                .d("NAME", "\"r76cNn4tBT\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 3309L)
                .d("URI", "\"HLdzV6qyu\"")
            .and().insertInto("TAG", 3308L)
                .d("GRP", "\"4vkOkJ2\"")
                .d("NAME", "\"jrboI99F1coqMNF\"")
            .and().insertInto("TAG_DERIVED", 3307L)
                .r("TAG_ID", 3308L)
                .d("ACTIVITIES_COUNT", "NULL")
            .and().insertInto("USERS", 3422L)
                .d("AUTHORIZATION_LEVEL", "524")
                .d("NAME", "\"PaeLe_\"")
            .and().insertInto("ACTIVITY", 3421L)
            .and().insertInto("ACTIVITY", 3420L)
            .and().insertInto("ACTIVITY_PROPERTIES", 3419L)
                .d("AGE_MAX", "86")
                .d("AGE_MIN", "NULL")
                .d("DATE_CREATED", "\"1951-08-09 10:15:02\"")
                .d("DATE_PUBLISHED", "\"2080-10-17 02:52:31\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "NULL")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "NULL")
                .d("FEATURED", "NULL")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "NULL")
                .d("PARTICIPANTS_MIN", "687")
                .d("SOURCE", "\"dMPmUItVqg79BFR\"")
                .d("TIME_MAX", "NULL")
                .d("TIME_MIN", "858")
                .r("ACTIVITY_ID", 3420L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_167_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .patch(baseUrlOfSut + "/api/v2/activities/-964614210891925118?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) PATCH:/api/v1/activities/{id}
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_184_patchOnV1ActivCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1548L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/dao/ActivityDao_167_update.
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .patch(baseUrlOfSut + "/api/v1/activities/-509")
                .then()
                .statusCode(500)// se/devscout/scoutapi/dao/ActivityDao_167_update
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages/{id}
    */
    @Test @Timeout(60)
    public void test_185_getOnSystem_messagReturnsEmptyObjectUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 41L)
            .and().insertInto("SYSTEM_MESSAGE", 2863L)
                .d("KEY", "\"3M7z\"")
                .d("VALID_FROM", "\"2092-08-12 03:22:17\"")
                .d("VALID_TO", "\"1963-03-12 15:44:37\"")
                .d("VALUE", "\"DZorpK\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages/1?attrs=AOMF5rUgkX9yK")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages/{id}
    */
    @Test @Timeout(60)
    public void test_186_getOnV1System_messagWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages/865?attrs=_EM_4307_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/activities/{id}
    */
    @Test @Timeout(60)
    public void test_187_getOnActivReturnsObjectUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1679L)
                .d("AUTHOR", "\"CRG_fKQFJF\"")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"1HXTsGS6c_\"")
                .d("NAME", "\"k0G\"")
                .d("URI", "\"eTkb\"")
            .and().insertInto("ACTIVITY", 1680L)
            .and().insertInto("USERS", 1683L)
                .d("AUTHORIZATION_LEVEL", "364")
                .d("NAME", "\"J\"")
            .and().insertInto("ACTIVITY", 1682L)
            .and().insertInto("ACTIVITY_RATING", 1681L)
                .r("ACTIVITY_ID", 1682L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "148")
            .and().insertInto("USERS", 1743L)
                .d("AUTHORIZATION_LEVEL", "504")
                .d("NAME", "\"XDl4GpFRzL43Sg5\"")
            .and().insertInto("ACTIVITY", 1742L)
            .and().insertInto("ACTIVITY", 1741L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1740L)
                .d("AGE_MAX", "-722")
                .d("AGE_MIN", "-2147482900")
                .d("DATE_CREATED", "NULL")
                .d("DATE_PUBLISHED", "NULL")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "\"nASZ\"")
                .d("DESCRIPTION_MAIN", "NULL")
                .d("DESCRIPTION_MATERIAL", "\"Q5R7Q\"")
                .d("DESCRIPTION_NOTES", "NULL")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"3h_PkbySBg0O\"")
                .d("FEATURED", "NULL")
                .d("NAME", "\"u\"")
                .d("PARTICIPANTS_MAX", "572")
                .d("PARTICIPANTS_MIN", "NULL")
                .d("SOURCE", "\"4eUJAcN8m6\"")
                .d("TIME_MAX", "547")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 1682L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("MEDIA_FILE", 1750L)
                .d("URI", "\"LNowTJEHY\"")
            .and().insertInto("TAG", 1749L)
                .d("GRP", "\"CMxWoQUL\"")
                .d("NAME", "\"CiP1vXZJEhgyfpF\"")
            .and().insertInto("USERS", 1748L)
                .d("AUTHORIZATION_LEVEL", "43")
                .d("NAME", "\"fFwhra\"")
            .and().insertInto("ACTIVITY", 1747L)
            .and().insertInto("ACTIVITY", 1746L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1745L)
                .r("ACTIVITY_ID", 1682L)
            .and().insertInto("ACTIVITY_PROPERTIES_TAG", 1744L)
                .r("ACTIVITY_PROPERTIES_ID", 1745L)
                .r("TAG_ID", 1749L)
            .and().insertInto("MEDIA_FILE", 1756L)
                .d("URI", "\"yOGYoeN45cft0vI\"")
            .and().insertInto("USERS", 1755L)
                .d("AUTHORIZATION_LEVEL", "956")
                .d("NAME", "\"W8KHPnrCFgt0s6eE\"")
            .and().insertInto("ACTIVITY", 1754L)
            .and().insertInto("ACTIVITY", 1753L)
            .and().insertInto("ACTIVITY_PROPERTIES", 1752L)
                .r("ACTIVITY_ID", 1753L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 1751L)
                .r("ACTIVITY_PROPERTIES_ID", 1740L)
                .r("MEDIA_FILE_ID", 1750L)
                .d("FEATURED", "false")
            .and().insertInto("ACTIVITY", 1370L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities/2")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'properties_revisions'.size()", equalTo(2))
                .body("'properties_revisions'[0].'name'", containsString("u"))
                .body("'properties_revisions'[0].'date_published'", nullValue())
                .body("'properties_revisions'[0].'date_created'", nullValue())
                .body("'properties_revisions'[0].'date_updated'", nullValue())
                .body("'properties_revisions'[0].'description_material'", containsString("Q5R7Q"))
                .body("'properties_revisions'[0].'description_introduction'", containsString("nASZ"))
                .body("'properties_revisions'[0].'description_prepare'", nullValue())
                .body("'properties_revisions'[0].'description_main'", nullValue())
                .body("'properties_revisions'[0].'description_safety'", containsString("3h_PkbySBg0O"))
                .body("'properties_revisions'[0].'description_notes'", nullValue())
                .body("'properties_revisions'[0].'age_min'", numberMatches(-2.1474829E9))
                .body("'properties_revisions'[0].'age_max'", numberMatches(-722.0))
                .body("'properties_revisions'[0].'participants_min'", nullValue())
                .body("'properties_revisions'[0].'participants_max'", numberMatches(572.0))
                .body("'properties_revisions'[0].'time_min'", nullValue())
                .body("'properties_revisions'[0].'time_max'", numberMatches(547.0))
                .body("'properties_revisions'[0].'featured'", nullValue())
                .body("'properties_revisions'[0].'source'", containsString("4eUJAcN8m6"))
                .body("'properties_revisions'[0].'tags'.size()", equalTo(0))
                .body("'properties_revisions'[0].'media_files'.size()", equalTo(1))
                .body("'properties_revisions'[0].'media_files'[0].'mime_type'", nullValue())
                .body("'properties_revisions'[0].'media_files'[0].'uri'", containsString("LNowTJEHY"))
                .body("'properties_revisions'[0].'media_files'[0].'name'", nullValue())
                .body("'properties_revisions'[0].'media_files'[0].'capture_date'", nullValue())
                .body("'properties_revisions'[0].'media_files'[0].'copy_right'", nullValue())
                .body("'properties_revisions'[0].'media_files'[0].'author'", nullValue())
                .body("'properties_revisions'[0].'author'", nullValue())
                .body("'properties_revisions'[1].'name'", nullValue())
                .body("'properties_revisions'[1].'date_published'", nullValue())
                .body("'properties_revisions'[1].'date_created'", nullValue())
                .body("'properties_revisions'[1].'date_updated'", nullValue())
                .body("'properties_revisions'[1].'description_material'", nullValue())
                .body("'properties_revisions'[1].'description_introduction'", nullValue())
                .body("'properties_revisions'[1].'description_prepare'", nullValue())
                .body("'properties_revisions'[1].'description_main'", nullValue())
                .body("'properties_revisions'[1].'description_safety'", nullValue())
                .body("'properties_revisions'[1].'description_notes'", nullValue())
                .body("'properties_revisions'[1].'age_min'", nullValue())
                .body("'properties_revisions'[1].'age_max'", nullValue())
                .body("'properties_revisions'[1].'participants_min'", nullValue())
                .body("'properties_revisions'[1].'participants_max'", nullValue())
                .body("'properties_revisions'[1].'time_min'", nullValue())
                .body("'properties_revisions'[1].'time_max'", nullValue())
                .body("'properties_revisions'[1].'featured'", nullValue())
                .body("'properties_revisions'[1].'source'", nullValue())
                .body("'properties_revisions'[1].'tags'.size()", equalTo(1))
                .body("'properties_revisions'[1].'tags'[0].'group'", containsString("CMxWoQUL"))
                .body("'properties_revisions'[1].'tags'[0].'name'", containsString("CiP1vXZJEhgyfpF"))
                .body("'properties_revisions'[1].'tags'[0].'media_file'", nullValue())
                .body("'properties_revisions'[1].'tags'[0].'activities_count'", numberMatches(0.0))
                .body("'properties_revisions'[1].'media_files'.size()", equalTo(0))
                .body("'properties_revisions'[1].'author'", nullValue())
                .body("'ratings_count'", numberMatches(0.0))
                .body("'ratings_sum'", numberMatches(0.0))
                .body("'favourites_count'", numberMatches(0.0))
                .body("'ratings_average'", numberMatches(-1.0))
                .body("'properties'", nullValue())
                .body("'related'.size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_188_getOnActivReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/148?attrs=ubdadZZ05J9x")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_189_getOnV2ActivReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/676")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories/{id}
    */
    @Test @Timeout(60)
    public void test_190_getOnV1CategoriWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories/850?attrs=_EM_54_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags/{id}
    */
    @Test @Timeout(60)
    public void test_191_getOnV2TagWithQueryParamsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_23_XYZ_")
                .get(baseUrlOfSut + "/api/v2/tags/860?" + 
                    "attrs=_EM_22_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files/{id}
    */
    @Test @Timeout(60)
    public void test_192_getOnV1Media_filWithQueryParamsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/460?" + 
                    "attrs=_EM_2131_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files/{id}
    */
    @Test @Timeout(60)
    public void test_193_getOnV1Media_filReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/media_files/1356798209")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages/{id}
    */
    @Test @Timeout(60)
    public void test_194_getOnV1System_messagReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages/-2110309262")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users/profile
    */
    @Test @Timeout(60)
    public void test_195_getOnUsersProfileWithQueryParamReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1111_XYZ_")
                .get(baseUrlOfSut + "/api/v1/users/profile?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'role_permissions'.size()", equalTo(9))
                .body("'role_permissions'", hasItems("activity_create", "activity_edit_own", "auth_profile_edit", "comment_create", "comment_edit_own", "mediaitem_edit_own", "rating_set_own", "reference_edit_own", "system_message_read"))
                .body("'name'", containsString("INTEGRATION TEST USER"))
                .body("'role'", containsString("user"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system/roles
    */
    @Test @Timeout(60)
    public void test_196_getOnSystemRolesWithQueryParamReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/roles?EMextraParam123=_EM_19_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_197_getOnUserReturnsEmptyObjectUsingSql() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/2?attrs=_EM_11232_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/activities/{id}
    */
    @Test @Timeout(60)
    public void test_198_getOnActivReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities/165?" + 
                    "attrs=_EM_30_XYZ_&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags/{id}
    */
    @Test @Timeout(60)
    public void test_199_getOnTagReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags/572")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags/{id}
    */
    @Test @Timeout(60)
    public void test_200_getOnTagReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags/782")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_201_getOnActivReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1085_XYZ_")
                .get(baseUrlOfSut + "/api/v2/activities/236?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files/{id}
    */
    @Test @Timeout(60)
    public void test_202_getOnMedia_filReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/170?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system_messages/{id}
    */
    @Test @Timeout(60)
    public void test_203_getOnV1System_messagWithQueryParamsReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system_messages/653?" + 
                    "attrs=eIJjPs&" + 
                    "EMextraParam123=_EM_1102_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system/roles
    */
    @Test @Timeout(60)
    public void test_204_getOnRolesReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/roles")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/activities/{id}
    */
    @Test @Timeout(60)
    public void test_205_getOnV1ActivWithQueryParamReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1114_XYZ_")
                .get(baseUrlOfSut + "/api/v1/activities/340?attrs=_EM_1112_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories/{id}
    */
    @Test @Timeout(60)
    public void test_206_getOnCategoriReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/categories/542?" + 
                    "attrs=_EM_1139_XYZ_&" + 
                    "EMextraParam123=_EM_1140_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files/{id}
    */
    @Test @Timeout(60)
    public void test_207_getOnMedia_filReturnsContentUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 2648L)
            .and().insertInto("MEDIA_FILE", 2655L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2027-11-04 23:30:07\"")
                .d("COPY_RIGHT", "\"flsDByhdgpy\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "NULL")
                .d("URI", "\"\"")
            .and().insertInto("MEDIA_FILE", 2661L)
                .d("URI", "\"_EM_23131_XYZ_\"")
            .and().insertInto("TAG", 2660L)
                .d("GRP", "\"_EM_23132_XYZ_\"")
                .d("NAME", "\"z84tDc4RblkVjRP\"")
                .d("MEDIA_FILE_ID", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/486?attrs=ZxnWriQrsXadUP")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system/roles
    */
    @Test @Timeout(60)
    public void test_208_getOnRolesReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/roles")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/system/roles
    */
    @Test @Timeout(60)
    public void test_209_getOnRolesReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/roles")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'permission_levels'.'category_edit'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_create'", numberMatches(10.0))
                .body("'permission_levels'.'reference_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'system_message_read'", numberMatches(-100.0))
                .body("'permission_levels'.'auth_role_list'", numberMatches(20.0))
                .body("'permission_levels'.'reference_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_create'", numberMatches(20.0))
                .body("'permission_levels'.'activity_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'comment_create'", numberMatches(0.0))
                .body("'permission_levels'.'category_create'", numberMatches(10.0))
                .body("'permission_levels'.'activity_edit'", numberMatches(10.0))
                .body("'permission_levels'.'reference_create'", numberMatches(10.0))
                .body("'permission_levels'.'mediaitem_edit'", numberMatches(10.0))
                .body("'permission_levels'.'auth_user_edit'", numberMatches(20.0))
                .body("'permission_levels'.'auth_profile_edit'", numberMatches(0.0))
                .body("'permission_levels'.'comment_edit'", numberMatches(10.0))
                .body("'permission_levels'.'system_message_manage'", numberMatches(20.0))
                .body("'permission_levels'.'mediaitem_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assignown'", numberMatches(10.0))
                .body("'permission_levels'.'rating_set_own'", numberMatches(0.0))
                .body("'permission_levels'.'auth_role_assign'", numberMatches(20.0))
                .body("'permission_levels'.'comment_edit_own'", numberMatches(0.0))
                .body("'permission_levels'.'activity_create'", numberMatches(0.0))
                .body("'role_levels'.'administrator'", numberMatches(20.0))
                .body("'role_levels'.'moderator'", numberMatches(10.0))
                .body("'role_levels'.'limited_user'", numberMatches(-1.0))
                .body("'role_levels'.'user'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_210_getOnUserReturnsContentUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 41L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users/80?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users/profile
    */
    @Test @Timeout(60)
    public void test_211_getOnProfileReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/profile")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'role_permissions'.size()", equalTo(18))
                .body("'role_permissions'", hasItems("activity_create", "activity_edit", "activity_edit_own", "auth_profile_edit", "auth_role_assignown", "category_create", "category_edit", "comment_create", "comment_edit", "comment_edit_own", "mediaitem_create", "mediaitem_edit", "mediaitem_edit_own", "rating_set_own", "reference_create", "reference_edit", "reference_edit_own", "system_message_read"))
                .body("'name'", containsString("INTEGRATION TEST MODERATOR"))
                .body("'role'", containsString("moderator"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories/{id}
    */
    @Test @Timeout(60)
    public void test_212_getOnV1CategoriReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/categories/240")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_213_getOnActivReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_3130_XYZ_")
                .get(baseUrlOfSut + "/api/v2/activities/-860163299?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_214_getOnActivReturnsContentUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 3249L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "\"2002-04-02 09:11:07\"")
                .d("COPY_RIGHT", "\"i1fAIACAo\"")
                .d("MIME_TYPE", "\"ziM1TtXW1LOj\"")
                .d("NAME", "NULL")
                .d("URI", "\"i\"")
            .and().insertInto("MEDIA_FILE", 3251L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 3250L)
                .d("GRP", "\"H3jn1wM\"")
                .d("NAME", "\"AkeJXvcP9pjm8VG4\"")
                .d("MEDIA_FILE_ID", "NULL")
            .and().insertInto("ACTIVITY", 3254L)
            .and().insertInto("MEDIA_FILE", 822L)
                .d("AUTHOR", "\"nR\"")
                .d("CAPTURE_DATE", "\"2100-01-11 15:17:12\"")
                .d("COPY_RIGHT", "\"_EM_13628_XYZ_\"")
                .d("MIME_TYPE", "\"seJq2hBPtv\"")
                .d("NAME", "\"3nM1tQgGCzd\"")
                .d("URI", "\"NuKLo3J2IuaWd\"")
            .and().insertInto("USERS", 823L)
                .d("AUTHORIZATION_LEVEL", "609")
                .d("DATE_CREATED", "\"1927-05-10 14:35:01\"")
                .d("EMAIL_ADDRESS", "\"L9FZL5_qd3jiJ\"")
                .d("NAME", "\"wCGd29n\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/777?attrs=F56FqvnGO6WYvrJi")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags/{id}
    */
    @Test @Timeout(60)
    public void test_215_getOnTagReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags/477")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users/profile
    */
    @Test @Timeout(60)
    public void test_216_getOnProfileReturnsObject() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/profile")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'role_permissions'.size()", equalTo(23))
                .body("'role_permissions'", hasItems("activity_create", "activity_edit", "activity_edit_own", "auth_profile_edit", "auth_role_assign", "auth_role_assignown", "auth_role_list", "auth_user_create", "auth_user_edit", "category_create", "category_edit", "comment_create", "comment_edit", "comment_edit_own", "mediaitem_create", "mediaitem_edit", "mediaitem_edit_own", "rating_set_own", "reference_create", "reference_edit", "reference_edit_own", "system_message_manage", "system_message_read"))
                .body("'name'", containsString("INTEGRATION TEST ADMINISTRATOR"))
                .body("'role'", containsString("administrator"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/activities/{id}
    */
    @Test @Timeout(60)
    public void test_217_getOnActivReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "_EM_3176_XYZ_")
                .get(baseUrlOfSut + "/api/v1/activities/540?" + 
                    "attrs=QeL1xPH3lc&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories/{id}
    */
    @Test @Timeout(60)
    public void test_218_getOnCategoriReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/categories/89?" + 
                    "attrs=t0KbtDeOput&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/media_files/{id}
    */
    @Test @Timeout(60)
    public void test_219_getOnMedia_filReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/-1919015393757897257?EMextraParam123=_EM_5631_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/activities/{id}
    */
    @Test @Timeout(60)
    public void test_220_getOnV1ActivReturnsContent() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities/-997953187")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_221_getOnUserReturnsContentUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 631L)
                .d("URI", "\"DgBLhyC4yNyGInSq\"")
            .and().insertInto("TAG", 630L)
                .d("GRP", "\"tehlQkFORo\"")
                .d("NAME", "\"VHr5Q\"")
                .r("MEDIA_FILE_ID", 631L)
            .and().insertInto("MEDIA_FILE", 634L)
                .d("URI", "\"_EM_11505_XYZ_\"")
            .and().insertInto("TAG", 633L)
                .d("GRP", "\"\"")
                .d("NAME", "\"fnn\"")
            .and().insertInto("TAG_DERIVED", 632L)
                .r("TAG_ID", 630L)
                .d("ACTIVITIES_COUNT", "57")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/-523429?attrs=_CSzS7pyY1cCEk14")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/categories/{id}
    */
    @Test @Timeout(60)
    public void test_222_getOnCategoriReturnsContentUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 545L)
                .d("URI", "\"y9mmbj\"")
            .and().insertInto("TAG", 544L)
                .d("GRP", "\"^M\"")
                .d("NAME", "\"MUEBUR8eqUUU9\"")
                .r("MEDIA_FILE_ID", 545L)
            .and().insertInto("MEDIA_FILE", 563L)
                .d("URI", "\"eTNU6xUUU2UA\"")
            .and().insertInto("TAG", 562L)
                .d("GRP", "\"_EM_10842_XYZ_\"")
                .d("NAME", "\"_EM_11026_XYZ_\"")
            .and().insertInto("TAG_DERIVED", 561L)
                .r("TAG_ID", 562L)
                .d("ACTIVITIES_COUNT", "NULL")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/categories/-32322")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v1/users/profile
    */
    @Test @Timeout(60)
    public void test_223_getOnProfileReturnsObjectUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 818L)
            .and().insertInto("ACTIVITY", 792L)
            .and().insertInto("USERS", 793L)
                .d("AUTHORIZATION_LEVEL", "16384")
                .d("DATE_CREATED", "\"1976-03-17 15:47:07\"")
                .d("EMAIL_ADDRESS", "\"_EM_13602_XYZ_\"")
                .d("NAME", "\"_EM_13460_XYZ_\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/profile")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'role_permissions'.size()", equalTo(18))
                .body("'role_permissions'", hasItems("activity_create", "activity_edit", "activity_edit_own", "auth_profile_edit", "auth_role_assignown", "category_create", "category_edit", "comment_create", "comment_edit", "comment_edit_own", "mediaitem_create", "mediaitem_edit", "mediaitem_edit_own", "rating_set_own", "reference_create", "reference_edit", "reference_edit_own", "system_message_read"))
                .body("'name'", containsString("INTEGRATION TEST MODERATOR"))
                .body("'role'", containsString("moderator"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/tags/{id}
    */
    @Test @Timeout(60)
    public void test_224_getOnTagReturnsContentUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 287L)
            .and().insertInto("USERS", 2264L)
                .d("AUTHORIZATION_LEVEL", "0")
                .d("NAME", "\"\"")
            .and().insertInto("ACTIVITY", 2263L)
            .and().insertInto("ACTIVITY", 2262L)
            .and().insertInto("ACTIVITY_PROPERTIES", 2261L)
                .d("AGE_MAX", "NULL")
                .d("AGE_MIN", "-2147450376")
                .d("DATE_CREATED", "\"2068-10-10 13:42:37\"")
                .d("DATE_PUBLISHED", "\"1962-08-27 09:53:14\"")
                .d("DATE_UPDATED", "NULL")
                .d("DESCRIPTION_INTRODUCTION", "NULL")
                .d("DESCRIPTION_MAIN", "\"r3\"")
                .d("DESCRIPTION_MATERIAL", "\"20R3ED2J4SoXqRO\"")
                .d("DESCRIPTION_NOTES", "\"k\"")
                .d("DESCRIPTION_PREPARE", "NULL")
                .d("DESCRIPTION_SAFETY", "\"IiZ6kikDJLdQ53Vg\"")
                .d("FEATURED", "false")
                .d("NAME", "NULL")
                .d("PARTICIPANTS_MAX", "163")
                .d("PARTICIPANTS_MIN", "366")
                .d("SOURCE", "NULL")
                .d("TIME_MAX", "994")
                .d("TIME_MIN", "NULL")
                .r("ACTIVITY_ID", 2263L)
                .d("AUTHOR_ID", "NULL")
                .d("PUBLISHING_ACTIVITY_ID", "NULL")
            .and().insertInto("USERS", 2276L)
                .d("AUTHORIZATION_LEVEL", "984")
                .d("NAME", "\"TZwOqLN\"")
            .and().insertInto("ACTIVITY", 2275L)
            .and().insertInto("ACTIVITY", 2274L)
            .and().insertInto("ACTIVITY_RELATION", 2273L)
                .r("ACTIVITY_1_ID", 2274L)
                .r("ACTIVITY_2_ID", 2275L)
                .d("OWNER_ID", "1")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/tags/-7664851472378431073?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) PUT:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_225_putOnUserReturns200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("USERS", 682L)
                .d("AUTHORIZATION_LEVEL", "2")
                .d("DATE_CREATED", "NULL")
                .d("EMAIL_ADDRESS", "NULL")
                .d("NAME", "\"ll159n2I43lSuF\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 3, " + 
                    " \"name\": \"ga2xW2DV\", " + 
                    " \"authorization_level\": 8 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/3")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("ga2xW2DV"))
                .body("'authorization_level'", numberMatches(20.0))
                .body("'identities'.size()", equalTo(0));
    }
    
    
    /**
    * Calls:
    * (204) GET:/api/v1/system/ping
    */
    @Test @Timeout(60)
    public void test_226_getOnPingReturns204() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/system/ping")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) GET:/api/v1/system/ping
    */
    @Test @Timeout(60)
    public void test_227_getOnSystemPingWithQueryParamReturns204() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/ping?EMextraParam123=_EM_2136_XYZ_")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) GET:/api/v1/system/ping
    */
    @Test @Timeout(60)
    public void test_228_getOnPingReturns204() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/system/ping")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (204) GET:/api/v1/system/ping
    */
    @Test @Timeout(60)
    public void test_229_getOnPingReturns204() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/system/ping")
                .then()
                .statusCode(204)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v1/system_messages/{id}
    */
    @Test @Timeout(60)
    public void test_230_putOnSystem_messagReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1285_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 895, " + 
                    " \"valid_to\": \"2040-02-20T-1:29:38Z\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/system_messages/895")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v1/activities/{id}
    */
    @Test @Timeout(60)
    public void test_231_putOnActivReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 886, " + 
                    " \"date_published\": \"1914-11-29T20:03:-1Z\", " + 
                    " \"date_created\": \"2099-11-01T00:44:56.944-01:26\", " + 
                    " \"date_updated\": \"2015-06-14T-1:03:37Z\", " + 
                    " \"description_introduction\": \"3myr0Gmn0_psd\", " + 
                    " \"description_safety\": \"e2hy_aCM84WMu\", " + 
                    " \"participants_max\": 886, " + 
                    " \"time_min\": 87, " + 
                    " \"activity\": { " + 
                    " \"id\": 311, " + 
                    " \"ratings_average\": 0.19599802770509966, " + 
                    " \"related\": [ " + 
                    " 87 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/activities/886?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_232_putOnActivReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1039L)
            .and().insertInto("ACTIVITY", 1003L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_23543_XYZ_\", " + 
                    " \"date_created\": \"1937-12-11T14:34:55.827Z\", " + 
                    " \"description_material\": \"fncb8Husk\", " + 
                    " \"description_introduction\": \"Ia4OPD9RzfXSl\", " + 
                    " \"description_prepare\": \"_EM_20098_XYZ_\", " + 
                    " \"description_main\": \"X4CAY\", " + 
                    " \"description_safety\": \"5K\", " + 
                    " \"description_notes\": \"pqE9\", " + 
                    " \"age_min\": -2147483648, " + 
                    " \"age_max\": -841, " + 
                    " \"time_max\": -297708984, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"4PkL2BiltTAAIJI\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"id\": 754, " + 
                    " \"name\": \"vGWRkqkN\" " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"capture_date\": \"2003-02-17T07:25:58.568Z\", " + 
                    " \"copy_right\": \"dVB2UlIQcgM_\" " + 
                    " }, " + 
                    " { " + 
                    " \"uri\": \"e3ACRKJ2j2D78woE\", " + 
                    " \"capture_date\": \"2079-01-22T18:00:20Z\", " + 
                    " \"author\": \"uNvrHNsu\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 552, " + 
                    " \"mime_type\": \"U3H1j6VVzr\", " + 
                    " \"uri\": \"vGM6\", " + 
                    " \"name\": \"64eGB6r7Y7aGpB\", " + 
                    " \"capture_date\": \"1998-10-21T03:31:29Z\", " + 
                    " \"copy_right\": \"WsRY\" " + 
                    " }, " + 
                    " { " + 
                    " \"mime_type\": \"oZXBuKUh\", " + 
                    " \"uri\": \"5McmtKREE9\", " + 
                    " \"capture_date\": \"1941-04-30T01:02:05.015-10:58\", " + 
                    " \"author\": \"aDRFEwjpA_w4Ex\" " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 1797683811, " + 
                    " \"name\": \"Xj3GR73E4D\", " + 
                    " \"email_address\": \"\", " + 
                    " \"authorization_level\": 720 " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"ratings_count\": -8453063405502113172, " + 
                    " \"related\": [] " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/activities/0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v2/tags/{id}
    */
    @Test @Timeout(60)
    public void test_233_putOnTagReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"nYwJRqnNVei\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 457, " + 
                    " \"capture_date\": \"2014-06-29T22:19:56.070-04:05\", " + 
                    " \"author\": \"v5wpT2eIuUFc\" " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/883")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_234_putOnUserReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"email_address\": \"_EM_8176_XYZ_\", " + 
                    " \"authorization_level\": 947, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 2204373329582053610, " + 
                    " \"date_created\": \"1900-06-20T16:39:60Z\", " + 
                    " \"type\": \"API\", " + 
                    " \"value\": \"XDP1zPQO\" " + 
                    " }, " + 
                    " { " + 
                    " \"type\": \"GOOGLE\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 84 " + 
                    " }, " + 
                    " { " + 
                    " \"date_created\": \"2020-11-16T05:45:05+10:20\", " + 
                    " \"type\": \"API\", " + 
                    " \"value\": \"hdZGsUc_D1cVMhGE\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/115?EMextraParam123=_EM_8177_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_235_putOnActivReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 244L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"pS\", " + 
                    " \"date_published\": \"1996-10-31T08:10:27-08:01\", " + 
                    " \"date_created\": \"2058-06-30T18:21:30.975-07:11\", " + 
                    " \"description_main\": \"aLB83vl\", " + 
                    " \"description_notes\": \"GludxgiKEA\", " + 
                    " \"age_min\": -2147483143, " + 
                    " \"participants_max\": 390, " + 
                    " \"time_min\": 749, " + 
                    " \"time_max\": 179, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"Q5RaMNakBziJStV\", " + 
                    " \"media_files\": [ " + 
                    " { " + 
                    " \"id\": 549, " + 
                    " \"capture_date\": \"1934-08-09T13:17:44.379+14:40\", " + 
                    " \"author\": \"tlUI71\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 33, " + 
                    " \"mime_type\": \"lHtQ6Lxz\", " + 
                    " \"name\": \"lv22EkVIfGlgZ3g\" " + 
                    " } " + 
                    " ], " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_average\": 0.9972923582285823, " + 
                    " \"related\": [ " + 
                    " 394, " + 
                    " 262, " + 
                    " 493, " + 
                    " 694, " + 
                    " 4911096069572625062 " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/activities/-15543")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v1/media_files/{id}
    */
    @Test @Timeout(60)
    public void test_236_putOnMedia_filReturns400() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": -1069630281, " + 
                    " \"uri\": \"vQy3ppSmrV\", " + 
                    " \"name\": \"ERVqvsnBM3Ju_\", " + 
                    " \"capture_date\": \"1924-00-05T06:34:17+04:31\", " + 
                    " \"author\": \"JUnmrvw1\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/-1069630281")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PUT:/api/v1/categories/{id}
    */
    @Test @Timeout(60)
    public void test_237_putOnCategoriReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 1173L)
                .d("URI", "\"\"")
            .and().insertInto("TAG", 1172L)
                .d("GRP", "\"OgfDS1ca\"")
                .d("NAME", "\"nT9RR8ZUVU72iUP\"")
                .r("MEDIA_FILE_ID", 1173L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 682, " + 
                    " \"group\": \"RDqePWZcBYINgnhQ\", " + 
                    " \"name\": \"\", " + 
                    " \"media_file\": { " + 
                    " \"id\": 697, " + 
                    " \"mime_type\": \"WQH1YXYl6q\", " + 
                    " \"capture_date\": \"2038-10-00T25:19:57.979-13:52\", " + 
                    " \"copy_right\": \"divKlBHIQU8e\", " + 
                    " \"author\": \"tWB\" " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/682")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PATCH:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_238_patchOnV2ActivReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 224L)
            .and().insertInto("ACTIVITY", 223L)
            .and().insertInto("ACTIVITY_RELATION", 222L)
                .r("ACTIVITY_1_ID", 223L)
                .r("ACTIVITY_2_ID", 224L)
                .d("OWNER_ID", "2")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 310, " + 
                    " \"name\": \"idsZ86\", " + 
                    " \"date_created\": \"2063-01-15T10:36:24.118+16:52\", " + 
                    " \"date_updated\": \"1985-12-28T11:02:01.964Z\", " + 
                    " \"description_material\": \"\", " + 
                    " \"description_prepare\": \"Ckrx3SYw2\", " + 
                    " \"age_max\": -2147482833, " + 
                    " \"time_min\": 962, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"CjWy\", " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"group\": \"NQ\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"BZ\", " + 
                    " \"name\": \"Te\", " + 
                    " \"capture_date\": \"2013-03-16T20:46:21Z\", " + 
                    " \"copy_right\": \"h3Iqxtf97HK\" " + 
                    " } " + 
                    " } " + 
                    " ], " + 
                    " \"author\": { " + 
                    " \"id\": 732, " + 
                    " \"name\": \"2T39qqhWhw1GNF\", " + 
                    " \"email_address\": \"ZQmeP\" " + 
                    " } " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v2/activities/310")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (400) PATCH:/api/v1/activities/{id}
    */
    @Test @Timeout(60)
    public void test_239_patchOnV1ActivReturns400UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 577L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 231, " + 
                    " \"name\": \"_EM_2143_XYZ_\", " + 
                    " \"date_created\": \"1904-00-04T10:25:37.657Z\", " + 
                    " \"description_main\": \"iCikL0\", " + 
                    " \"description_safety\": \"_EM_2145_XYZ_\", " + 
                    " \"description_notes\": \"_EM_2146_XYZ_\", " + 
                    " \"age_min\": 100, " + 
                    " \"age_max\": -2147483343, " + 
                    " \"participants_min\": 379, " + 
                    " \"participants_max\": 956, " + 
                    " \"time_min\": 896, " + 
                    " \"time_max\": 20, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"rNM5m_5\", " + 
                    " \"tags\": [], " + 
                    " \"author\": { " + 
                    " \"name\": \"_EM_2153_XYZ_\", " + 
                    " \"email_address\": \"AMkzlS\", " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": 809, " + 
                    " \"date_created\": \"2079-08-19T05:32:45.038-03:17\" " + 
                    " }, " + 
                    " { " + 
                    " \"date_created\": \"2092-05-06T01:06:12-09:07\" " + 
                    " } " + 
                    " ] " + 
                    " }, " + 
                    " \"activity\": { " + 
                    " \"ratings_sum\": 6589967272518070754, " + 
                    " \"favourites_count\": 274, " + 
                    " \"ratings_average\": 0.906722134784236 " + 
                    " } " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v1/activities/231")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(400.0))
                .body("'message'", containsString("Unable to process JSON"));
    }
    
    
    /**
    * Calls:
    * (401) GET:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_240_getOnUserReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/834?attrs=_EM_26_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) GET:/api/v1/users/profile
    */
    @Test @Timeout(60)
    public void test_241_getOnProfileReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/users/profile")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_242_putOnV2ActivReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_184_XYZ_\", " + 
                    " \"date_published\": \"1910-01-14T04:08:07.810Z\", " + 
                    " \"date_created\": \"2023-11-23T00:53:20.812Z\", " + 
                    " \"description_main\": \"26TkQ\", " + 
                    " \"description_notes\": \"_EM_187_XYZ_\", " + 
                    " \"age_min\": 3, " + 
                    " \"participants_max\": 582, " + 
                    " \"time_max\": 983, " + 
                    " \"featured\": true, " + 
                    " \"author\": { " + 
                    " \"id\": 293, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"id\": -1495178925935470963, " + 
                    " \"date_created\": \"1916-04-32T01:14:45+14:45\", " + 
                    " \"type\": \"EVOMASTER\", " + 
                    " \"value\": \"ct\" " + 
                    " }, " + 
                    " { " + 
                    " \"type\": \"EVOMASTER\" " + 
                    " } " + 
                    " ] " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/activities/118")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v1/activities/{id}
    */
    @Test @Timeout(60)
    public void test_243_putOnV1ActivWithQueryParamReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"G\", " + 
                    " \"description_material\": \"_EM_213_XYZ_\", " + 
                    " \"description_prepare\": \"yfZ\", " + 
                    " \"description_main\": \"_EM_214_XYZ_\", " + 
                    " \"description_notes\": \"_EM_216_XYZ_\", " + 
                    " \"time_min\": 594, " + 
                    " \"featured\": false, " + 
                    " \"activity\": { " + 
                    " \"properties_revisions\": [], " + 
                    " \"ratings_count\": 6, " + 
                    " \"favourites_count\": 333 " + 
                    " } " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/activities/219?EMextraParam123=_EM_255_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v1/media_files/{id}
    */
    @Test @Timeout(60)
    public void test_244_putOnMedia_filReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"9z\", " + 
                    " \"name\": \"_EM_202_XYZ_\", " + 
                    " \"copy_right\": \"wG\", " + 
                    " \"author\": \"jGwXWflXI\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/6372963284285383720")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v1/system_messages/{id}
    */
    @Test @Timeout(60)
    public void test_245_putOnSystem_messagReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v1/system_messages/-1748051220")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v2/tags/{id}
    */
    @Test @Timeout(60)
    public void test_246_putOnTagReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_208_XYZ_")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v2/tags/574?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_247_putOnUserReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"authorization_level\": 501, " + 
                    " \"identities\": [ " + 
                    " { " + 
                    " \"date_created\": \"1943-01-13T22:07:23.132Z\", " + 
                    " \"type\": \"API\" " + 
                    " }, " + 
                    " { " + 
                    " \"id\": 633, " + 
                    " \"date_created\": \"2081-07-07T12:22:40.904+03:58\", " + 
                    " \"type\": \"EVOMASTER\", " + 
                    " \"value\": \"_EM_210_XYZ_\" " + 
                    " }, " + 
                    " { " + 
                    " \"date_created\": \"1905-11-29T23:58:37.040+03:09\", " + 
                    " \"value\": \"_EM_211_XYZ_\" " + 
                    " } " + 
                    " ] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/163")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PUT:/api/v1/categories/{id}
    */
    @Test @Timeout(60)
    public void test_248_putOnCategoriReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v1/categories/748?EMextraParam123=_EM_259_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_249_deleteOnV2ActivReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/326")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v1/media_files/{id}
    */
    @Test @Timeout(60)
    public void test_250_deleteOnMedia_filReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_15_XYZ_")
                .delete(baseUrlOfSut + "/api/v1/media_files/413?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v1/system_messages/{id}
    */
    @Test @Timeout(60)
    public void test_251_deleteOnSystem_messagReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/7725147875149033935?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v2/tags/{id}
    */
    @Test @Timeout(60)
    public void test_252_deleteOnTagReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/tags/36?EMextraParam123=_EM_24_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_253_deleteOnUserReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/438?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v1/activities/{id}
    */
    @Test @Timeout(60)
    public void test_254_deleteOnV1ActivReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/activities/1245881961")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v1/categories/{id}
    */
    @Test @Timeout(60)
    public void test_255_deleteOnCategoriReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/categories/741")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PATCH:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_256_patchOnV2ActivReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 911, " + 
                    " \"date_created\": \"1918-11-22T09:38:17.600+07:46\", " + 
                    " \"date_updated\": \"1980-02-32T04:30:12+04:23\", " + 
                    " \"description_material\": \"1gkqMm5oGXv6\", " + 
                    " \"description_introduction\": \"m5D6\", " + 
                    " \"description_safety\": \"O\", " + 
                    " \"description_notes\": \"UVBVph\", " + 
                    " \"age_min\": -2147483279, " + 
                    " \"age_max\": -104, " + 
                    " \"participants_min\": 650, " + 
                    " \"time_min\": 109, " + 
                    " \"time_max\": 995, " + 
                    " \"featured\": false, " + 
                    " \"tags\": [ " + 
                    " { " + 
                    " \"name\": \"Qv4fTKNS2V\", " + 
                    " \"activities_count\": 895 " + 
                    " } " + 
                    " ], " + 
                    " \"media_files\": [], " + 
                    " \"activity\": { " + 
                    " \"id\": 781, " + 
                    " \"ratings_average\": 0.2900436940213861 " + 
                    " } " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v2/activities/911")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) PATCH:/api/v1/activities/{id}
    */
    @Test @Timeout(60)
    public void test_257_patchOnV1ActivReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .patch(baseUrlOfSut + "/api/v1/activities/486")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (403) GET:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_258_getOnV1UserWithQueryParamsReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/190?" + 
                    "attrs=W4pCRrtbh8fA01&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) GET:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_259_getOnV1UserWithQueryParamReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/users/2?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v1/categories/{id}
    */
    @Test @Timeout(60)
    public void test_260_putOnCategoriReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "_EM_1307_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 614, " + 
                    " \"group\": \"\", " + 
                    " \"activities_count\": 597 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/categories/614")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_261_putOnV2ActivReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v2/activities/6101256866536860155")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v1/activities/{id}
    */
    @Test @Timeout(60)
    public void test_262_putOnV1ActivReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v1/activities/727")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v1/media_files/{id}
    */
    @Test @Timeout(60)
    public void test_263_putOnV1Media_filWithQueryParamReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"k9vDw\", " + 
                    " \"copy_right\": \"Ok3\", " + 
                    " \"author\": \"Rabygcbh73\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/276?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v2/tags/{id}
    */
    @Test @Timeout(60)
    public void test_264_putOnV2TagReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v2/tags/181")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_265_putOnV1UserWithQueryParamReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_2302_XYZ_")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"mGrsXV7\", " + 
                    " \"email_address\": \"O\", " + 
                    " \"authorization_level\": 0, " + 
                    " \"identities\": [] " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/819?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_266_putOnUserReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v1/users/1296329085")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v1/system_messages/{id}
    */
    @Test @Timeout(60)
    public void test_267_putOnSystem_messagReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_2298_XYZ_")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v1/system_messages/467?EMextraParam123=_EM_2297_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PUT:/api/v1/system_messages/{id}
    */
    @Test @Timeout(60)
    public void test_268_putOnSystem_messagReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .put(baseUrlOfSut + "/api/v1/system_messages/464152561?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * 1 - (403) DELETE:/api/v1/media_files/{id}
    * 2 - (403) PUT:/api/v1/media_files/{id}
    */
    @Test @Timeout(60)
    public void test_269_putOnV1Media_filReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/media_files/108")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"_EM_9480_XYZ_\", " + 
                    " \"author\": \"_EM_9482_XYZ_\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/media_files/108")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * 1 - (403) DELETE:/api/v2/tags/{id}
    * 2 - (403) PUT:/api/v2/tags/{id}
    */
    @Test @Timeout(60)
    public void test_270_putOnV2TagWithQueryParamReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v2/tags/921")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"6wLmc6V5\", " + 
                    " \"name\": \"SEBfZAKSe9bvgirF\" " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v2/tags/921?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * 1 - (403) DELETE:/api/v1/users/{id}
    * 2 - (403) PUT:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_271_putOnUserReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/953?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"id\": 3, " + 
                    " \"name\": \"ga2xW2DV\", " + 
                    " \"authorization_level\": 8 " + 
                    " } ")
                .put(baseUrlOfSut + "/api/v1/users/953")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_272_deleteOnV2ActivReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/325")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v1/media_files/{id}
    */
    @Test @Timeout(60)
    public void test_273_deleteOnMedia_filReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/media_files/108")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v1/system_messages/{id}
    */
    @Test @Timeout(60)
    public void test_274_deleteOnSystem_messagReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/508?EMextraParam123=_EM_1103_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v2/tags/{id}
    */
    @Test @Timeout(60)
    public void test_275_deleteOnTagReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v2/tags/921")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_276_deleteOnUserReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/953?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v1/activities/{id}
    */
    @Test @Timeout(60)
    public void test_277_deleteOnV1ActivWithQueryParamReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/7902505184518601259?EMextraParam123=_EM_1137_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v1/categories/{id}
    */
    @Test @Timeout(60)
    public void test_278_deleteOnCategoriReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/categories/72?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v1/system_messages/{id}
    */
    @Test @Timeout(60)
    public void test_279_deleteOnSystem_messagReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/system_messages/816?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v1/users/{id}
    */
    @Test @Timeout(60)
    public void test_280_deleteOnUserReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/users/1614543516?EMextraParam123=42")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_281_deleteOnActivReturns403UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 260L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/-7591876264703800656")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) DELETE:/api/v1/system_messages/{id}
    */
    @Test @Timeout(60)
    public void test_282_deleteOnSystem_messagReturns403() throws Exception {
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/system_messages/-6064047392908049840?EMextraParam123=_EM_8562_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PATCH:/api/v1/activities/{id}
    */
    @Test @Timeout(60)
    public void test_283_patchOnV1ActivWithQueryParamReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"name\": \"_EM_1115_XYZ_\", " + 
                    " \"date_published\": \"1963-05-06T02:30:21.043Z\", " + 
                    " \"description_prepare\": \"JbDeLfgNjHbEL\", " + 
                    " \"description_safety\": \"_EM_1117_XYZ_\", " + 
                    " \"age_max\": -2147482789, " + 
                    " \"participants_min\": 86, " + 
                    " \"participants_max\": 657, " + 
                    " \"time_max\": 583, " + 
                    " \"featured\": false, " + 
                    " \"source\": \"_EM_1119_XYZ_\", " + 
                    " \"activity\": { " + 
                    " \"id\": 714, " + 
                    " \"properties_revisions\": [], " + 
                    " \"favourites_count\": 76, " + 
                    " \"ratings_average\": 0.08904584389721526 " + 
                    " } " + 
                    " } ")
                .patch(baseUrlOfSut + "/api/v1/activities/251?EMextraParam123=_EM_1135_XYZ_")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (403) PATCH:/api/v2/activities/{id}
    */
    @Test @Timeout(60)
    public void test_284_patchOnV2ActivReturns403() throws Exception {
        
        given().accept("application/json")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .patch(baseUrlOfSut + "/api/v2/activities/24")
                .then()
                .statusCode(403)
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(403.0))
                .body("'message'", containsString("HTTP 403 Forbidden"));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v2/activities/{id}/rating
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_285_getOnRatingCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityRating$Key_90_<init>.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/123/rating?EMextraParam123=_EM_2108_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/api/v1/media_files
    * 2 - (200) PUT:/api/v1/media_files/{id}
    * 3 - (500) GET:/api/v1/media_files/{id}/file
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_286_getOnFileCauses500_internalServerError() throws Exception {
        
        ValidatableResponse res_0 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"mime_type\": \"_EM_9479_XYZ_\", " + 
                    " \"uri\": \"\", " + 
                    " \"name\": \"nPLDhe\", " + 
                    " \"capture_date\": \"1984-13-04T10:33:19.902Z\", " + 
                    " \"author\": \"as_AJXjQCrWTJkj\" " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/media_files")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'mime_type'", containsString("_EM_9479_XYZ_"))
                .body("'uri'", containsString(""))
                .body("'name'", containsString("nPLDhe"))
                .body("'capture_date'", containsString("1985-01-04T10:33:19.902Z"))
                .body("'author'", containsString("as_AJXjQCrWTJkj"));
        String 
        location_media_files__2 = "/api/v1/media_files" + "/" + res_0.extract().body().path("id").toString();
        
        ValidatableResponse res_1 = given().accept("application/json")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"uri\": \"_EM_9480_XYZ_\", " + 
                    " \"author\": \"_EM_9482_XYZ_\" " + 
                    " } ")
                .put(resolveLocation(location_media_files__2, baseUrlOfSut + "/api/v1/media_files/11"))
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'uri'", containsString("_EM_9480_XYZ_"))
                .body("'capture_date'", containsString("1985-01-04T10:33:19.902Z"))
                .body("'author'", containsString("as_AJXjQCrWTJkj"));
        String location_id__47 = res_1.extract().header("location");
        assertTrue(isValidURIorEmpty(location_id__47));
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(resolveLocation(location_id__47, baseUrlOfSut + "/api/v1/media_files/11/file"))
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v1/media_files/{id}/file
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_287_getOnFileCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile.
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "zcJRDtr_8FRyXX")
                .get(baseUrlOfSut + "/api/v1/media_files/465/file?" + 
                    "size=375&" + 
                    "attrs=_EM_8182_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v1/media_files/{id}/file
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_288_getOnFileCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/11/file")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v1/media_files/{id}/file
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_289_getOnFileCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 349L)
                .d("AUTHOR", "NULL")
                .d("CAPTURE_DATE", "NULL")
                .d("COPY_RIGHT", "\"gO1Ul3x\"")
                .d("MIME_TYPE", "NULL")
                .d("NAME", "\"w\"")
                .d("URI", "\"\"")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_4274_XYZ_")
                .get(baseUrlOfSut + "/api/v1/media_files/99/file?" + 
                    "size=-462768955&" + 
                    "EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v1/activities/{id}/rating
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_290_getOnRatingCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityRating$Key_90_<init>.
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/activities/787075435261625379/rating?attrs=_EM_1082_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v1/activities/{id}/rating
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_291_getOnRatingCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityRating$Key_90_<init>.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v1/activities/434/rating?EMextraParam123=_EM_2113_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v2/activities/{id}/rating
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_292_getOnActivRatingWithQueryParamCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 71L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityRating$Key_90_<init>.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/activities/-378/rating?attrs=4Fj")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v1/media_files/{id}/file
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_293_getOnFileCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile.
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/media_files/-251693014/file?" + 
                    "size=664&" + 
                    "attrs=_EM_8919_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/resource/MediaFileResource_260_downloadFile
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) GET:/api/v1/activities/{id}/rating
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_294_getOnActivRatingCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 892L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityRating$Key_90_<init>.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v1/activities/-1152921504606846464/rating")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v2/activities/{id}/rating
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_295_postOnRatingCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 487L)
                .d("AUTHOR", "\"Y3CQX\"")
                .d("CAPTURE_DATE", "\"2026-07-22 09:04:05\"")
                .d("COPY_RIGHT", "\"KyN3Vqe\"")
                .d("MIME_TYPE", "\"U\"")
                .d("NAME", "\"EP3\"")
                .d("URI", "\"66bLTs\"")
            .and().insertInto("MEDIA_FILE", 493L)
                .d("URI", "\"yY5izR5I7\"")
            .and().insertInto("USERS", 492L)
                .d("AUTHORIZATION_LEVEL", "8210")
                .d("NAME", "\"DUL7BM\"")
            .and().insertInto("ACTIVITY", 491L)
            .and().insertInto("ACTIVITY", 490L)
            .and().insertInto("ACTIVITY_PROPERTIES", 489L)
                .r("ACTIVITY_ID", 490L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 488L)
                .r("ACTIVITY_PROPERTIES_ID", 489L)
                .r("MEDIA_FILE_ID", 493L)
                .d("FEATURED", "true")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityRating$Key_90_<init>.
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 12, " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/268/rating")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities/{id}/rating
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_296_postOnRatingCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityRating$Key_90_<init>.
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 376, " + 
                    " \"favourite\": true " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities/376/rating?EMextraParam123=42")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) POST:/api/v1/activities/{id}/rating
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_297_postOnRatingCauses500_internalServerErrorUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 290L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityRating$Key_90_<init>.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 494, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/activities/-48658/rating")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v2/activities/{id}/rating
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_298_deleteOnActivRatingCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityRating$Key_90_<init>.
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/377/rating")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v1/activities/{id}/rating
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_299_deleteOnRatingCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityRating$Key_90_<init>.
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v1/activities/29/rating?EMextraParam123=_EM_1084_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v1/activities/{id}/rating
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_300_deleteOnRatingCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityRating$Key_90_<init>.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/activities/-1776977238/rating?EMextraParam123=_EM_8866_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (500) DELETE:/api/v2/activities/{id}/rating
    * Found 1 potential fault of type-code 100
    */
    @Test @Timeout(60)
    public void test_301_deleteOnRatingCauses500_internalServerError() throws Exception {
        
        // Fault100. HTTP Status 500. se/devscout/scoutapi/model/ActivityRating$Key_90_<init>.
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "_EM_2110_XYZ_")
                .delete(baseUrlOfSut + "/api/v2/activities/-6203830016951297796/rating?EMextraParam123=_EM_2109_XYZ_")
                .then()
                .statusCode(500)// se/devscout/scoutapi/model/ActivityRating$Key_90_<init>
                .assertThat()
                .contentType("application/json")
                .body("'code'", numberMatches(500.0));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities/{id}/rating
    */
    @Test @Timeout(60)
    public void test_302_getOnRatingReturnsObjectUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1039L)
            .and().insertInto("SYSTEM_MESSAGE", 2700L)
                .d("KEY", "\"9djGscwZi8Bt2gc\"")
                .d("VALID_FROM", "\"2091-10-28 08:49:53\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"sBM0d\"")
            .and().insertInto("USERS", 2721L)
                .d("AUTHORIZATION_LEVEL", "10")
                .d("NAME", "\"WUSt9Jf0pcclumRq\"")
            .and().insertInto("ACTIVITY", 2720L)
            .and().insertInto("ACTIVITY_RATING", 2719L)
                .r("ACTIVITY_ID", 2720L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "763")
            .and().insertInto("ACTIVITY", 1003L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey moderator") // moderator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/2/rating?attrs=_EM_20960_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'rating'", numberMatches(763.0))
                .body("'favourite'", equalTo(true))
                .body("'activity'.isEmpty()", is(true))
                .body("'user'.isEmpty()", is(true));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities/{id}/rating
    */
    @Test @Timeout(60)
    public void test_303_getOnRatingReturnsContentUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1039L)
            .and().insertInto("SYSTEM_MESSAGE", 2700L)
                .d("KEY", "\"9djGscwZi8Bt2gc\"")
                .d("VALID_FROM", "\"2091-10-28 08:49:53\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"sBM0d\"")
            .and().insertInto("USERS", 2721L)
                .d("AUTHORIZATION_LEVEL", "10")
                .d("NAME", "\"WUSt9Jf0pcclumRq\"")
            .and().insertInto("ACTIVITY", 2720L)
            .and().insertInto("ACTIVITY_RATING", 2719L)
                .r("ACTIVITY_ID", 2720L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "763")
            .and().insertInto("ACTIVITY", 1003L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey user") // user
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/2/rating?attrs=_EM_20960_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v2/activities/{id}/rating
    */
    @Test @Timeout(60)
    public void test_304_getOnRatingReturnsContentUsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("ACTIVITY", 1039L)
            .and().insertInto("SYSTEM_MESSAGE", 2700L)
                .d("KEY", "\"9djGscwZi8Bt2gc\"")
                .d("VALID_FROM", "\"2091-10-28 08:49:53\"")
                .d("VALID_TO", "NULL")
                .d("VALUE", "\"sBM0d\"")
            .and().insertInto("USERS", 2721L)
                .d("AUTHORIZATION_LEVEL", "10")
                .d("NAME", "\"WUSt9Jf0pcclumRq\"")
            .and().insertInto("ACTIVITY", 2720L)
            .and().insertInto("ACTIVITY_RATING", 2719L)
                .r("ACTIVITY_ID", 2720L)
                .d("USER_ID", "2")
                .d("FAVOURITE", "true")
                .d("RATING", "763")
            .and().insertInto("ACTIVITY", 1003L)
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("*/*")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/v2/activities/2/rating?attrs=_EM_20960_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("null"));
    }
    
    
    /**
    * Calls:
    * (401) GET:/api/v2/activities/{id}/rating
    */
    @Test @Timeout(60)
    public void test_305_getOnActivRatingReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/v2/activities/210/rating")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) GET:/api/v1/activities/{id}/rating
    */
    @Test @Timeout(60)
    public void test_306_getOnActivRatingWithQueryParamReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_3_XYZ_")
                .get(baseUrlOfSut + "/api/v1/activities/997/rating?attrs=_EM_2_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v2/activities/{id}/rating
    */
    @Test @Timeout(60)
    public void test_307_postOnActivRatingWithQueryParamReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .contentType("application/json")
                .body(" { " + 
                    " \"rating\": 515, " + 
                    " \"favourite\": false " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v2/activities/515/rating?EMextraParam123=42")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) POST:/api/v1/activities/{id}/rating
    */
    @Test @Timeout(60)
    public void test_308_postOnActivRatingReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_82_XYZ_")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/api/v1/activities/572/rating")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v2/activities/{id}/rating
    */
    @Test @Timeout(60)
    public void test_309_deleteOnRatingReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/api/v2/activities/4436306702629809313/rating?EMextraParam123=_EM_0_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }
    
    
    /**
    * Calls:
    * (401) DELETE:/api/v1/activities/{id}/rating
    */
    @Test @Timeout(60)
    public void test_310_deleteOnRatingReturns401() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .delete(baseUrlOfSut + "/api/v1/activities/697/rating?EMextraParam123=_EM_4_XYZ_")
                .then()
                .statusCode(401)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Credentials are required to access this resource."));
    }


}
