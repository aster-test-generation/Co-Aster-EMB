package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-04T17:09:30.705-04:00[America/New_York]
 * <br>
*  The generated test suite contains 311 tests
 * <br>
*  Covered targets: 2708
 * <br>
*  Used time: 1h 3m 13s
 * <br>
*  Needed budget for current results: 97%
 * <br>
*  
*/

public class EM_scout_apidefault_1234_Test_92_test_92_postOnCategoriesReturns200UsingSql {
    

    
    private static final SutHandler controller = new em.external.se.devscout.scoutapi.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/scout-api-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList("ACTIVITY","ACTIVITY_DERIVED","ACTIVITY_PROPERTIES","ACTIVITY_PROPERTIES_MEDIA_FILE","ACTIVITY_PROPERTIES_TAG","ACTIVITY_RATING","ACTIVITY_RELATION","MEDIA_FILE","MEDIA_FILE_KEYWORDS","SYSTEM_MESSAGE","TAG","TAG_DERIVED","USERS","USER_IDENTITY","activity","activity_properties","activity_properties_media_file","activity_properties_tag","activity_rating","activity_relation","media_file","system_message","tag","user_identity","users"));
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (200) POST:/api/v1/categories
    */
    @Test @Timeout(60)
    public void test_92_postOnCategoriesReturns200UsingSql() throws Exception {
        List<InsertionDto> insertions = sql().insertInto("MEDIA_FILE", 85L)
                .d("AUTHOR", "\"aFj9dIfA5\"")
                .d("CAPTURE_DATE", "\"1971-04-12 23:17:50\"")
                .d("COPY_RIGHT", "NULL")
                .d("MIME_TYPE", "\"nNTVUtsDJA36YYnd\"")
                .d("NAME", "NULL")
                .d("URI", "\"_EM_5645_XYZ_\"")
            .and().insertInto("MEDIA_FILE", 376L)
                .d("URI", "\"um\"")
            .and().insertInto("USERS", 375L)
                .d("AUTHORIZATION_LEVEL", "344")
                .d("NAME", "\"xDlg1WRYj\"")
            .and().insertInto("ACTIVITY", 374L)
            .and().insertInto("ACTIVITY", 373L)
            .and().insertInto("ACTIVITY_PROPERTIES", 372L)
                .r("ACTIVITY_ID", 373L)
            .and().insertInto("ACTIVITY_PROPERTIES_MEDIA_FILE", 371L)
                .r("ACTIVITY_PROPERTIES_ID", 372L)
                .r("MEDIA_FILE_ID", 85L)
                .d("FEATURED", "false")
            .dtos();
        InsertionResultsDto insertionsresult = controller.execInsertionsIntoDatabase(insertions);
        
        given().accept("application/json")
                .header("Authorization", "ApiKey administrator") // administrator
                .header("x-EMextraHeader123", "")
                .contentType("application/json")
                .body(" { " + 
                    " \"group\": \"Urts4ipgduH6GP\", " + 
                    " \"name\": \"ggjvh6uOmFI\", " + 
                    " \"media_file\": { " + 
                    " \"mime_type\": \"5R2qmyn\", " + 
                    " \"uri\": \"0jVwj_juS5\", " + 
                    " \"name\": \"a4TLya\", " + 
                    " \"author\": \"9YPereVHdzUX\" " + 
                    " }, " + 
                    " \"activities_count\": 338958018 " + 
                    " } ")
                .post(baseUrlOfSut + "/api/v1/categories?min_activities_count=vu1")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'group'", containsString("Urts4ipgduH6GP"))
                .body("'name'", containsString("ggjvh6uOmFI"))
                .body("'media_file'.'mime_type'", containsString("5R2qmyn"))
                .body("'media_file'.'uri'", containsString("0jVwj_juS5"))
                .body("'media_file'.'name'", containsString("a4TLya"))
                .body("'media_file'.'author'", containsString("9YPereVHdzUX"))
                .body("'activities_count'", numberMatches(3.38958018E8));
    }
}
