package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:43:27.165-04:00[America/New_York]
 * <br>
*  The generated test suite contains 408 tests
 * <br>
*  Covered targets: 2217
 * <br>
*  Used time: 1h 5m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_gestaohospitaldefault_1234_Test_303_test_303_getOnEstoqueReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.br.com.codenation.hospital.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/gestaohospital-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) GET:/v1/hospitais/{hospital_id}/estoque
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_303_getOnEstoqueReturnsMismatchResponseWithSchema() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("HospitalDB", "hospital_collection")
                .d("{\"id\":\"53l5W8@J\", \"name\":\"sDZl1Ta\", \"address\":\"hHjeDevD8F\", \"beds\":{\"$numberInt\":\"122\"}, \"availableBeds\":{\"$numberInt\":\"495\"}, \"location\":{\"id\":\"_EM_1445_XYZ_\", \"name\":\"2GbSk1_f\", \"referenceId\":\"eWlGlrzS9j\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.6526827638257942\"}, {\"$numberDouble\":\"0.8283716509713525\"}], \"type\":\"Point\"}}, \"patients\":[{\"id\":\"znGq8I_v\", \"name\":\"mMH\", \"cpf\":\"DxqQUIsTVZyzt\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-144273600000\"}}, \"gender\":\"R60qr3HZQ6VUl\", \"entryDate\":{\"$date\":{\"$numberLong\":\"3018484800000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"2160964800000\"}}, \"active\":false, \"location\":{\"id\":\"6cyOzilM4iAv\", \"name\":\"kDrs8l3p\", \"referenceId\":\"F6XcARU\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.10614123531467612\"}, {\"$numberDouble\":\"0.9798769748256728\"}], \"type\":\"Point\"}}}, {\"id\":\"FnTAXoHOSA5CvoJ\", \"name\":\"X48Y_27ZxYD59\", \"cpf\":\"QUOEA\", \"birthDate\":{\"$date\":{\"$numberLong\":\"609220800000\"}}, \"gender\":\"3d\", \"entryDate\":{\"$date\":{\"$numberLong\":\"888123600000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"2366082000000\"}}, \"active\":false, \"location\":{\"id\":\"W5XKdY538HoKEo\", \"name\":\"_EM_1446_XYZ_\", \"referenceId\":\"_XI\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"72.9252646685507\"}, {\"$numberDouble\":\"0.29342755223515715\"}], \"type\":\"Point\"}}}, {\"id\":\"A\", \"name\":\"_EM_1447_XYZ_\", \"cpf\":\"_EM_1448_XYZ_\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-1726858800000\"}}, \"gender\":\"_EM_1449_XYZ_\", \"entryDate\":{\"$date\":{\"$numberLong\":\"2327025600000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"-614980800000\"}}, \"active\":true, \"location\":{\"id\":\"EPd09POlzADTTZy\", \"name\":\"_EM_1450_XYZ_\", \"referenceId\":\"\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.06625849369130832\"}, {\"$numberDouble\":\"0.197797759194548\"}], \"type\":\"Point\"}}}, {\"id\":\"7vH_Jq7YIBHz\", \"name\":\"\", \"cpf\":\"ypd\", \"birthDate\":{\"$date\":{\"$numberLong\":\"1583899200000\"}}, \"gender\":\"VuIQ4ThsDPALXAa1\", \"entryDate\":{\"$date\":{\"$numberLong\":\"-939409200000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"-1333220400000\"}}, \"active\":false, \"location\":{\"id\":\"nQBx9nvnUPpx\", \"name\":\"7F4FAuhs5c0\", \"referenceId\":\"DY1MG2Tg\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.9484336270136225\"}, {\"$numberDouble\":\"0.5957255088898178\"}], \"type\":\"Point\"}}}], \"products\":[{\"_id\":{\"timestamp\":{\"$numberInt\":\"-261219\"}, \"machineIdentifier\":{\"$numberInt\":\"409\"}, \"processIdentifier\":{\"$numberInt\":\"177\"}, \"counter\":{\"$numberInt\":\"430\"}}, \"name\":\"HElX\", \"description\":\"7KnE3UooZrD75\", \"quantity\":{\"$numberInt\":\"2207\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"735\"}, \"machineIdentifier\":{\"$numberInt\":\"204\"}, \"processIdentifier\":{\"$numberInt\":\"68\"}, \"counter\":{\"$numberInt\":\"283\"}}, \"name\":\"Db\", \"description\":\"OYUr\", \"quantity\":{\"$numberInt\":\"-8070\"}, \"productType\":\"COMMON\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"22\"}, \"machineIdentifier\":{\"$numberInt\":\"465\"}, \"processIdentifier\":{\"$numberInt\":\"465\"}, \"counter\":{\"$numberInt\":\"950\"}}, \"name\":\"pTP2R\", \"description\":\"p8VUL1HzgpwYF3\", \"quantity\":{\"$numberInt\":\"1231859380\"}, \"productType\":\"COMMON\"}], \"_id\":{\"$oid\":\"76e8eef8b6d4978d72c7dc0b\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/v1/hospitais/{hospital_id}/estoque'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v1/hospitais/_EM_1340_XYZ_/estoque?EMextraParam123=42")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
