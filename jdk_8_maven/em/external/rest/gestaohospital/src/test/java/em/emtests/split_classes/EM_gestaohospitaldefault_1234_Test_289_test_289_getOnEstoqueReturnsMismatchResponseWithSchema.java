package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:43:27.165-04:00[America/New_York]
 * <br>
*  The generated test suite contains 408 tests
 * <br>
*  Covered targets: 2217
 * <br>
*  Used time: 1h 5m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_gestaohospitaldefault_1234_Test_289_test_289_getOnEstoqueReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.br.com.codenation.hospital.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/gestaohospital-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) GET:/v1/hospitais/{hospital_id}/estoque
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_289_getOnEstoqueReturnsMismatchResponseWithSchema() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("HospitalDB", "hospital_collection")
                .d("{\"id\":\"_EM_1616_XYZ_\", \"name\":\"VBUt8r3\", \"address\":\"_m49dQaY\", \"beds\":{\"$numberInt\":\"-130198\"}, \"availableBeds\":{\"$numberInt\":\"4434\"}, \"location\":{\"id\":\"D7vvKxsz5i\", \"name\":\"E4HNn9BnuBqt\", \"referenceId\":\"PgcO5H9Cq2\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.03714145740260144\"}, {\"$numberDouble\":\"1.593733614946451\"}], \"type\":\"Point\"}}, \"patients\":[{\"id\":\"hyQ\", \"name\":\"RgV6nvSv6Ih\", \"cpf\":\"2zdax8Ou5wY5\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-1807988400000\"}}, \"gender\":\"_EM_1417_XYZ_\", \"entryDate\":{\"$date\":{\"$numberLong\":\"-1017255600000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"3252459600000\"}}, \"active\":true, \"location\":{\"id\":\"CTOi75BbZx\", \"name\":\"WRT.i46\", \"referenceId\":\"viduM\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.34179623584395613\"}, {\"$numberDouble\":\"0.7706466381985487\"}], \"type\":\"Point\"}}}], \"products\":[{\"_id\":{\"timestamp\":{\"$numberInt\":\"140\"}, \"machineIdentifier\":{\"$numberInt\":\"208\"}, \"processIdentifier\":{\"$numberInt\":\"101\"}, \"counter\":{\"$numberInt\":\"740\"}}, \"name\":\"S0IRjziFkEh\", \"description\":\"E1Rs9_IEOxwDr7G\", \"quantity\":{\"$numberInt\":\"707\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"615\"}, \"machineIdentifier\":{\"$numberInt\":\"501\"}, \"processIdentifier\":{\"$numberInt\":\"134\"}, \"counter\":{\"$numberInt\":\"698\"}}, \"name\":\"tfgNxpkT_x\", \"description\":\"49il45OmTsyZcHNk\", \"quantity\":{\"$numberInt\":\"934\"}, \"productType\":\"COMMON\"}], \"_id\":{\"$oid\":\"9295b7ef2e23c3f9c490a66e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/v1/hospitais/{hospital_id}/estoque'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_966_XYZ_")
                .get(baseUrlOfSut + "/v1/hospitais/9295b7ef2e23c3f9c490a66e/estoque")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
