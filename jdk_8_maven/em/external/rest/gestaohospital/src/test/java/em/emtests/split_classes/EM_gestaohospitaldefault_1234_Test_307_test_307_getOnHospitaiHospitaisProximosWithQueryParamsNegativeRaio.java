package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:43:27.165-04:00[America/New_York]
 * <br>
*  The generated test suite contains 408 tests
 * <br>
*  Covered targets: 2217
 * <br>
*  Used time: 1h 5m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_gestaohospitaldefault_1234_Test_307_test_307_getOnHospitaiHospitaisProximosWithQueryParamsNegativeRaio {
    

    
    private static final SutHandler controller = new em.external.br.com.codenation.hospital.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/gestaohospital-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) GET:/v1/hospitais/{hospital_id}/hospitaisProximos
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_307_getOnHospitaiHospitaisProximosWithQueryParamsNegativeRaio() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("HospitalDB", "hospital_collection")
                .d("{\"id\":\"x6U65ST\", \"name\":\"vIOT1TM85Tp\", \"address\":\"6M\", \"beds\":{\"$numberInt\":\"37\"}, \"availableBeds\":{\"$numberInt\":\"-2096248\"}, \"location\":{\"id\":\"6j\", \"name\":\"inD5jCt1\", \"referenceId\":\"gQ2BhUEsM9o\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.6012502688071231\"}, {\"$numberDouble\":\"0.4319458864071405\"}], \"type\":\"Point\"}}, \"patients\":[{\"id\":\"WO\", \"name\":\"LZYmuXLEQ7\", \"cpf\":\"SZz5FtfVLnzyG\", \"birthDate\":{\"$date\":{\"$numberLong\":\"1115092800000\"}}, \"gender\":\"_EM_1749_XYZ_\", \"entryDate\":{\"$date\":{\"$numberLong\":\"3604104000000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"-920142000000\"}}, \"active\":true, \"location\":{\"id\":\"_EM_1750_XYZ_\", \"name\":\"miox62o4dOD\", \"referenceId\":\"o\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.3954141862883579\"}, {\"$numberDouble\":\"0.42461500309588296\"}], \"type\":\"Point\"}}}, {\"id\":\"X_x2AR60XkzKWuD\", \"name\":\"68KOjpOxOfeK34Bj\", \"cpf\":\"cca3mZ0O\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-1564862400000\"}}, \"gender\":\"_EM_1751_XYZ_\", \"entryDate\":{\"$date\":{\"$numberLong\":\"3177115200000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"2514772800000\"}}, \"active\":false, \"location\":{\"id\":\"4QDc3sWl_pWpni\", \"name\":\"9bY2CpTED2C\", \"referenceId\":\"TskSsue5ok7MU1\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"-1.2101687394256797\"}, {\"$numberDouble\":\"-2.2418100575885996E7\"}], \"type\":\"Point\"}}}, {\"id\":\"T\", \"name\":\"wXFqAw\", \"cpf\":\"KVSjie\", \"birthDate\":{\"$date\":{\"$numberLong\":\"2312424000000\"}}, \"gender\":\"HXOA0WpMA89U1Yp\", \"entryDate\":{\"$date\":{\"$numberLong\":\"-390340800000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"756795600000\"}}, \"active\":true, \"location\":{\"id\":\"cXqAEn\", \"name\":\"kwmcrcnV\", \"referenceId\":\"N_Kbv\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.8369841940747507\"}, {\"$numberDouble\":\"0.38722874684746755\"}], \"type\":\"Point\"}}}], \"products\":[{\"_id\":{\"timestamp\":{\"$numberInt\":\"562\"}, \"machineIdentifier\":{\"$numberInt\":\"70\"}, \"processIdentifier\":{\"$numberInt\":\"134\"}, \"counter\":{\"$numberInt\":\"687\"}}, \"name\":\"aBVgh14vx\", \"description\":\"OAs2Yn\", \"quantity\":{\"$numberInt\":\"297\"}, \"productType\":\"COMMON\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"707\"}, \"machineIdentifier\":{\"$numberInt\":\"792\"}, \"processIdentifier\":{\"$numberInt\":\"222\"}, \"counter\":{\"$numberInt\":\"696\"}}, \"name\":\"\", \"description\":\"KWGGKT\", \"quantity\":{\"$numberInt\":\"936\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"925\"}, \"machineIdentifier\":{\"$numberInt\":\"399\"}, \"processIdentifier\":{\"$numberInt\":\"40\"}, \"counter\":{\"$numberInt\":\"405\"}}, \"name\":\"Ruqz7a\", \"description\":\"epVCwNAvZjWsM\", \"quantity\":{\"$numberInt\":\"497\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"506\"}, \"machineIdentifier\":{\"$numberInt\":\"116\"}, \"processIdentifier\":{\"$numberInt\":\"708\"}, \"counter\":{\"$numberInt\":\"166\"}}, \"name\":\"QPL0A4fn6\", \"description\":\"s00qwXDujgqDoo\", \"quantity\":{\"$numberInt\":\"157\"}, \"productType\":\"BLOOD\"}], \"_id\":{\"$oid\":\"e4f8ec91e07ee21a6deadfbc\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/v1/hospitais/{hospital_id}/hospitaisProximos'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "0.9721933601934835")
                .get(baseUrlOfSut + "/v1/hospitais/_EM_1752_XYZ_/hospitaisProximos?" + 
                    "raio=-94.05075311343919&" + 
                    "EMextraParam123=_EM_1406_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
