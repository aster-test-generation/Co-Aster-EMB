package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:43:27.165-04:00[America/New_York]
 * <br>
*  The generated test suite contains 408 tests
 * <br>
*  Covered targets: 2217
 * <br>
*  Used time: 1h 5m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_gestaohospitaldefault_1234_Test_259_test_259_deleteOnHospitaiReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.br.com.codenation.hospital.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/gestaohospital-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) DELETE:/v1/hospitais/{hospital_id}
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_259_deleteOnHospitaiReturnsMismatchResponseWithSchema() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("HospitalDB", "hospital_collection")
                .d("{\"id\":\"gvsQm\", \"name\":\"X\", \"address\":\"vYP0uxDU8s\", \"beds\":{\"$numberInt\":\"-7280\"}, \"availableBeds\":{\"$numberInt\":\"-67107895\"}, \"location\":{\"id\":\"cKEBEb\", \"name\":\"MO_Z0\", \"referenceId\":\"ZxN8bRcwJJ\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.42922527943160393\"}, {\"$numberDouble\":\"0.4902111503200325\"}], \"type\":\"Point\"}}, \"patients\":[{\"id\":\"\", \"name\":\"djBlh9G8JWw3\", \"cpf\":\"69Z3uYhH4KRe6KL\", \"birthDate\":{\"$date\":{\"$numberLong\":\"3948238800000\"}}, \"gender\":\"ikOlicbG5qCl_Ke\", \"entryDate\":{\"$date\":{\"$numberLong\":\"673675200000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"4128292800000\"}}, \"active\":false, \"location\":{\"id\":\"_KEcWK83KajUl_Op\", \"name\":\"lckU6qOMMz_kTuCG\", \"referenceId\":\"RuKyhxVigC9o9SBD\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.5066412093155518\"}, {\"$numberDouble\":\"0.17699066104458305\"}], \"type\":\"Point\"}}}, {\"id\":\"_EM_3980_XYZ_\", \"name\":\"_EM_3981_XYZ_\", \"cpf\":\"2rXmg871MU\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-149626800000\"}}, \"gender\":\"8PBUDzrZMyj\", \"entryDate\":{\"$date\":{\"$numberLong\":\"-1338408000000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"3161822400000\"}}, \"active\":false, \"location\":{\"id\":\"ksVGQYOlXybXs\", \"name\":\"qXZIZ_0hqBL\", \"referenceId\":\"oZrV\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.4425037773347176\"}, {\"$numberDouble\":\"0.10969417914886437\"}], \"type\":\"Point\"}}}], \"products\":[{\"_id\":{\"timestamp\":{\"$numberInt\":\"889\"}, \"machineIdentifier\":{\"$numberInt\":\"349\"}, \"processIdentifier\":{\"$numberInt\":\"574\"}, \"counter\":{\"$numberInt\":\"333\"}}, \"name\":\"JtX2IkOoYgXyuyXQ\", \"description\":\"i4gKaYr<ol\", \"quantity\":{\"$numberInt\":\"187\"}, \"productType\":\"COMMON\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"216\"}, \"machineIdentifier\":{\"$numberInt\":\"754\"}, \"processIdentifier\":{\"$numberInt\":\"895\"}, \"counter\":{\"$numberInt\":\"-701835810\"}}, \"name\":\"F8Y2ANnLlz\", \"description\":\"9T1CsW\", \"quantity\":{\"$numberInt\":\"45\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"689\"}, \"machineIdentifier\":{\"$numberInt\":\"338\"}, \"processIdentifier\":{\"$numberInt\":\"-6365\"}, \"counter\":{\"$numberInt\":\"315\"}}, \"name\":\"SQ\", \"description\":\"t\", \"quantity\":{\"$numberInt\":\"236\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"913\"}, \"machineIdentifier\":{\"$numberInt\":\"584\"}, \"processIdentifier\":{\"$numberInt\":\"28539\"}, \"counter\":{\"$numberInt\":\"82\"}}, \"name\":\"wgZmg8\", \"description\":\"vBvW\", \"quantity\":{\"$numberInt\":\"452\"}, \"productType\":\"COMMON\"}], \"_id\":{\"$oid\":\"4fdf81145da7602daf9aee8d\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/v1/hospitais/{hospital_id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/v1/hospitais/_EM_1326_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
