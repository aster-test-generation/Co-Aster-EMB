package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:43:27.165-04:00[America/New_York]
 * <br>
*  The generated test suite contains 408 tests
 * <br>
*  Covered targets: 2217
 * <br>
*  Used time: 1h 5m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_gestaohospitaldefault_1234_Test_320_test_320_getOnLeitosReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.br.com.codenation.hospital.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/gestaohospital-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) GET:/v1/hospitais/{id}/leitos
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_320_getOnLeitosReturnsMismatchResponseWithSchema() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("HospitalDB", "hospital_collection")
                .d("{\"id\":\"AqtVmpC\", \"name\":\"roHpkfpteAXV\", \"address\":\"_EM_3849_XYZ_\", \"beds\":{\"$numberInt\":\"731\"}, \"availableBeds\":{\"$numberInt\":\"8357\"}, \"location\":{\"id\":\"IERx5BB\", \"name\":\"Sb\", \"referenceId\":\"stica\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.2553578988051489\"}, {\"$numberDouble\":\"0.12247400806385988\"}], \"type\":\"Point\"}}, \"patients\":[{\"id\":\"\", \"name\":\"a4JF_\", \"cpf\":\"Lf1EOWNky5etgz\", \"birthDate\":{\"$date\":{\"$numberLong\":\"1892437200000\"}}, \"gender\":\"Nge1TUy\", \"entryDate\":{\"$date\":{\"$numberLong\":\"1001736000000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"3058405200000\"}}, \"active\":false, \"location\":{\"id\":\"SInXzSkxIRaR3\", \"name\":\"D\", \"referenceId\":\"j\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.9737475678411727\"}, {\"$numberDouble\":\"0.22671900652893506\"}], \"type\":\"Point\"}}}, {\"id\":\"r\", \"name\":\"prf1BBw\", \"cpf\":\"WwJY4m3I9HqkH8vM\", \"birthDate\":{\"$date\":{\"$numberLong\":\"379746000000\"}}, \"gender\":\"6ogWrZVnzjRw\", \"entryDate\":{\"$date\":{\"$numberLong\":\"552715200000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"458884800000\"}}, \"active\":true, \"location\":{\"id\":\"AqtVmpC\", \"name\":\"Tq5i4\", \"referenceId\":\"o\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.05520771493070831\"}, {\"$numberDouble\":\"0.7706639765227488\"}], \"type\":\"Point\"}}}, {\"id\":\"\", \"name\":\"9tAVnygDJ\", \"cpf\":\"qXSRRKy7IbA1b41e\", \"birthDate\":{\"$date\":{\"$numberLong\":\"4016404800000\"}}, \"gender\":\"Q33OmBlniI2ZN\", \"entryDate\":{\"$date\":{\"$numberLong\":\"975474000000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"1173589200000\"}}, \"active\":false, \"location\":{\"id\":\"HIm4Pr\", \"name\":\"Nggq0r2Qu_BZzPrm\", \"referenceId\":\"t8s5z8\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.013333796161131395\"}, {\"$numberDouble\":\"0.6077629282732648\"}], \"type\":\"Point\"}}}, {\"id\":\"qJxnuprEEHkcuxwe\", \"name\":\"LgQZWDYDE@nXRj\", \"cpf\":\"CzgoywDe4p\", \"birthDate\":{\"$date\":{\"$numberLong\":\"3111624000000\"}}, \"gender\":\"\", \"entryDate\":{\"$date\":{\"$numberLong\":\"-88023600000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"1733288400000\"}}, \"active\":false, \"location\":{\"id\":\"VM_1NT02aJa\", \"name\":\"sQc7YiI0\", \"referenceId\":\"_EM_3850_XYZ_\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.6944984448808029\"}, {\"$numberDouble\":\"0.5654140803710289\"}], \"type\":\"Point\"}}}], \"products\":[{\"_id\":{\"timestamp\":{\"$numberInt\":\"769\"}, \"machineIdentifier\":{\"$numberInt\":\"119\"}, \"processIdentifier\":{\"$numberInt\":\"894\"}, \"counter\":{\"$numberInt\":\"929\"}}, \"name\":\"I\", \"description\":\"u1o9ClewtN_3\", \"quantity\":{\"$numberInt\":\"574\"}, \"productType\":\"COMMON\"}], \"_id\":{\"$oid\":\"cb9b97ef92b8a3f56e4bcbde\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/v1/hospitais/{id}/leitos'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v1/hospitais/_EM_1378_XYZ_/leitos")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'message'", containsString("Hospital n√£o encontrado! ID:_EM_1378_XYZ_"))
                .body("'path'", containsString("/v1/hospitais/_EM_1378_XYZ_/leitos"));
    }
}
