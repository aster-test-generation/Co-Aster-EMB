package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:43:27.165-04:00[America/New_York]
 * <br>
*  The generated test suite contains 408 tests
 * <br>
*  Covered targets: 2217
 * <br>
*  Used time: 1h 5m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_gestaohospitaldefault_1234_Test_313_test_313_getOnProximidadesReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.br.com.codenation.hospital.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/gestaohospital-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) GET:/v1/hospitais/{hospital_id}/proximidades
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_313_getOnProximidadesReturnsMismatchResponseWithSchema() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("HospitalDB", "hospital_collection")
                .d("{\"id\":\"I7ORfZF1MJIIu\", \"name\":\"0\", \"address\":\"fB8Zvx6ZQDClUN\", \"beds\":{\"$numberInt\":\"0\"}, \"availableBeds\":{\"$numberInt\":\"14\"}, \"location\":{\"id\":\"8X\", \"name\":\"P3qzTj6z9VQ\", \"referenceId\":\"xQ5NzEFx\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.5711111994435716\"}, {\"$numberDouble\":\"0.20087613300450147\"}], \"type\":\"Point\"}}, \"patients\":[{\"id\":\"qCY_v\", \"name\":\"xzCpQNOiBzWwa\", \"cpf\":\"rCKhaAj831\", \"birthDate\":{\"$date\":{\"$numberLong\":\"392788800000\"}}, \"gender\":\"\", \"entryDate\":{\"$date\":{\"$numberLong\":\"1434081600000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"1687752000000\"}}, \"active\":false, \"location\":{\"id\":\"P7Az5\", \"name\":\"Ua2Qyob\", \"referenceId\":\"6yLxQgZ\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.6779375835832183\"}, {\"$numberDouble\":\"0.5719313020690653\"}], \"type\":\"Point\"}}}], \"products\":[{\"_id\":{\"timestamp\":{\"$numberInt\":\"17\"}, \"machineIdentifier\":{\"$numberInt\":\"19\"}, \"processIdentifier\":{\"$numberInt\":\"463\"}, \"counter\":{\"$numberInt\":\"782031790\"}}, \"name\":\"0nPJj4eXm\", \"description\":\"qusT5aYFpzrU3\", \"quantity\":{\"$numberInt\":\"845\"}, \"productType\":\"COMMON\"}], \"_id\":{\"$oid\":\"48400a9790ebd0d04f19c31e\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/v1/hospitais/{hospital_id}/proximidades'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v1/hospitais/_EM_1999_XYZ_/proximidades")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
