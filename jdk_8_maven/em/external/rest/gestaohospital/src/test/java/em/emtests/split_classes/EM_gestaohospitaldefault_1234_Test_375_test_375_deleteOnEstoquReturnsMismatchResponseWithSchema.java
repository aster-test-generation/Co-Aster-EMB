package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:43:27.165-04:00[America/New_York]
 * <br>
*  The generated test suite contains 408 tests
 * <br>
*  Covered targets: 2217
 * <br>
*  Used time: 1h 5m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_gestaohospitaldefault_1234_Test_375_test_375_deleteOnEstoquReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.br.com.codenation.hospital.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/gestaohospital-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) DELETE:/v1/hospitais/{hospital_id}/estoque/{produto_id}
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_375_deleteOnEstoquReturnsMismatchResponseWithSchema() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("HospitalDB", "product_collection")
                .d("{\"name\":\"O0B_BKkC_g0\", \"description\":\"82i\", \"quantity\":{\"$numberInt\":\"893\"}, \"productType\":\"BLOOD\", \"_id\":{\"$oid\":\"90a33dc7c36d2fcd6915a7cc\"}}")
            .and().insertInto("HospitalDB", "hospital_collection")
                .d("{\"id\":\"sNuhmaN4\", \"name\":\"F0ZRS\", \"address\":\"p76F6xHP7NeeHmuQ\", \"beds\":{\"$numberInt\":\"685\"}, \"availableBeds\":{\"$numberInt\":\"236\"}, \"location\":{\"id\":\"tpT0SU4\", \"name\":\"RfLXyp\", \"referenceId\":\"LS6jLuy\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.6840276865759302\"}, {\"$numberDouble\":\"0.18315074133041576\"}], \"type\":\"Point\"}}, \"patients\":[{\"id\":\"YAW\", \"name\":\"G2vyu\", \"cpf\":\"tbXmpDC2HBZ2fh\", \"birthDate\":{\"$date\":{\"$numberLong\":\"1541044800000\"}}, \"gender\":\"Vw08UD\", \"entryDate\":{\"$date\":{\"$numberLong\":\"-327009600000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"515822400000\"}}, \"active\":false, \"location\":{\"id\":\"Dnik\", \"name\":\"hX9_av\", \"referenceId\":\"Fu\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.3947625734596196\"}, {\"$numberDouble\":\"0.8855018984330095\"}], \"type\":\"Point\"}}}, {\"id\":\"yKCpREz6jt5WCz7u\", \"name\":\"M\", \"cpf\":\"drh4UVrP\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-765226800000\"}}, \"gender\":\"c0\", \"entryDate\":{\"$date\":{\"$numberLong\":\"1776484800000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"2385864000000\"}}, \"active\":true, \"location\":{\"id\":\"HTFpIzTGO\", \"name\":\"UAmE0AFhxSA\", \"referenceId\":\"1gkjQ1f\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.9624386659495053\"}, {\"$numberDouble\":\"0.5149129999925125\"}], \"type\":\"Point\"}}}, {\"id\":\"WlFzAjpZK\", \"name\":\"dosHpMXhx\", \"cpf\":\"\", \"birthDate\":{\"$date\":{\"$numberLong\":\"1702789200000\"}}, \"gender\":\"nBsXzkgAI0\", \"entryDate\":{\"$date\":{\"$numberLong\":\"-16228800000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"1464667200000\"}}, \"active\":false, \"location\":{\"id\":\"c_Z2h6\", \"name\":\"UJ1trJkHvgFwgiP\", \"referenceId\":\"bR1ZAy8eneL4KB\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.22420403343000816\"}, {\"$numberDouble\":\"0.5793109645818644\"}], \"type\":\"Point\"}}}, {\"id\":\"JwDKmJjUNry7G\", \"name\":\"ziyPdf_xkoyirc\", \"cpf\":\"MCoRybUauTMx\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-1466884800000\"}}, \"gender\":\"TVn3jH\", \"entryDate\":{\"$date\":{\"$numberLong\":\"3934152000000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"-1420830000000\"}}, \"active\":true, \"location\":{\"id\":\"7pvq4\", \"name\":\"3s\", \"referenceId\":\"f\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.060381768016187665\"}, {\"$numberDouble\":\"0.3117737154703285\"}], \"type\":\"Point\"}}}], \"products\":[{\"_id\":{\"timestamp\":{\"$numberInt\":\"202\"}, \"machineIdentifier\":{\"$numberInt\":\"727\"}, \"processIdentifier\":{\"$numberInt\":\"841\"}, \"counter\":{\"$numberInt\":\"9\"}}, \"name\":\"y\", \"description\":\"9n\", \"quantity\":{\"$numberInt\":\"903\"}, \"productType\":\"COMMON\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"348\"}, \"machineIdentifier\":{\"$numberInt\":\"637\"}, \"processIdentifier\":{\"$numberInt\":\"678\"}, \"counter\":{\"$numberInt\":\"747\"}}, \"name\":\"VmZMr4CT\", \"description\":\"KXp\", \"quantity\":{\"$numberInt\":\"277\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"943\"}, \"machineIdentifier\":{\"$numberInt\":\"559\"}, \"processIdentifier\":{\"$numberInt\":\"139\"}, \"counter\":{\"$numberInt\":\"117\"}}, \"name\":\"cTaPVqh\", \"description\":\"FFwV9e\", \"quantity\":{\"$numberInt\":\"552\"}, \"productType\":\"BLOOD\"}], \"_id\":{\"$oid\":\"7e233beff53c6cd3020add77\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/v1/hospitais/{hospital_id}/estoque/{produto_id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_4_XYZ_")
                .delete(baseUrlOfSut + "/v1/hospitais/_EM_2995_XYZ_/estoque/90a33dc7c36d2fcd6915a7cc")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
