package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:43:27.165-04:00[America/New_York]
 * <br>
*  The generated test suite contains 408 tests
 * <br>
*  Covered targets: 2217
 * <br>
*  Used time: 1h 5m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_gestaohospitaldefault_1234_Test_314_test_314_getOnLeitosReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.br.com.codenation.hospital.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/gestaohospital-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) GET:/v1/hospitais/{id}/leitos
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_314_getOnLeitosReturnsMismatchResponseWithSchema() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("HospitalDB", "hospital_collection")
                .d("{\"id\":\"yCZuCBob6cYJPw1\", \"name\":\"vncn6P1zTUf2\", \"address\":\"GxMxG4Q2lbgr9\", \"beds\":{\"$numberInt\":\"718\"}, \"availableBeds\":{\"$numberInt\":\"97\"}, \"location\":{\"id\":\"_EM_2124_XYZ_\", \"name\":\"6x3EYl2\", \"referenceId\":\"ov9SFe4lP\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.7281346796141113\"}, {\"$numberDouble\":\"0.15354673127045\"}], \"type\":\"Point\"}}, \"patients\":[{\"id\":\"6\", \"name\":\"_EM_2125_XYZ_\", \"cpf\":\"LCyjVgcNgFxj5\", \"birthDate\":{\"$date\":{\"$numberLong\":\"3633829200000\"}}, \"gender\":\"Z069oReU\", \"entryDate\":{\"$date\":{\"$numberLong\":\"33714000000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"-2178990000000\"}}, \"active\":true, \"location\":{\"id\":\"WlFqbsQV2V7zKuK\", \"name\":\"Uq\", \"referenceId\":\"y1yOpwtRYEO0KvTf\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.2961616704912817\"}, {\"$numberDouble\":\"0.7723223367369002\"}], \"type\":\"Point\"}}}, {\"id\":\"NdqC\", \"name\":\"\", \"cpf\":\"hZWiEtDd\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-2177521200000\"}}, \"gender\":\"0yS9AO\", \"entryDate\":{\"$date\":{\"$numberLong\":\"2129860800000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"3078532800000\"}}, \"active\":true, \"location\":{\"id\":\"mUdDqpJ4\", \"name\":\"ET\", \"referenceId\":\"M00DshV7\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.06818649713002128\"}, {\"$numberDouble\":\"0.11828853342209611\"}], \"type\":\"Point\"}}}, {\"id\":\"bK0MLHk\", \"name\":\"PymijxwwQS\", \"cpf\":\"glRqviY\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-460929600000\"}}, \"gender\":\"\", \"entryDate\":{\"$date\":{\"$numberLong\":\"2601172800000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"2971400400000\"}}, \"active\":true, \"location\":{\"id\":\"XLtZGEaF_oZ9RO\", \"name\":\"ebtgtOYQVS\", \"referenceId\":\"2PbujK6\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.11964817536489047\"}, {\"$numberDouble\":\"0.7876334324023149\"}], \"type\":\"Point\"}}}, {\"id\":\"T7\", \"name\":\"HPrUbGOUmXcWUCMU\", \"cpf\":\"5zm70TK3\", \"birthDate\":{\"$date\":{\"$numberLong\":\"34146000000\"}}, \"gender\":\"IKsxOo\", \"entryDate\":{\"$date\":{\"$numberLong\":\"1992402000000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"-2028135600000\"}}, \"active\":false, \"location\":{\"id\":\"_EM_2126_XYZ_\", \"name\":\"q5agm5Z\", \"referenceId\":\"_EM_2127_XYZ_\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.014226168511182635\"}, {\"$numberDouble\":\"0.27678097496126686\"}], \"type\":\"Point\"}}}, {\"id\":\"_EM_2128_XYZ_\", \"name\":\"n\", \"cpf\":\"NAS\", \"birthDate\":{\"$date\":{\"$numberLong\":\"2767147200000\"}}, \"gender\":\"_EM_2129_XYZ_\", \"entryDate\":{\"$date\":{\"$numberLong\":\"965361600000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"167198400000\"}}, \"active\":true, \"location\":{\"id\":\"Amt2lEG6sFGzp_7o\", \"name\":\"OO5y65HddfgBxa\", \"referenceId\":\"A0sO\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.9936514358345706\"}, {\"$numberDouble\":\"0.21031697473748145\"}], \"type\":\"Point\"}}}], \"products\":[{\"_id\":{\"timestamp\":{\"$numberInt\":\"841\"}, \"machineIdentifier\":{\"$numberInt\":\"462\"}, \"processIdentifier\":{\"$numberInt\":\"232\"}, \"counter\":{\"$numberInt\":\"591\"}}, \"name\":\"AQQgWhvBrWVoTuYG\", \"description\":\"X_6ZYleuEu73rO\", \"quantity\":{\"$numberInt\":\"118\"}, \"productType\":\"COMMON\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"-7\"}, \"machineIdentifier\":{\"$numberInt\":\"4650\"}, \"processIdentifier\":{\"$numberInt\":\"786\"}, \"counter\":{\"$numberInt\":\"943\"}}, \"name\":\"\", \"description\":\"JEQT\", \"quantity\":{\"$numberInt\":\"33554523\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"-8008\"}, \"machineIdentifier\":{\"$numberInt\":\"-130752\"}, \"processIdentifier\":{\"$numberInt\":\"192\"}, \"counter\":{\"$numberInt\":\"131794\"}}, \"name\":\"_EM_2130_XYZ_\", \"description\":\"ab2NoJmB51y28Os\", \"quantity\":{\"$numberInt\":\"134217959\"}, \"productType\":\"BLOOD\"}], \"_id\":{\"$oid\":\"cb1fdbbb955dc3b2bb1e132f\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/v1/hospitais/{id}/leitos'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v1/hospitais/_EM_2131_XYZ_/leitos")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'message'", containsString("Hospital n√£o encontrado! ID:_EM_2131_XYZ_"))
                .body("'path'", containsString("/v1/hospitais/_EM_2131_XYZ_/leitos"));
    }
}
