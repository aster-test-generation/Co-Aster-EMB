package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:43:27.165-04:00[America/New_York]
 * <br>
*  The generated test suite contains 408 tests
 * <br>
*  Covered targets: 2217
 * <br>
*  Used time: 1h 5m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_gestaohospitaldefault_1234_Test_323_test_323_getOnEstoqueReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.br.com.codenation.hospital.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/gestaohospital-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) GET:/v1/hospitais/{hospital_id}/estoque
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_323_getOnEstoqueReturnsMismatchResponseWithSchema() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("HospitalDB", "hospital_collection")
                .d("{\"id\":\"5of\", \"name\":\"UfVy9UUU71Zf\", \"address\":\"oSXvSCRL91ZjWr\", \"beds\":{\"$numberInt\":\"134217845\"}, \"availableBeds\":{\"$numberInt\":\"960\"}, \"location\":{\"id\":\"B30AsiuRP7IhNNK\", \"name\":\"XW6vSyuU7p\", \"referenceId\":\"cHFj1Nz_\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.5260546331225305\"}, {\"$numberDouble\":\"0.0\"}], \"type\":\"Point\"}}, \"patients\":[{\"id\":\"Chv\", \"name\":\"EdKTHxOoE\", \"cpf\":\"_EM_1619_XYZ_\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-2194714800000\"}}, \"gender\":\"_EM_1620_XYZ_\", \"entryDate\":{\"$date\":{\"$numberLong\":\"2916014400000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"-495226800000\"}}, \"active\":false, \"location\":{\"id\":\"_EM_1621_XYZ_\", \"name\":\"GMirdu_0b\", \"referenceId\":\"_EM_1622_XYZ_\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.9463487418098027\"}, {\"$numberDouble\":\"0.3042467377833995\"}], \"type\":\"Point\"}}}, {\"id\":\"kewTjIH\", \"name\":\"o1z_MJjO9dFK\", \"cpf\":\"iDwHflg\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-1899658800000\"}}, \"gender\":\"WhIRwkLhzcTlQ\", \"entryDate\":{\"$date\":{\"$numberLong\":\"-1660071600000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"1607576400000\"}}, \"active\":true, \"location\":{\"id\":\"qfM9fd\", \"name\":\"XbHgBsLj0MUVinwK\", \"referenceId\":\"_EM_1623_XYZ_\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.3004381906914154\"}, {\"$numberDouble\":\"0.6173470847634307\"}], \"type\":\"Point\"}}}, {\"id\":\"OqQ4jCHAe3PDP\", \"name\":\"_EOi9\", \"cpf\":\"k4d0yK\", \"birthDate\":{\"$date\":{\"$numberLong\":\"3886808400000\"}}, \"gender\":\"\", \"entryDate\":{\"$date\":{\"$numberLong\":\"518241600000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"1739336400000\"}}, \"active\":true, \"location\":{\"id\":\"_EM_1624_XYZ_\", \"name\":\"LeLRYXNeM_u6\", \"referenceId\":\"91TaYeJ\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.3603416927404197\"}, {\"$numberDouble\":\"0.9354449874691076\"}], \"type\":\"Point\"}}}, {\"id\":\"npuw6Quz\", \"name\":\"1UUKE\", \"cpf\":\"dj83adx\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-1671130800000\"}}, \"gender\":\"bEZq\", \"entryDate\":{\"$date\":{\"$numberLong\":\"-2085159600000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"3096334800000\"}}, \"active\":false, \"location\":{\"id\":\"H\", \"name\":\"\", \"referenceId\":\"trM\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.5210738613935475\"}, {\"$numberDouble\":\"0.513380828381273\"}], \"type\":\"Point\"}}}, {\"id\":\"04QXo\", \"name\":\"oxbCAzAJt\", \"cpf\":\"l\", \"birthDate\":{\"$date\":{\"$numberLong\":\"3752715600000\"}}, \"gender\":\"ahJ\", \"entryDate\":{\"$date\":{\"$numberLong\":\"1839902400000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"3136334400000\"}}, \"active\":true, \"location\":{\"id\":\"GGq9WemQ0aOactD\", \"name\":\"99WLTw\", \"referenceId\":\"koT4FnDk\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.41659223434183323\"}, {\"$numberDouble\":\"0.6580669741866754\"}], \"type\":\"Point\"}}}], \"products\":[{\"_id\":{\"timestamp\":{\"$numberInt\":\"368\"}, \"machineIdentifier\":{\"$numberInt\":\"621\"}, \"processIdentifier\":{\"$numberInt\":\"249\"}, \"counter\":{\"$numberInt\":\"288\"}}, \"name\":\"cIEr9X7Wx\", \"description\":\"_EM_4205_XYZ_\", \"quantity\":{\"$numberInt\":\"907\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"713\"}, \"machineIdentifier\":{\"$numberInt\":\"157\"}, \"processIdentifier\":{\"$numberInt\":\"1229\"}, \"counter\":{\"$numberInt\":\"601\"}}, \"name\":\"VweQnKTZcp\", \"description\":\"1jQ\", \"quantity\":{\"$numberInt\":\"764\"}, \"productType\":\"COMMON\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"374\"}, \"machineIdentifier\":{\"$numberInt\":\"684\"}, \"processIdentifier\":{\"$numberInt\":\"268\"}, \"counter\":{\"$numberInt\":\"469\"}}, \"name\":\"uekzuHkIbVKkWXIg\", \"description\":\"aLu9a\", \"quantity\":{\"$numberInt\":\"176\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"673\"}, \"machineIdentifier\":{\"$numberInt\":\"66389\"}, \"processIdentifier\":{\"$numberInt\":\"-15981\"}, \"counter\":{\"$numberInt\":\"915\"}}, \"name\":\"_EM_1625_XYZ_\", \"description\":\"_EM_1626_XYZ_\", \"quantity\":{\"$numberInt\":\"-8387855\"}, \"productType\":\"BLOOD\"}], \"_id\":{\"$oid\":\"2abaf06d6e926fef55b2bed8\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/v1/hospitais/{hospital_id}/estoque'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v1/hospitais/_EM_1507_XYZ_/estoque")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
