package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:43:27.165-04:00[America/New_York]
 * <br>
*  The generated test suite contains 408 tests
 * <br>
*  Covered targets: 2217
 * <br>
*  Used time: 1h 5m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_gestaohospitaldefault_1234_Test_89_test_89_getOnHospitaiReturnsObject {
    

    
    private static final SutHandler controller = new em.external.br.com.codenation.hospital.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/gestaohospital-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (200) GET:/v1/hospitais/{hospital_id}
    */
    @Test @Timeout(60)
    public void test_89_getOnHospitaiReturnsObject() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("HospitalDB", "hospital_collection")
                .d("{\"id\":\"ira9M*QrOXtf3\", \"name\":\"oU6T3DF9oNTyh\", \"address\":\"0j7RFPm4VJ\", \"beds\":{\"$numberInt\":\"315\"}, \"availableBeds\":{\"$numberInt\":\"787\"}, \"location\":{\"id\":\"4uE\", \"name\":\"lgd5vLiEwgP3\", \"referenceId\":\"gIXeM6\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.21037241301280707\"}, {\"$numberDouble\":\"0.4431933358463934\"}], \"type\":\"Point\"}}, \"patients\":[{\"id\":\"b\", \"name\":\"2M5csm6CJ\", \"cpf\":\"Di\", \"birthDate\":{\"$date\":{\"$numberLong\":\"3427329600000\"}}, \"gender\":\"S80QxYUFT\", \"entryDate\":{\"$date\":{\"$numberLong\":\"221374800000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"2948500800000\"}}, \"active\":true, \"location\":{\"id\":\"dGBUrtNI\", \"name\":\"jX\", \"referenceId\":\"F8iE0H8Seb7\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.10305950917484341\"}, {\"$numberDouble\":\"0.6343058872061627\"}], \"type\":\"Point\"}}}, {\"id\":\"qV\", \"name\":\"O3BQLr7EnSK\", \"cpf\":\"HCaqY\", \"birthDate\":{\"$date\":{\"$numberLong\":\"1952312400000\"}}, \"gender\":\"TAV6IHhd4j45vu\", \"entryDate\":{\"$date\":{\"$numberLong\":\"-221252400000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"4062628800000\"}}, \"active\":true, \"location\":{\"id\":\"FKXMBIu0INPwxbSo\", \"name\":\"\", \"referenceId\":\"ivjiIS9TM9Kg\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.24797659155562213\"}, {\"$numberDouble\":\"0.5516189976396462\"}], \"type\":\"Point\"}}}, {\"id\":\"aaCM2IXnQ\", \"name\":\"3S9\", \"cpf\":\"rczaOn8I3EubaG\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-1739300400000\"}}, \"gender\":\"S9\", \"entryDate\":{\"$date\":{\"$numberLong\":\"150782400000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"-2073668400000\"}}, \"active\":true, \"location\":{\"id\":\"OV\", \"name\":\"IlXM5sJ5En\", \"referenceId\":\"h5le54OLU\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.2870132339897944\"}, {\"$numberDouble\":\"0.5449971749776983\"}], \"type\":\"Point\"}}}, {\"id\":\"_EM_2531_XYZ_\", \"name\":\"3W\", \"cpf\":\"g_fA841R1tl4qRc\", \"birthDate\":{\"$date\":{\"$numberLong\":\"295848000000\"}}, \"gender\":\"H4Z\", \"entryDate\":{\"$date\":{\"$numberLong\":\"-651787200000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"3992990400000\"}}, \"active\":true, \"location\":{\"id\":\"iUxWW2nE\", \"name\":\"6t\", \"referenceId\":\"wo\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.3046057176997671\"}, {\"$numberDouble\":\"0.04993881740994477\"}], \"type\":\"Point\"}}}], \"products\":[{\"_id\":{\"timestamp\":{\"$numberInt\":\"653\"}, \"machineIdentifier\":{\"$numberInt\":\"407\"}, \"processIdentifier\":{\"$numberInt\":\"774\"}, \"counter\":{\"$numberInt\":\"451\"}}, \"name\":\"y2YnJ4s\", \"description\":\"yM_QMe9YQJ89\", \"quantity\":{\"$numberInt\":\"-1173572803\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"537\"}, \"machineIdentifier\":{\"$numberInt\":\"351\"}, \"processIdentifier\":{\"$numberInt\":\"828\"}, \"counter\":{\"$numberInt\":\"789\"}}, \"name\":\"zPr07o\", \"description\":\"UUb4\", \"quantity\":{\"$numberInt\":\"379\"}, \"productType\":\"COMMON\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"752\"}, \"machineIdentifier\":{\"$numberInt\":\"537\"}, \"processIdentifier\":{\"$numberInt\":\"405\"}, \"counter\":{\"$numberInt\":\"606\"}}, \"name\":\"q8cq9M\", \"description\":\"bLeaKtjj53u0jCS\", \"quantity\":{\"$numberInt\":\"913\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"725\"}, \"machineIdentifier\":{\"$numberInt\":\"290\"}, \"processIdentifier\":{\"$numberInt\":\"567\"}, \"counter\":{\"$numberInt\":\"634\"}}, \"name\":\"14JsMq1p2P\", \"description\":\"X9IKS0jA\", \"quantity\":{\"$numberInt\":\"621\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"265\"}, \"machineIdentifier\":{\"$numberInt\":\"869\"}, \"processIdentifier\":{\"$numberInt\":\"751\"}, \"counter\":{\"$numberInt\":\"7\"}}, \"name\":\"2h3kdOyJi\", \"description\":\"8DdQsIb\", \"quantity\":{\"$numberInt\":\"834953827\"}, \"productType\":\"COMMON\"}], \"_id\":{\"$oid\":\"e18ecf0532d676fd47cd558d\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v1/hospitais/e18ecf0532d676fd47cd558d")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("oU6T3DF9oNTyh"))
                .body("'address'", containsString("0j7RFPm4VJ"))
                .body("'beds'", numberMatches(315.0))
                .body("'availableBeds'", numberMatches(787.0))
                .body("'longitude'", containsString("0.21037241301280707"))
                .body("'latitude'", containsString("0.4431933358463934"));
    }
}
