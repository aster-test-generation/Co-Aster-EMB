package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:43:27.165-04:00[America/New_York]
 * <br>
*  The generated test suite contains 408 tests
 * <br>
*  Covered targets: 2217
 * <br>
*  Used time: 1h 5m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_gestaohospitaldefault_1234_Test_256_test_256_deleteOnHospitaiReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.br.com.codenation.hospital.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/gestaohospital-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) DELETE:/v1/hospitais/{hospital_id}
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_256_deleteOnHospitaiReturnsMismatchResponseWithSchema() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("HospitalDB", "hospital_collection")
                .d("{\"id\":\"Uwm4EORadLXQ_Gv\", \"name\":\"_EM_2616_XYZ_\", \"address\":\"sKE\", \"beds\":{\"$numberInt\":\"262740\"}, \"availableBeds\":{\"$numberInt\":\"508\"}, \"location\":{\"id\":\"SgArwl0TV6fW_K(5\", \"name\":\"PFi\", \"referenceId\":\"Y\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"9429980.765496721\"}, {\"$numberDouble\":\"0.4694242815167139\"}], \"type\":\"Point\"}}, \"patients\":[{\"id\":\"cOpGG8D5\", \"name\":\"U1\", \"cpf\":\"W\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-1007060400000\"}}, \"gender\":\"3x_PQ\", \"entryDate\":{\"$date\":{\"$numberLong\":\"2710990800000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"1795064400000\"}}, \"active\":true, \"location\":{\"id\":\"yP_ymi9D0o22T6R\", \"name\":\"rVkTTIoY6yr1Ib36\", \"referenceId\":\"Kw6q497Rfm\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.09191771923877046\"}, {\"$numberDouble\":\"0.4935595124547033\"}], \"type\":\"Point\"}}}, {\"id\":\"sfANBqTjUJ0TyKjz\", \"name\":\"buDewmwZm0H_D5c\", \"cpf\":\"qTW_Kl0l\", \"birthDate\":{\"$date\":{\"$numberLong\":\"738734400000\"}}, \"gender\":\"_Cey\", \"entryDate\":{\"$date\":{\"$numberLong\":\"2781925200000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"2380075200000\"}}, \"active\":false, \"location\":{\"id\":\"KVxCSu3\", \"name\":\"PvOI5dAXz\", \"referenceId\":\"IiLwTF9s8X\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.45466867024667634\"}, {\"$numberDouble\":\"0.986691479022156\"}], \"type\":\"Point\"}}}], \"products\":[{\"_id\":{\"timestamp\":{\"$numberInt\":\"782\"}, \"machineIdentifier\":{\"$numberInt\":\"916\"}, \"processIdentifier\":{\"$numberInt\":\"637\"}, \"counter\":{\"$numberInt\":\"761\"}}, \"name\":\"Ele8IeCV\", \"description\":\"0pI_SwfDNE\", \"quantity\":{\"$numberInt\":\"721\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"12\"}, \"machineIdentifier\":{\"$numberInt\":\"416\"}, \"processIdentifier\":{\"$numberInt\":\"222\"}, \"counter\":{\"$numberInt\":\"643\"}}, \"name\":\"Q1zYi17\", \"description\":\"K9IibPQcm\", \"quantity\":{\"$numberInt\":\"428\"}, \"productType\":\"COMMON\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"347\"}, \"machineIdentifier\":{\"$numberInt\":\"569\"}, \"processIdentifier\":{\"$numberInt\":\"973\"}, \"counter\":{\"$numberInt\":\"562\"}}, \"name\":\"iX5BIlaj\", \"description\":\"FuQeS\", \"quantity\":{\"$numberInt\":\"600\"}, \"productType\":\"COMMON\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"917\"}, \"machineIdentifier\":{\"$numberInt\":\"71\"}, \"processIdentifier\":{\"$numberInt\":\"407\"}, \"counter\":{\"$numberInt\":\"-1717022517\"}}, \"name\":\"R\", \"description\":\"ntc\", \"quantity\":{\"$numberInt\":\"565\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"846\"}, \"machineIdentifier\":{\"$numberInt\":\"125\"}, \"processIdentifier\":{\"$numberInt\":\"475\"}, \"counter\":{\"$numberInt\":\"827\"}}, \"name\":\"UNolMY7Jdw4fv96W\", \"description\":\"n\", \"quantity\":{\"$numberInt\":\"980\"}, \"productType\":\"BLOOD\"}], \"_id\":{\"$oid\":\"1aa9d0da57e9e8da2f0c0a50\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/v1/hospitais/{hospital_id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/v1/hospitais/_EM_951_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
