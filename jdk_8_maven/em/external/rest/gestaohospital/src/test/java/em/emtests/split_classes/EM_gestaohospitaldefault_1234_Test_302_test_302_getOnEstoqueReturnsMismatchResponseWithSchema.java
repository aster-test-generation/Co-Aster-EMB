package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:43:27.165-04:00[America/New_York]
 * <br>
*  The generated test suite contains 408 tests
 * <br>
*  Covered targets: 2217
 * <br>
*  Used time: 1h 5m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_gestaohospitaldefault_1234_Test_302_test_302_getOnEstoqueReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.br.com.codenation.hospital.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/gestaohospital-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) GET:/v1/hospitais/{hospital_id}/estoque
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_302_getOnEstoqueReturnsMismatchResponseWithSchema() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("HospitalDB", "hospital_collection")
                .d("{\"id\":\"_EM_1428_XYZ_\", \"name\":\"\", \"address\":\"jhFOj8npHkj\", \"beds\":{\"$numberInt\":\"388\"}, \"availableBeds\":{\"$numberInt\":\"-1310674\"}, \"location\":{\"id\":\"_EM_1429_XYZ_\", \"name\":\"e79sPsH\", \"referenceId\":\"wh3bSNQDys9kZk\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.435270752445284\"}, {\"$numberDouble\":\"0.8441102390094277\"}], \"type\":\"Point\"}}, \"patients\":[{\"id\":\"CS9Xp5C9vmZeHVUF\", \"name\":\"7sCAuC3\", \"cpf\":\"X60HS7n\", \"birthDate\":{\"$date\":{\"$numberLong\":\"2211944400000\"}}, \"gender\":\"R3\", \"entryDate\":{\"$date\":{\"$numberLong\":\"3795480000000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"2943057600000\"}}, \"active\":true, \"location\":{\"id\":\"biO6bIKs0MUO8\", \"name\":\"a5bEqUwAzW8Wq\", \"referenceId\":\"fJ\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.45879274934674263\"}, {\"$numberDouble\":\"0.7358931849398987\"}], \"type\":\"Point\"}}}, {\"id\":\"iiyY3\", \"name\":\"Zv3kv1tvnTJ\", \"cpf\":\"\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-284324400000\"}}, \"gender\":\"GlUkGBhIBoZO4LHB\", \"entryDate\":{\"$date\":{\"$numberLong\":\"3183598800000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"3999988800000\"}}, \"active\":true, \"location\":{\"id\":\"z8nJJ\", \"name\":\"KhjkRKJzA\", \"referenceId\":\"mRILpXWV\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.48032233944840086\"}, {\"$numberDouble\":\"0.2538454676502375\"}], \"type\":\"Point\"}}}, {\"id\":\"VfWtYR2\", \"name\":\"U1u4J3M68h7WfMq\", \"cpf\":\"ZgfCGmiez7gW3W8Y\", \"birthDate\":{\"$date\":{\"$numberLong\":\"2848363200000\"}}, \"gender\":\"KRWnO0ljF\", \"entryDate\":{\"$date\":{\"$numberLong\":\"3254965200000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"-1089057600000\"}}, \"active\":true, \"location\":{\"id\":\"3YCUHV2B_E4Xv81\", \"name\":\"ZFl8b7Pnj9xnvnT\", \"referenceId\":\"8QO9LJBlU8\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.4548148966775518\"}, {\"$numberDouble\":\"0.6675739829545446\"}], \"type\":\"Point\"}}}, {\"id\":\"7GN\", \"name\":\"e\", \"cpf\":\"0YmV7vNYCsQj\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-1142967600000\"}}, \"gender\":\"_EM_1684_XYZ_\", \"entryDate\":{\"$date\":{\"$numberLong\":\"-990216000000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"1946088000000\"}}, \"active\":false, \"location\":{\"id\":\"tvOQj1tI\", \"name\":\"R3Bd\", \"referenceId\":\"LZw\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.0672074489\"}, {\"$numberDouble\":\"265.61045057313385\"}], \"type\":\"Point\"}}}, {\"id\":\"2eoAX\", \"name\":\"t8YjpIR5b2y3X\", \"cpf\":\"GvCV\", \"birthDate\":{\"$date\":{\"$numberLong\":\"3568856400000\"}}, \"gender\":\"yLy3SkNteUpr\", \"entryDate\":{\"$date\":{\"$numberLong\":\"3881278800000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"4081377600000\"}}, \"active\":true, \"location\":{\"id\":\"KU2jA3btNlWr1k5\", \"name\":\"7YcQrab1\", \"referenceId\":\"2STkAUVUVPR\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.9314241356238796\"}, {\"$numberDouble\":\"0.5990585143458359\"}], \"type\":\"Point\"}}}], \"products\":[{\"_id\":{\"timestamp\":{\"$numberInt\":\"503\"}, \"machineIdentifier\":{\"$numberInt\":\"893\"}, \"processIdentifier\":{\"$numberInt\":\"576\"}, \"counter\":{\"$numberInt\":\"684\"}}, \"name\":\"2uU3pD1JysHh93\", \"description\":\"LxJY_KrW8bLPhGDX\", \"quantity\":{\"$numberInt\":\"703\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"226\"}, \"machineIdentifier\":{\"$numberInt\":\"580\"}, \"processIdentifier\":{\"$numberInt\":\"873\"}, \"counter\":{\"$numberInt\":\"-1469351290\"}}, \"name\":\"_EM_1685_XYZ_\", \"description\":\"j4VtC\", \"quantity\":{\"$numberInt\":\"1173676123\"}, \"productType\":\"COMMON\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"608\"}, \"machineIdentifier\":{\"$numberInt\":\"126\"}, \"processIdentifier\":{\"$numberInt\":\"523\"}, \"counter\":{\"$numberInt\":\"678\"}}, \"name\":\"uRd_q0k8oc\", \"description\":\"rVUeH3ky5jfX\", \"quantity\":{\"$numberInt\":\"49\"}, \"productType\":\"COMMON\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"750\"}, \"machineIdentifier\":{\"$numberInt\":\"214\"}, \"processIdentifier\":{\"$numberInt\":\"436\"}, \"counter\":{\"$numberInt\":\"17\"}}, \"name\":\"\", \"description\":\"ewr0c\", \"quantity\":{\"$numberInt\":\"213\"}, \"productType\":\"BLOOD\"}], \"_id\":{\"$oid\":\"1aca14510635290a3839f49c\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/v1/hospitais/{hospital_id}/estoque'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/v1/hospitais/_EM_1430_XYZ_/estoque")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
