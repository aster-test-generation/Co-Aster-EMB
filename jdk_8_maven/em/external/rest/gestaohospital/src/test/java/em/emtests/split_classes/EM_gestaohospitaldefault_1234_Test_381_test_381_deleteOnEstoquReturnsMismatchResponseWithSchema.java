package em.emtests.split_classes;
/**
* LICENSE DISCLAIMER
* This file has been generated by EvoMaster.
* The content of this file is not subject to the license of EvoMaster itself, i.e., LGPL.
* This generated software (i.e., the test suite in this file) can be freely used, modified, 
* and distributed as you see fit without any restrictions.
*/
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.mongo.dsl.MongoDsl.mongo;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.MongoInsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-09-03T21:43:27.165-04:00[America/New_York]
 * <br>
*  The generated test suite contains 408 tests
 * <br>
*  Covered targets: 2217
 * <br>
*  Used time: 1h 5m 2s
 * <br>
*  Needed budget for current results: 99%
 * <br>
*  
*/

public class EM_gestaohospitaldefault_1234_Test_381_test_381_deleteOnEstoquReturnsMismatchResponseWithSchema {
    

    
    private static final SutHandler controller = new em.external.br.com.codenation.hospital.ExternalEvoMasterController("/home/rhuang329/coaster/EMB/exp2/gestaohospital-sut.jar");
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }

    /**
    * Calls:
    * (400) DELETE:/v1/hospitais/{hospital_id}/estoque/{produto_id}
    * Found 1 potential fault of type-code 101
    */
    @Test @Timeout(60)
    public void test_381_deleteOnEstoquReturnsMismatchResponseWithSchema() throws Exception {
        List<MongoInsertionDto> insertions = mongo().insertInto("HospitalDB", "product_collection")
                .d("{\"name\":\"kg6WSUl8uiXW\", \"description\":\"tBzcu0M48ej\", \"quantity\":{\"$numberInt\":\"-262525\"}, \"productType\":\"BLOOD\", \"_id\":{\"$oid\":\"d4a178a8a00e9c440daf1f1a\"}}")
            .and().insertInto("HospitalDB", "hospital_collection")
                .d("{\"id\":\"80ZsPq\", \"name\":\"cf7K\", \"address\":\"lXT9hPyVYxT\", \"beds\":{\"$numberInt\":\"932\"}, \"availableBeds\":{\"$numberInt\":\"944\"}, \"location\":{\"id\":\"Xv_6lA5VPS\", \"name\":\"uZjkVB8Zpm8\", \"referenceId\":\"3jVQjAgB_\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.45916750846512255\"}, {\"$numberDouble\":\"0.8262277457124805\"}], \"type\":\"Point\"}}, \"patients\":[{\"id\":\"crLCCzv_\", \"name\":\"qY3KLAgMLN\", \"cpf\":\"ko\", \"birthDate\":{\"$date\":{\"$numberLong\":\"2134872000000\"}}, \"gender\":\"81Ww0FH\", \"entryDate\":{\"$date\":{\"$numberLong\":\"3107476800000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"-1686078000000\"}}, \"active\":true, \"location\":{\"id\":\"a\", \"name\":\"HD6VZKYvHI2Co4k\", \"referenceId\":\"2scv8\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.5609383546961502\"}, {\"$numberDouble\":\"0.41420370804154105\"}], \"type\":\"Point\"}}}, {\"id\":\"t\", \"name\":\"_B8\", \"cpf\":\"\", \"birthDate\":{\"$date\":{\"$numberLong\":\"4006213200000\"}}, \"gender\":\"\", \"entryDate\":{\"$date\":{\"$numberLong\":\"983077200000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"-394056000000\"}}, \"active\":false, \"location\":{\"id\":\"qyJnWpPng\", \"name\":\"YKx8lCp\", \"referenceId\":\"\", \"locationCategory\":\"HOSPITAL\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.9309266355458332\"}, {\"$numberDouble\":\"0.3527171995494758\"}], \"type\":\"Point\"}}}, {\"id\":\"QyU1\", \"name\":\"yl74UjrEVMQx8GL\", \"cpf\":\"OABm_BmGZA\", \"birthDate\":{\"$date\":{\"$numberLong\":\"-76536000000\"}}, \"gender\":\"LLALy\", \"entryDate\":{\"$date\":{\"$numberLong\":\"6411600000\"}}, \"exitDate\":{\"$date\":{\"$numberLong\":\"-275684400000\"}}, \"active\":true, \"location\":{\"id\":\"zWq13aE\", \"name\":\"f4CXtag_bcOU5eSU\", \"referenceId\":\"jAgzC1oXV4v2yp\", \"locationCategory\":\"PATIENT\", \"position\":{\"coordinates\":[{\"$numberDouble\":\"0.49415390372469836\"}, {\"$numberDouble\":\"0.9693778531327849\"}], \"type\":\"Point\"}}}], \"products\":[{\"_id\":{\"timestamp\":{\"$numberInt\":\"485\"}, \"machineIdentifier\":{\"$numberInt\":\"765\"}, \"processIdentifier\":{\"$numberInt\":\"268\"}, \"counter\":{\"$numberInt\":\"349\"}}, \"name\":\"\", \"description\":\"pPf\", \"quantity\":{\"$numberInt\":\"552\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"1254002666\"}, \"machineIdentifier\":{\"$numberInt\":\"-354276357\"}, \"processIdentifier\":{\"$numberInt\":\"879\"}, \"counter\":{\"$numberInt\":\"441\"}}, \"name\":\"P\", \"description\":\"OV40jbZUGMojKkx\", \"quantity\":{\"$numberInt\":\"70\"}, \"productType\":\"BLOOD\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"51\"}, \"machineIdentifier\":{\"$numberInt\":\"890\"}, \"processIdentifier\":{\"$numberInt\":\"978\"}, \"counter\":{\"$numberInt\":\"572\"}}, \"name\":\"xZk11b\", \"description\":\"pO\", \"quantity\":{\"$numberInt\":\"47\"}, \"productType\":\"COMMON\"}, {\"_id\":{\"timestamp\":{\"$numberInt\":\"149\"}, \"machineIdentifier\":{\"$numberInt\":\"644\"}, \"processIdentifier\":{\"$numberInt\":\"351\"}, \"counter\":{\"$numberInt\":\"534\"}}, \"name\":\"lWX0ZK_q0\", \"description\":\"N0\", \"quantity\":{\"$numberInt\":\"166\"}, \"productType\":\"COMMON\"}], \"_id\":{\"$oid\":\"c5ff23f29b7a6a2b33bbf5fe\"}}")
            .dtos();
        MongoInsertionResultsDto insertionsresult = controller.execInsertionsIntoMongoDatabase(insertions);
        
        // Fault101. Received A Response From API With A Structure/Data That Is Not Matching Its Schema. Type: validation.response.status.unknown. Response status 400 not defined for path '/v1/hospitais/{hospital_id}/estoque/{produto_id}'.
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .delete(baseUrlOfSut + "/v1/hospitais/_EM_3117_XYZ_/estoque/d4a178a8a00e9c440daf1f1a")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
    }
}
